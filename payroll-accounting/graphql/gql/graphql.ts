/* eslint-disable */
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
export type MakeEmpty<T extends { [key: string]: unknown }, K extends keyof T> = { [_ in K]?: never };
export type Incremental<T> = T | { [P in keyof T]?: P extends ' $fragmentName' | '__typename' ? T[P] : never };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: { input: string; output: string; }
  String: { input: string; output: string; }
  Boolean: { input: boolean; output: boolean; }
  Int: { input: number; output: number; }
  Float: { input: number; output: number; }
  /** Built-in java.math.BigDecimal */
  BigDecimal: { input: any; output: any; }
  /** Built-in java.math.BigInteger */
  BigInteger: { input: any; output: any; }
  /** Built-in Byte as Int */
  Byte: { input: any; output: any; }
  /** Built-in scalar representing an instant in time */
  Date: { input: any; output: any; }
  /** An apollo upload compatible scalar for multipart uploads */
  FileUpload: { input: any; output: any; }
  /** Built-in scalar representing an instant in time */
  Instant: { input: any; output: any; }
  /** Built-in scalar for map-like structures */
  LinkedHashMap_String_EmployeeScheduleDtoScalar: { input: any; output: any; }
  /** Built-in scalar representing a local date */
  LocalDate: { input: any; output: any; }
  /** Built-in scalar representing a local date-time */
  LocalDateTime: { input: any; output: any; }
  /** Long type */
  Long: { input: any; output: any; }
  /** Built-in scalar for map-like structures */
  Map_String_BigDecimalScalar: { input: any; output: any; }
  /** Built-in scalar for map-like structures */
  Map_String_CESupportingDocuScalar: { input: any; output: any; }
  /** Built-in scalar for map-like structures */
  Map_String_DohQualityManagementScalar: { input: any; output: any; }
  /** Built-in scalar for map-like structures */
  Map_String_IntegerScalar: { input: any; output: any; }
  /** Built-in scalar for map-like structures */
  Map_String_List_EventCalendarScalar: { input: any; output: any; }
  /** Built-in scalar for map-like structures */
  Map_String_List_JournalEntryViewDtoScalar: { input: any; output: any; }
  /** Built-in scalar for map-like structures */
  Map_String_List_StringScalar: { input: any; output: any; }
  /** Built-in scalar for map-like structures */
  Map_String_Map_String_BigDecimalScalar: { input: any; output: any; }
  /** Built-in scalar for map-like structures */
  Map_String_Map_String_ObjectScalar: { input: any; output: any; }
  /** Built-in scalar for map-like structures */
  Map_String_ObjectScalar: { input: any; output: any; }
  /** Built-in scalar for map-like structures */
  Map_String_ScheduleLockScalar: { input: any; output: any; }
  /** Built-in scalar for map-like structures */
  Map_String_StringScalar: { input: any; output: any; }
  /** Built-in scalar for map-like structures */
  Map_String_UUIDScalar: { input: any; output: any; }
  /** Built-in scalar for dynamic values */
  ObjectScalar: { input: any; output: any; }
  /** Built-in scalar representing a SQL compliant local date */
  SqlDate: { input: any; output: any; }
  /** Unrepresentable type */
  UNREPRESENTABLE: { input: any; output: any; }
  /** UUID String */
  UUID: { input: any; output: any; }
};

export type ArInvoiceDto = {
  __typename?: 'ARInvoiceDto';
  approvalCode?: Maybe<Scalars['String']['output']>;
  invoiceDate?: Maybe<Scalars['String']['output']>;
  itemName?: Maybe<Scalars['String']['output']>;
  soa_no?: Maybe<Scalars['String']['output']>;
  totalAmountDue?: Maybe<Scalars['BigDecimal']['output']>;
  totalHCIAmount?: Maybe<Scalars['BigDecimal']['output']>;
  totalPFAmount?: Maybe<Scalars['BigDecimal']['output']>;
};

export type AccountBalances = {
  __typename?: 'AccountBalances';
  abYear?: Maybe<Scalars['Int']['output']>;
  begMonth?: Maybe<Scalars['Int']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  endDate?: Maybe<Scalars['Date']['output']>;
  headerLedgerId?: Maybe<Scalars['UUID']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  startDate?: Maybe<Scalars['Date']['output']>;
};

export type AccountBalancesItem = {
  __typename?: 'AccountBalancesItem';
  accountBalances?: Maybe<AccountBalances>;
  credit?: Maybe<Scalars['BigDecimal']['output']>;
  debit?: Maybe<Scalars['BigDecimal']['output']>;
  headerId?: Maybe<Scalars['UUID']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  journalAccount?: Maybe<ChartOfAccountGenerate>;
  ledgerId?: Maybe<Scalars['UUID']['output']>;
};

export type AccountConfig = {
  __typename?: 'AccountConfig';
  accountLists?: Maybe<Array<Maybe<AccountList>>>;
  book?: Maybe<Scalars['String']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  docType?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  transactionType?: Maybe<TransactionType>;
};

export type AccountList = {
  __typename?: 'AccountList';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  creditAccount?: Maybe<ChartOfAccount>;
  creditTag?: Maybe<Scalars['String']['output']>;
  debitAccount?: Maybe<ChartOfAccount>;
  debitTag?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  parent?: Maybe<AccountConfig>;
  status?: Maybe<Scalars['Int']['output']>;
};

export type AccountPayableDetialsDtoInput = {
  amount?: InputMaybe<Scalars['BigDecimal']['input']>;
  department?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  discAmount?: InputMaybe<Scalars['BigDecimal']['input']>;
  discRate?: InputMaybe<Scalars['BigDecimal']['input']>;
  ewtAmount?: InputMaybe<Scalars['BigDecimal']['input']>;
  ewtRate?: InputMaybe<Scalars['BigDecimal']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  isNew?: InputMaybe<Scalars['Boolean']['input']>;
  netAmount?: InputMaybe<Scalars['BigDecimal']['input']>;
  refNo?: InputMaybe<Scalars['String']['input']>;
  remarksNotes?: InputMaybe<Scalars['String']['input']>;
  taxDesc?: InputMaybe<Scalars['String']['input']>;
  transType?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  vatAmount?: InputMaybe<Scalars['BigDecimal']['input']>;
  vatInclusive?: InputMaybe<Scalars['Boolean']['input']>;
};

export type AccountReceivable = {
  __typename?: 'AccountReceivable';
  accountReceivableItems?: Maybe<Array<Maybe<AccountReceivableItems>>>;
  affiliationFee?: Maybe<Scalars['BigDecimal']['output']>;
  arNo?: Maybe<Scalars['String']['output']>;
  arTransactions?: Maybe<Array<Maybe<ArTransaction>>>;
  balance?: Maybe<Scalars['BigDecimal']['output']>;
  billingScheduleNo?: Maybe<Scalars['String']['output']>;
  companyAccount?: Maybe<CompanyAccount>;
  companyName?: Maybe<Scalars['String']['output']>;
  contactNamePA?: Maybe<Scalars['String']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  credit?: Maybe<Scalars['BigDecimal']['output']>;
  details?: Maybe<Scalars['Map_String_StringScalar']['output']>;
  domain?: Maybe<Scalars['String']['output']>;
  dueDate?: Maybe<Scalars['SqlDate']['output']>;
  electricity?: Maybe<Scalars['BigDecimal']['output']>;
  flagValue?: Maybe<Scalars['String']['output']>;
  groups?: Maybe<Scalars['Map_String_UUIDScalar']['output']>;
  hci?: Maybe<Scalars['BigDecimal']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  memo?: Maybe<Scalars['BigDecimal']['output']>;
  negativeHciAmount?: Maybe<Scalars['BigDecimal']['output']>;
  negativePfAmount?: Maybe<Scalars['BigDecimal']['output']>;
  negativeTotalAmount?: Maybe<Scalars['BigDecimal']['output']>;
  other?: Maybe<Scalars['BigDecimal']['output']>;
  payment?: Maybe<Scalars['BigDecimal']['output']>;
  pf?: Maybe<Scalars['BigDecimal']['output']>;
  postedLedger?: Maybe<Scalars['UUID']['output']>;
  receivableAmt?: Maybe<Scalars['BigDecimal']['output']>;
  referenceNo?: Maybe<Scalars['String']['output']>;
  remarks?: Maybe<Scalars['String']['output']>;
  rental?: Maybe<Scalars['BigDecimal']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  taxAmount?: Maybe<Scalars['BigDecimal']['output']>;
  totals?: Maybe<Scalars['BigDecimal']['output']>;
  transactionDate?: Maybe<Scalars['SqlDate']['output']>;
  varA?: Maybe<Scalars['BigDecimal']['output']>;
  varB?: Maybe<Scalars['BigDecimal']['output']>;
  varC?: Maybe<Scalars['BigDecimal']['output']>;
  yearList?: Maybe<Scalars['String']['output']>;
};

export type AccountReceivableInput = {
  accountReceivableItems?: InputMaybe<Array<InputMaybe<AccountReceivableItemsInput>>>;
  affiliationFee?: InputMaybe<Scalars['BigDecimal']['input']>;
  arNo?: InputMaybe<Scalars['String']['input']>;
  arTransactions?: InputMaybe<Array<InputMaybe<ArTransactionInput>>>;
  balance?: InputMaybe<Scalars['BigDecimal']['input']>;
  billingScheduleNo?: InputMaybe<Scalars['String']['input']>;
  companyAccount?: InputMaybe<CompanyAccountInput>;
  companyName?: InputMaybe<Scalars['String']['input']>;
  contactNamePA?: InputMaybe<Scalars['String']['input']>;
  credit?: InputMaybe<Scalars['BigDecimal']['input']>;
  dueDate?: InputMaybe<Scalars['SqlDate']['input']>;
  electricity?: InputMaybe<Scalars['BigDecimal']['input']>;
  flagValue?: InputMaybe<Scalars['String']['input']>;
  groups?: InputMaybe<Scalars['Map_String_UUIDScalar']['input']>;
  hci?: InputMaybe<Scalars['BigDecimal']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  memo?: InputMaybe<Scalars['BigDecimal']['input']>;
  negativeHciAmount?: InputMaybe<Scalars['BigDecimal']['input']>;
  negativePfAmount?: InputMaybe<Scalars['BigDecimal']['input']>;
  negativeTotalAmount?: InputMaybe<Scalars['BigDecimal']['input']>;
  other?: InputMaybe<Scalars['BigDecimal']['input']>;
  payment?: InputMaybe<Scalars['BigDecimal']['input']>;
  pf?: InputMaybe<Scalars['BigDecimal']['input']>;
  postedLedger?: InputMaybe<Scalars['UUID']['input']>;
  receivableAmt?: InputMaybe<Scalars['BigDecimal']['input']>;
  referenceNo?: InputMaybe<Scalars['String']['input']>;
  remarks?: InputMaybe<Scalars['String']['input']>;
  rental?: InputMaybe<Scalars['BigDecimal']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  taxAmount?: InputMaybe<Scalars['BigDecimal']['input']>;
  totals?: InputMaybe<Scalars['BigDecimal']['input']>;
  transactionDate?: InputMaybe<Scalars['SqlDate']['input']>;
  varA?: InputMaybe<Scalars['BigDecimal']['input']>;
  varB?: InputMaybe<Scalars['BigDecimal']['input']>;
  varC?: InputMaybe<Scalars['BigDecimal']['input']>;
  yearList?: InputMaybe<Scalars['String']['input']>;
};

export type AccountReceivableItems = {
  __typename?: 'AccountReceivableItems';
  accountReceivable?: Maybe<AccountReceivable>;
  amount?: Maybe<Scalars['BigDecimal']['output']>;
  apProcess?: Maybe<Scalars['Boolean']['output']>;
  arTransactionItems?: Maybe<Array<Maybe<ArTransactionDetails>>>;
  billMonth?: Maybe<Scalars['Date']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  credit?: Maybe<Scalars['BigDecimal']['output']>;
  cwt?: Maybe<Scalars['Boolean']['output']>;
  debit?: Maybe<Scalars['BigDecimal']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  details?: Maybe<Scalars['Map_String_StringScalar']['output']>;
  discount?: Maybe<Scalars['BigDecimal']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  lastTouch?: Maybe<Scalars['String']['output']>;
  memo?: Maybe<Scalars['BigDecimal']['output']>;
  payment?: Maybe<Scalars['BigDecimal']['output']>;
  recordNo?: Maybe<Scalars['String']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  transType?: Maybe<Scalars['String']['output']>;
  transfer?: Maybe<Scalars['BigDecimal']['output']>;
  type?: Maybe<Scalars['String']['output']>;
};

export type AccountReceivableItemsInput = {
  accountReceivable?: InputMaybe<AccountReceivableInput>;
  amount?: InputMaybe<Scalars['BigDecimal']['input']>;
  apProcess?: InputMaybe<Scalars['Boolean']['input']>;
  arTransactionItems?: InputMaybe<Array<InputMaybe<ArTransactionDetailsInput>>>;
  billMonth?: InputMaybe<Scalars['Date']['input']>;
  credit?: InputMaybe<Scalars['BigDecimal']['input']>;
  cwt?: InputMaybe<Scalars['Boolean']['input']>;
  debit?: InputMaybe<Scalars['BigDecimal']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  details?: InputMaybe<Scalars['Map_String_StringScalar']['input']>;
  discount?: InputMaybe<Scalars['BigDecimal']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  memo?: InputMaybe<Scalars['BigDecimal']['input']>;
  payment?: InputMaybe<Scalars['BigDecimal']['input']>;
  recordNo?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  transType?: InputMaybe<Scalars['String']['input']>;
  transfer?: InputMaybe<Scalars['BigDecimal']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};

export enum AccountType {
  Asset = 'ASSET',
  CostOfSale = 'COST_OF_SALE',
  Equity = 'EQUITY',
  Expense = 'EXPENSE',
  Liability = 'LIABILITY',
  Revenue = 'REVENUE'
}

export type AccountingCategory = {
  __typename?: 'AccountingCategory';
  accountType?: Maybe<Scalars['String']['output']>;
  categoryCode?: Maybe<Scalars['String']['output']>;
  categoryDescription?: Maybe<Scalars['String']['output']>;
  code?: Maybe<Scalars['String']['output']>;
  config?: Maybe<CoaConfig>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  department?: Maybe<Array<Maybe<Scalars['UUID']['output']>>>;
  departments?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  domain?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  includeDepartments?: Maybe<Scalars['Boolean']['output']>;
  isActive?: Maybe<Scalars['Boolean']['output']>;
  isFixedAsset?: Maybe<Scalars['Boolean']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  motherAccounts?: Maybe<Scalars['String']['output']>;
  motherAccountsList?: Maybe<Array<Maybe<Scalars['UUID']['output']>>>;
  selectedDepartments?: Maybe<Array<Maybe<Scalars['UUID']['output']>>>;
  selectedDeps?: Maybe<Array<Maybe<Department>>>;
  sourceColumn?: Maybe<Scalars['String']['output']>;
};

export type AccountingCategoryInput = {
  accountType?: InputMaybe<Scalars['String']['input']>;
  categoryCode?: InputMaybe<Scalars['String']['input']>;
  categoryDescription?: InputMaybe<Scalars['String']['input']>;
  departments?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  includeDepartments?: InputMaybe<Scalars['Boolean']['input']>;
  isActive?: InputMaybe<Scalars['Boolean']['input']>;
  isFixedAsset?: InputMaybe<Scalars['Boolean']['input']>;
  motherAccounts?: InputMaybe<Scalars['String']['input']>;
  sourceColumn?: InputMaybe<Scalars['String']['input']>;
};

export type AccountsPayable = {
  __typename?: 'AccountsPayable';
  apCategory?: Maybe<Scalars['String']['output']>;
  apNo?: Maybe<Scalars['String']['output']>;
  appliedAmount?: Maybe<Scalars['BigDecimal']['output']>;
  apvDate?: Maybe<Scalars['Instant']['output']>;
  balance?: Maybe<Scalars['BigDecimal']['output']>;
  clearingAmount?: Maybe<Scalars['BigDecimal']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  daAmount?: Maybe<Scalars['BigDecimal']['output']>;
  debitAmount?: Maybe<Scalars['BigDecimal']['output']>;
  details?: Maybe<Scalars['Map_String_StringScalar']['output']>;
  disbursement?: Maybe<Scalars['String']['output']>;
  discAmount?: Maybe<Scalars['BigDecimal']['output']>;
  discountAmount?: Maybe<Scalars['BigDecimal']['output']>;
  dmAmount?: Maybe<Scalars['BigDecimal']['output']>;
  dmRefNo?: Maybe<Scalars['String']['output']>;
  doctorFee?: Maybe<Scalars['BigDecimal']['output']>;
  domain?: Maybe<Scalars['String']['output']>;
  dueDate?: Maybe<Scalars['Instant']['output']>;
  dueToDoctors?: Maybe<Scalars['BigDecimal']['output']>;
  ewt1Percent?: Maybe<Scalars['BigDecimal']['output']>;
  ewt2Percent?: Maybe<Scalars['BigDecimal']['output']>;
  ewt3Percent?: Maybe<Scalars['BigDecimal']['output']>;
  ewt4Percent?: Maybe<Scalars['BigDecimal']['output']>;
  ewt5Percent?: Maybe<Scalars['BigDecimal']['output']>;
  ewt7Percent?: Maybe<Scalars['BigDecimal']['output']>;
  ewt10Percent?: Maybe<Scalars['BigDecimal']['output']>;
  ewt15Percent?: Maybe<Scalars['BigDecimal']['output']>;
  ewt18Percent?: Maybe<Scalars['BigDecimal']['output']>;
  ewt30Percent?: Maybe<Scalars['BigDecimal']['output']>;
  ewtAmount?: Maybe<Scalars['BigDecimal']['output']>;
  flagValue?: Maybe<Scalars['String']['output']>;
  grossAmount?: Maybe<Scalars['BigDecimal']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  invoiceNo?: Maybe<Scalars['String']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  netAmount?: Maybe<Scalars['BigDecimal']['output']>;
  netOfDiscount?: Maybe<Scalars['BigDecimal']['output']>;
  netOfVat?: Maybe<Scalars['BigDecimal']['output']>;
  paymentTerms?: Maybe<PaymentTerm>;
  posted?: Maybe<Scalars['Boolean']['output']>;
  postedBy?: Maybe<Scalars['String']['output']>;
  postedLedger?: Maybe<Scalars['UUID']['output']>;
  readersFee?: Maybe<Scalars['BigDecimal']['output']>;
  receiving?: Maybe<ReceivingReport>;
  remarksNotes?: Maybe<Scalars['String']['output']>;
  rounding?: Maybe<Scalars['Int']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  supplier?: Maybe<Supplier>;
  supplierAmount?: Maybe<Scalars['BigDecimal']['output']>;
  transType?: Maybe<ApTransaction>;
  vatAmount?: Maybe<Scalars['BigDecimal']['output']>;
  vatInclusive?: Maybe<Scalars['Boolean']['output']>;
  vatRate?: Maybe<Scalars['BigDecimal']['output']>;
};

export type AccountsPayableDetails = {
  __typename?: 'AccountsPayableDetails';
  accountsPayable?: Maybe<AccountsPayable>;
  amount?: Maybe<Scalars['BigDecimal']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  department?: Maybe<Department>;
  discAmount?: Maybe<Scalars['BigDecimal']['output']>;
  discRate?: Maybe<Scalars['BigDecimal']['output']>;
  ewtAmount?: Maybe<Scalars['BigDecimal']['output']>;
  ewtRate?: Maybe<Scalars['BigDecimal']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  netAmount?: Maybe<Scalars['BigDecimal']['output']>;
  refId?: Maybe<Scalars['UUID']['output']>;
  refNo?: Maybe<Scalars['String']['output']>;
  remarksNotes?: Maybe<Scalars['String']['output']>;
  source?: Maybe<Scalars['String']['output']>;
  taxDesc?: Maybe<Scalars['String']['output']>;
  transType?: Maybe<ApTransaction>;
  vatAmount?: Maybe<Scalars['BigDecimal']['output']>;
  vatInclusive?: Maybe<Scalars['Boolean']['output']>;
};

export type AccountsPayableInput = {
  apCategory?: InputMaybe<Scalars['String']['input']>;
  apNo?: InputMaybe<Scalars['String']['input']>;
  appliedAmount?: InputMaybe<Scalars['BigDecimal']['input']>;
  apvDate?: InputMaybe<Scalars['Instant']['input']>;
  balance?: InputMaybe<Scalars['BigDecimal']['input']>;
  clearingAmount?: InputMaybe<Scalars['BigDecimal']['input']>;
  daAmount?: InputMaybe<Scalars['BigDecimal']['input']>;
  debitAmount?: InputMaybe<Scalars['BigDecimal']['input']>;
  disbursement?: InputMaybe<Scalars['String']['input']>;
  discAmount?: InputMaybe<Scalars['BigDecimal']['input']>;
  discountAmount?: InputMaybe<Scalars['BigDecimal']['input']>;
  dmAmount?: InputMaybe<Scalars['BigDecimal']['input']>;
  dmRefNo?: InputMaybe<Scalars['String']['input']>;
  doctorFee?: InputMaybe<Scalars['BigDecimal']['input']>;
  dueDate?: InputMaybe<Scalars['Instant']['input']>;
  dueToDoctors?: InputMaybe<Scalars['BigDecimal']['input']>;
  ewt1Percent?: InputMaybe<Scalars['BigDecimal']['input']>;
  ewt2Percent?: InputMaybe<Scalars['BigDecimal']['input']>;
  ewt3Percent?: InputMaybe<Scalars['BigDecimal']['input']>;
  ewt4Percent?: InputMaybe<Scalars['BigDecimal']['input']>;
  ewt5Percent?: InputMaybe<Scalars['BigDecimal']['input']>;
  ewt7Percent?: InputMaybe<Scalars['BigDecimal']['input']>;
  ewt10Percent?: InputMaybe<Scalars['BigDecimal']['input']>;
  ewt15Percent?: InputMaybe<Scalars['BigDecimal']['input']>;
  ewt18Percent?: InputMaybe<Scalars['BigDecimal']['input']>;
  ewt30Percent?: InputMaybe<Scalars['BigDecimal']['input']>;
  ewtAmount?: InputMaybe<Scalars['BigDecimal']['input']>;
  flagValue?: InputMaybe<Scalars['String']['input']>;
  grossAmount?: InputMaybe<Scalars['BigDecimal']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  invoiceNo?: InputMaybe<Scalars['String']['input']>;
  netAmount?: InputMaybe<Scalars['BigDecimal']['input']>;
  netOfDiscount?: InputMaybe<Scalars['BigDecimal']['input']>;
  netOfVat?: InputMaybe<Scalars['BigDecimal']['input']>;
  paymentTerms?: InputMaybe<PaymentTermInput>;
  posted?: InputMaybe<Scalars['Boolean']['input']>;
  postedBy?: InputMaybe<Scalars['String']['input']>;
  postedLedger?: InputMaybe<Scalars['UUID']['input']>;
  readersFee?: InputMaybe<Scalars['BigDecimal']['input']>;
  receiving?: InputMaybe<ReceivingReportInput>;
  remarksNotes?: InputMaybe<Scalars['String']['input']>;
  rounding?: InputMaybe<Scalars['Int']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  supplier?: InputMaybe<SupplierInput>;
  supplierAmount?: InputMaybe<Scalars['BigDecimal']['input']>;
  transType?: InputMaybe<ApTransactionInput>;
  vatAmount?: InputMaybe<Scalars['BigDecimal']['input']>;
  vatInclusive?: InputMaybe<Scalars['Boolean']['input']>;
  vatRate?: InputMaybe<Scalars['BigDecimal']['input']>;
};

export type AccumulatedLog = {
  __typename?: 'AccumulatedLog';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  date?: Maybe<Scalars['Instant']['output']>;
  department?: Maybe<Department>;
  finalLogs?: Maybe<FinalAccumulatedLogs>;
  id?: Maybe<Scalars['UUID']['output']>;
  inTime?: Maybe<Scalars['Instant']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  originalLogs?: Maybe<OriginalAccumulatedLogs>;
  outTime?: Maybe<Scalars['Instant']['output']>;
  schedule?: Maybe<Schedule>;
  status?: Maybe<AccumulatedLogStatus>;
  summary?: Maybe<AccumulatedLogSummary>;
};

export enum AccumulatedLogStatus {
  Draft = 'DRAFT',
  Finalized = 'FINALIZED',
  Locked = 'LOCKED'
}

export type AccumulatedLogSummary = {
  __typename?: 'AccumulatedLogSummary';
  accumulatedLogs?: Maybe<Array<Maybe<AccumulatedLog>>>;
  id?: Maybe<Scalars['UUID']['output']>;
  isAbsentOnly?: Maybe<Scalars['Boolean']['output']>;
  isEmpty?: Maybe<Scalars['Boolean']['output']>;
  isError?: Maybe<Scalars['Boolean']['output']>;
  isOvertimeOnly?: Maybe<Scalars['Boolean']['output']>;
  isRestDay?: Maybe<Scalars['Boolean']['output']>;
  isRestDayOnly?: Maybe<Scalars['Boolean']['output']>;
  message?: Maybe<Scalars['Boolean']['output']>;
  timekeepingEmployee?: Maybe<TimekeepingEmployee>;
  totals?: Maybe<Totals>;
  totalsOriginal?: Maybe<Totals>;
};

export type AddOn = {
  __typename?: 'AddOn';
  addOn?: Maybe<Scalars['String']['output']>;
  amount?: Maybe<Scalars['Float']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  employee?: Maybe<Employee>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
};

export type Administration = {
  __typename?: 'Administration';
  action?: Maybe<Scalars['String']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  dose?: Maybe<Scalars['String']['output']>;
  employee?: Maybe<Employee>;
  entryDateTime?: Maybe<Scalars['Instant']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  medication?: Maybe<Medication>;
  remarks?: Maybe<Scalars['String']['output']>;
};

export type AdministrationDto = {
  __typename?: 'AdministrationDto';
  action?: Maybe<Scalars['String']['output']>;
  dose?: Maybe<Scalars['String']['output']>;
  employee?: Maybe<Employee>;
  entryDateTime?: Maybe<Scalars['Instant']['output']>;
  entryDateTimeText?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  medicine?: Maybe<Scalars['String']['output']>;
  patientOwn?: Maybe<Scalars['Boolean']['output']>;
  remarks?: Maybe<Scalars['String']['output']>;
};

export type AdmissionConfiguration = {
  __typename?: 'AdmissionConfiguration';
  id?: Maybe<Scalars['UUID']['output']>;
  wristbandPrinterLocation?: Maybe<Scalars['String']['output']>;
};

export type AgtPatient = {
  __typename?: 'AgtPatient';
  address?: Maybe<Scalars['String']['output']>;
  areaCode?: Maybe<Scalars['String']['output']>;
  barangay?: Maybe<Scalars['String']['output']>;
  citizenship?: Maybe<Scalars['String']['output']>;
  cityMunicipality?: Maybe<Scalars['String']['output']>;
  civilStatus?: Maybe<Scalars['String']['output']>;
  contactNo?: Maybe<Scalars['String']['output']>;
  country?: Maybe<Scalars['String']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  dob?: Maybe<Scalars['LocalDate']['output']>;
  emailAddress?: Maybe<Scalars['String']['output']>;
  father?: Maybe<Scalars['String']['output']>;
  fatherOccupation?: Maybe<Scalars['String']['output']>;
  firstName?: Maybe<Scalars['String']['output']>;
  fullAddress?: Maybe<Scalars['String']['output']>;
  fullName?: Maybe<Scalars['String']['output']>;
  gender?: Maybe<Scalars['String']['output']>;
  hisPatient?: Maybe<Scalars['UUID']['output']>;
  homePhone?: Maybe<Scalars['String']['output']>;
  houseNo?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  lastName?: Maybe<Scalars['String']['output']>;
  middleName?: Maybe<Scalars['String']['output']>;
  mother?: Maybe<Scalars['String']['output']>;
  motherOccupation?: Maybe<Scalars['String']['output']>;
  nameOfSpouse?: Maybe<Scalars['String']['output']>;
  nameSuffix?: Maybe<Scalars['String']['output']>;
  nationality?: Maybe<Scalars['String']['output']>;
  occupation?: Maybe<Scalars['String']['output']>;
  otherContact?: Maybe<Scalars['String']['output']>;
  passport?: Maybe<Scalars['String']['output']>;
  patientNo?: Maybe<Scalars['String']['output']>;
  permanentAddress?: Maybe<Scalars['String']['output']>;
  permanentAreaCode?: Maybe<Scalars['String']['output']>;
  permanentBarangay?: Maybe<Scalars['String']['output']>;
  permanentCityMunicipality?: Maybe<Scalars['String']['output']>;
  permanentCountry?: Maybe<Scalars['String']['output']>;
  permanentHomePhone?: Maybe<Scalars['String']['output']>;
  permanentHouseNo?: Maybe<Scalars['String']['output']>;
  permanentStateProvince?: Maybe<Scalars['String']['output']>;
  permanentZipCode?: Maybe<Scalars['String']['output']>;
  pob?: Maybe<Scalars['String']['output']>;
  religion?: Maybe<Scalars['String']['output']>;
  secretKey?: Maybe<Scalars['String']['output']>;
  spouseOccupation?: Maybe<Scalars['String']['output']>;
  stateProvince?: Maybe<Scalars['String']['output']>;
  workAddress?: Maybe<Scalars['String']['output']>;
  workBarangay?: Maybe<Scalars['String']['output']>;
  workCityMunicipality?: Maybe<Scalars['String']['output']>;
  workContactNumber?: Maybe<Scalars['String']['output']>;
  workCountry?: Maybe<Scalars['String']['output']>;
  workEmailAddress?: Maybe<Scalars['String']['output']>;
  workHouseNo?: Maybe<Scalars['String']['output']>;
  workPlaceName?: Maybe<Scalars['String']['output']>;
  workSettings?: Maybe<Scalars['String']['output']>;
  workStateProvince?: Maybe<Scalars['String']['output']>;
  zipCode?: Maybe<Scalars['String']['output']>;
};

export type Allowance = {
  __typename?: 'Allowance';
  amount?: Maybe<Scalars['Float']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  notes?: Maybe<Scalars['String']['output']>;
  payFrequency?: Maybe<Scalars['String']['output']>;
  payrollType?: Maybe<Scalars['String']['output']>;
  taxable?: Maybe<Scalars['Boolean']['output']>;
  templateItems?: Maybe<Array<Maybe<AllowanceTemplateItem>>>;
};

export type AllowanceTemplate = {
  __typename?: 'AllowanceTemplate';
  active?: Maybe<Scalars['Boolean']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  templates?: Maybe<Array<Maybe<AllowanceTemplateItem>>>;
  total?: Maybe<Scalars['BigDecimal']['output']>;
};

export type AllowanceTemplateItem = {
  __typename?: 'AllowanceTemplateItem';
  active?: Maybe<Scalars['Boolean']['output']>;
  allowance?: Maybe<Allowance>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  id?: Maybe<AllowanceTemplateItemsId>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  notes?: Maybe<Scalars['String']['output']>;
  template?: Maybe<AllowanceTemplate>;
};

export type AllowanceTemplateItemsId = {
  __typename?: 'AllowanceTemplateItemsId';
  allowanceId?: Maybe<Scalars['UUID']['output']>;
  templateId?: Maybe<Scalars['UUID']['output']>;
};

export type AmountDetailsDto = {
  __typename?: 'AmountDetailsDto';
  billingItem?: Maybe<BillingItem>;
  discountAmount?: Maybe<Scalars['BigDecimal']['output']>;
};

export type AncillaryConfig = {
  __typename?: 'AncillaryConfig';
  active?: Maybe<Scalars['Boolean']['output']>;
  demo?: Maybe<Scalars['Boolean']['output']>;
  enabled?: Maybe<Scalars['Boolean']['output']>;
  entityName?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  ipAddress?: Maybe<Scalars['String']['output']>;
  password?: Maybe<Scalars['String']['output']>;
  port?: Maybe<Scalars['String']['output']>;
  smbPath?: Maybe<Scalars['String']['output']>;
  tcp?: Maybe<Scalars['Boolean']['output']>;
  url?: Maybe<Scalars['String']['output']>;
  username?: Maybe<Scalars['String']['output']>;
};

export type AncillaryConfigInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  demo?: InputMaybe<Scalars['Boolean']['input']>;
  enabled?: InputMaybe<Scalars['Boolean']['input']>;
  entityName?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  ipAddress?: InputMaybe<Scalars['String']['input']>;
  password?: InputMaybe<Scalars['String']['input']>;
  port?: InputMaybe<Scalars['String']['input']>;
  smbPath?: InputMaybe<Scalars['String']['input']>;
  tcp?: InputMaybe<Scalars['Boolean']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
  username?: InputMaybe<Scalars['String']['input']>;
};

export type AncillaryNote = {
  __typename?: 'AncillaryNote';
  created?: Maybe<Scalars['Instant']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  deleted?: Maybe<Scalars['Boolean']['output']>;
  details?: Maybe<Scalars['String']['output']>;
  domainName?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  pkId?: Maybe<Scalars['UUID']['output']>;
};

export type ApAgingDetailedDto = {
  __typename?: 'ApAgingDetailedDto';
  ap_category?: Maybe<Scalars['String']['output']>;
  ap_no?: Maybe<Scalars['String']['output']>;
  apv_date?: Maybe<Scalars['String']['output']>;
  current_amount?: Maybe<Scalars['BigDecimal']['output']>;
  day_1_to_31?: Maybe<Scalars['BigDecimal']['output']>;
  day_31_to_60?: Maybe<Scalars['BigDecimal']['output']>;
  day_61_to_90?: Maybe<Scalars['BigDecimal']['output']>;
  day_91_to_120?: Maybe<Scalars['BigDecimal']['output']>;
  due_date?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  invoice_date?: Maybe<Scalars['String']['output']>;
  invoice_no?: Maybe<Scalars['String']['output']>;
  older?: Maybe<Scalars['BigDecimal']['output']>;
  posted?: Maybe<Scalars['Boolean']['output']>;
  remarks_notes?: Maybe<Scalars['String']['output']>;
  supplier?: Maybe<Scalars['String']['output']>;
  supplier_id?: Maybe<Scalars['UUID']['output']>;
  supplier_type?: Maybe<Scalars['String']['output']>;
  supplier_type_id?: Maybe<Scalars['UUID']['output']>;
  total?: Maybe<Scalars['BigDecimal']['output']>;
};

export type ApAgingSummaryDto = {
  __typename?: 'ApAgingSummaryDto';
  current_amount?: Maybe<Scalars['BigDecimal']['output']>;
  day_1_to_31?: Maybe<Scalars['BigDecimal']['output']>;
  day_31_to_60?: Maybe<Scalars['BigDecimal']['output']>;
  day_61_to_90?: Maybe<Scalars['BigDecimal']['output']>;
  day_91_to_120?: Maybe<Scalars['BigDecimal']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  older?: Maybe<Scalars['BigDecimal']['output']>;
  supplier?: Maybe<Scalars['String']['output']>;
  supplier_type?: Maybe<Scalars['String']['output']>;
  supplier_type_id?: Maybe<Scalars['String']['output']>;
  total?: Maybe<Scalars['BigDecimal']['output']>;
};

export type ApLedger = {
  __typename?: 'ApLedger';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  credit?: Maybe<Scalars['BigDecimal']['output']>;
  debit?: Maybe<Scalars['BigDecimal']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  isInclude?: Maybe<Scalars['Boolean']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  ledgerDate?: Maybe<Scalars['Instant']['output']>;
  ledgerType?: Maybe<Scalars['String']['output']>;
  refId?: Maybe<Scalars['UUID']['output']>;
  refNo?: Maybe<Scalars['String']['output']>;
  supplier?: Maybe<Supplier>;
};

export type ApLedgerDto = {
  __typename?: 'ApLedgerDto';
  beg_balance?: Maybe<Scalars['BigDecimal']['output']>;
  credit?: Maybe<Scalars['BigDecimal']['output']>;
  debit?: Maybe<Scalars['BigDecimal']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  is_include?: Maybe<Scalars['Boolean']['output']>;
  ledger_date?: Maybe<Scalars['Instant']['output']>;
  ledger_type?: Maybe<Scalars['String']['output']>;
  out_balance?: Maybe<Scalars['BigDecimal']['output']>;
  ref_id?: Maybe<Scalars['UUID']['output']>;
  ref_no?: Maybe<Scalars['String']['output']>;
  running_balance?: Maybe<Scalars['BigDecimal']['output']>;
  supplier?: Maybe<Scalars['UUID']['output']>;
  supplier_fullname?: Maybe<Scalars['String']['output']>;
};

export type ApPfCompany = {
  __typename?: 'ApPfCompany';
  accountReceivable?: Maybe<AccountReceivable>;
  amount?: Maybe<Scalars['BigDecimal']['output']>;
  apProcess?: Maybe<Scalars['Boolean']['output']>;
  balance?: Maybe<Scalars['BigDecimal']['output']>;
  billingItem?: Maybe<BillingItem>;
  creditMemo?: Maybe<Scalars['BigDecimal']['output']>;
  cwt?: Maybe<Scalars['Boolean']['output']>;
  discount?: Maybe<Scalars['BigDecimal']['output']>;
  doctor?: Maybe<Scalars['String']['output']>;
  employee?: Maybe<Employee>;
  id?: Maybe<Scalars['UUID']['output']>;
  patient?: Maybe<Scalars['String']['output']>;
  pfFee?: Maybe<Scalars['BigDecimal']['output']>;
  pfPayable?: Maybe<Scalars['BigDecimal']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  supplier?: Maybe<Supplier>;
  totalPayments?: Maybe<Scalars['BigDecimal']['output']>;
  trans_type?: Maybe<Scalars['String']['output']>;
  type?: Maybe<Scalars['String']['output']>;
};

export type ApPfCompanyInput = {
  accountReceivable?: InputMaybe<AccountReceivableInput>;
  amount?: InputMaybe<Scalars['BigDecimal']['input']>;
  apProcess?: InputMaybe<Scalars['Boolean']['input']>;
  balance?: InputMaybe<Scalars['BigDecimal']['input']>;
  billingItem?: InputMaybe<BillingItemInput>;
  creditMemo?: InputMaybe<Scalars['BigDecimal']['input']>;
  cwt?: InputMaybe<Scalars['Boolean']['input']>;
  discount?: InputMaybe<Scalars['BigDecimal']['input']>;
  doctor?: InputMaybe<Scalars['String']['input']>;
  employee?: InputMaybe<EmployeeInput>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  patient?: InputMaybe<Scalars['String']['input']>;
  pfFee?: InputMaybe<Scalars['BigDecimal']['input']>;
  pfPayable?: InputMaybe<Scalars['BigDecimal']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  supplier?: InputMaybe<SupplierInput>;
  totalPayments?: InputMaybe<Scalars['BigDecimal']['input']>;
  trans_type?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};

export type ApPfNonCompany = {
  __typename?: 'ApPfNonCompany';
  apProcess?: Maybe<Scalars['Boolean']['output']>;
  billing?: Maybe<Billing>;
  department?: Maybe<Department>;
  description?: Maybe<Scalars['String']['output']>;
  employee?: Maybe<Employee>;
  id?: Maybe<Scalars['UUID']['output']>;
  orNumber?: Maybe<Scalars['String']['output']>;
  paymentTracker?: Maybe<PaymentTracker>;
  pfFee?: Maybe<Scalars['BigDecimal']['output']>;
  recordNo?: Maybe<Scalars['String']['output']>;
  supplier?: Maybe<Supplier>;
  transactionDate?: Maybe<Scalars['Instant']['output']>;
};

export type ApPfNonCompanyInput = {
  apProcess?: InputMaybe<Scalars['Boolean']['input']>;
  billing?: InputMaybe<BillingInput>;
  department?: InputMaybe<DepartmentInput>;
  description?: InputMaybe<Scalars['String']['input']>;
  employee?: InputMaybe<EmployeeInput>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  orNumber?: InputMaybe<Scalars['String']['input']>;
  paymentTracker?: InputMaybe<PaymentTrackerInput>;
  pfFee?: InputMaybe<Scalars['BigDecimal']['input']>;
  recordNo?: InputMaybe<Scalars['String']['input']>;
  supplier?: InputMaybe<SupplierInput>;
  transactionDate?: InputMaybe<Scalars['Instant']['input']>;
};

export type ApReadersFee = {
  __typename?: 'ApReadersFee';
  apProcess?: Maybe<Scalars['Boolean']['output']>;
  billing?: Maybe<Billing>;
  department?: Maybe<Department>;
  description?: Maybe<Scalars['String']['output']>;
  doctor?: Maybe<Employee>;
  id?: Maybe<Scalars['UUID']['output']>;
  package_id?: Maybe<Scalars['UUID']['output']>;
  percentage?: Maybe<Scalars['BigDecimal']['output']>;
  price?: Maybe<Scalars['BigDecimal']['output']>;
  pricingTier?: Maybe<PriceTierDetail>;
  recordNo?: Maybe<Scalars['String']['output']>;
  registryTypeCharged?: Maybe<Scalars['String']['output']>;
  rfFee?: Maybe<Scalars['BigDecimal']['output']>;
  rfFees?: Maybe<RfFees>;
  service?: Maybe<Service>;
  supplier?: Maybe<Supplier>;
  transactionDate?: Maybe<Scalars['Instant']['output']>;
};

export type ApReadersFeeInput = {
  apProcess?: InputMaybe<Scalars['Boolean']['input']>;
  billing?: InputMaybe<BillingInput>;
  department?: InputMaybe<DepartmentInput>;
  description?: InputMaybe<Scalars['String']['input']>;
  doctor?: InputMaybe<EmployeeInput>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  package_id?: InputMaybe<Scalars['UUID']['input']>;
  percentage?: InputMaybe<Scalars['BigDecimal']['input']>;
  price?: InputMaybe<Scalars['BigDecimal']['input']>;
  pricingTier?: InputMaybe<PriceTierDetailInput>;
  recordNo?: InputMaybe<Scalars['String']['input']>;
  registryTypeCharged?: InputMaybe<Scalars['String']['input']>;
  rfFee?: InputMaybe<Scalars['BigDecimal']['input']>;
  rfFees?: InputMaybe<RfFeesInput>;
  service?: InputMaybe<ServiceInput>;
  supplier?: InputMaybe<SupplierInput>;
  transactionDate?: InputMaybe<Scalars['Instant']['input']>;
};

export type ApTransaction = {
  __typename?: 'ApTransaction';
  category?: Maybe<Scalars['String']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  flagValue?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  status?: Maybe<Scalars['Boolean']['output']>;
  supplierType?: Maybe<SupplierType>;
};

export type ApTransactionInput = {
  category?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  flagValue?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  status?: InputMaybe<Scalars['Boolean']['input']>;
  supplierType?: InputMaybe<SupplierTypeInput>;
};

export type AppliedOr = {
  __typename?: 'AppliedOr';
  amount?: Maybe<Scalars['BigDecimal']['output']>;
  billingItem?: Maybe<BillingItem>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  journalCode?: Maybe<Scalars['String']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  paymentTracker?: Maybe<PaymentTracker>;
};

export type AppliedOrInput = {
  amount?: InputMaybe<Scalars['BigDecimal']['input']>;
  billingItem?: InputMaybe<BillingItemInput>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  journalCode?: InputMaybe<Scalars['String']['input']>;
  paymentTracker?: InputMaybe<PaymentTrackerInput>;
};

export type Appointment = {
  __typename?: 'Appointment';
  airlineSeaVessel?: Maybe<Scalars['String']['output']>;
  antecedentCause?: Maybe<Scalars['String']['output']>;
  appNo?: Maybe<Scalars['String']['output']>;
  contributoryConditions?: Maybe<Scalars['String']['output']>;
  countryDestination?: Maybe<Scalars['String']['output']>;
  covidUpdates?: Maybe<Scalars['String']['output']>;
  covidUpdatesList?: Maybe<Array<Maybe<CovidUpdatesList>>>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  dateValidity?: Maybe<Scalars['Instant']['output']>;
  dod?: Maybe<Scalars['LocalDate']['output']>;
  dor?: Maybe<Scalars['LocalDate']['output']>;
  flightVesselNo?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  immediateCause?: Maybe<Scalars['String']['output']>;
  informant?: Maybe<Scalars['String']['output']>;
  informantContact?: Maybe<Scalars['String']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  numberOfTest?: Maybe<Scalars['String']['output']>;
  orderStatus?: Maybe<Scalars['String']['output']>;
  outcomeCondition?: Maybe<Scalars['String']['output']>;
  patient?: Maybe<AgtPatient>;
  positiveCovidBefore?: Maybe<Scalars['String']['output']>;
  purposeOfTesting?: Maybe<Scalars['String']['output']>;
  reasonOfTesting?: Maybe<Scalars['String']['output']>;
  relationInformant?: Maybe<Scalars['String']['output']>;
  schedule?: Maybe<AppointmentSchedule>;
  scheduleTime?: Maybe<AppointmentScheduleTime>;
  status?: Maybe<Scalars['Boolean']['output']>;
  transportation?: Maybe<Scalars['String']['output']>;
  underlyingCause?: Maybe<Scalars['String']['output']>;
};

export type AppointmentConfig = {
  __typename?: 'AppointmentConfig';
  allowedStat?: Maybe<Scalars['Boolean']['output']>;
  code?: Maybe<Scalars['String']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  defaultMaxPerson?: Maybe<Scalars['Int']['output']>;
  defaultMaxStat?: Maybe<Scalars['Int']['output']>;
  formattedTime?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  status?: Maybe<Scalars['Boolean']['output']>;
  timeEnd?: Maybe<Scalars['Instant']['output']>;
  timeStart?: Maybe<Scalars['Instant']['output']>;
};

export type AppointmentSchedule = {
  __typename?: 'AppointmentSchedule';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  formattedScheduleDate?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  scheduleCode?: Maybe<Scalars['String']['output']>;
  scheduleDate?: Maybe<Scalars['Instant']['output']>;
  status?: Maybe<Scalars['Boolean']['output']>;
};

export type AppointmentScheduleInput = {
  formattedScheduleDate?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  scheduleCode?: InputMaybe<Scalars['String']['input']>;
  scheduleDate?: InputMaybe<Scalars['Instant']['input']>;
  status?: InputMaybe<Scalars['Boolean']['input']>;
};

export type AppointmentScheduleTime = {
  __typename?: 'AppointmentScheduleTime';
  allowedStat?: Maybe<Scalars['Boolean']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  maxPerson?: Maybe<Scalars['Int']['output']>;
  maxStat?: Maybe<Scalars['Int']['output']>;
  schedTime?: Maybe<AppointmentConfig>;
  schedule?: Maybe<AppointmentSchedule>;
  status?: Maybe<Scalars['Boolean']['output']>;
};

export type AppointmentSummary = {
  __typename?: 'AppointmentSummary';
  end_?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  person?: Maybe<Scalars['Int']['output']>;
  schedule?: Maybe<AppointmentSchedule>;
  scheduleTime?: Maybe<AppointmentScheduleTime>;
  start_?: Maybe<Scalars['String']['output']>;
};

export type ArCreditNote = {
  __typename?: 'ArCreditNote';
  arCustomer?: Maybe<ArCustomers>;
  companyAccount?: Maybe<CompanyAccount>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  creditNoteDate?: Maybe<Scalars['Date']['output']>;
  creditNoteNo?: Maybe<Scalars['String']['output']>;
  creditNoteType?: Maybe<Scalars['String']['output']>;
  cwtAmount?: Maybe<Scalars['BigDecimal']['output']>;
  department?: Maybe<Department>;
  details?: Maybe<Scalars['Map_String_StringScalar']['output']>;
  discount?: Maybe<Discount>;
  discountAmount?: Maybe<Scalars['BigDecimal']['output']>;
  discountPercentage?: Maybe<Scalars['BigDecimal']['output']>;
  domain?: Maybe<Scalars['String']['output']>;
  flagValue?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  isCWT?: Maybe<Scalars['Boolean']['output']>;
  isVatable?: Maybe<Scalars['Boolean']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  ledgerId?: Maybe<Scalars['UUID']['output']>;
  negativeCWTAmount?: Maybe<Scalars['BigDecimal']['output']>;
  negativeCwtAmount?: Maybe<Scalars['BigDecimal']['output']>;
  negativeTotalAmount?: Maybe<Scalars['BigDecimal']['output']>;
  negativeTotalAmountDue?: Maybe<Scalars['BigDecimal']['output']>;
  negativeTotalHCIAmount?: Maybe<Scalars['BigDecimal']['output']>;
  negativeTotalPFAmount?: Maybe<Scalars['BigDecimal']['output']>;
  negativeVatAmount?: Maybe<Scalars['BigDecimal']['output']>;
  notes?: Maybe<Scalars['String']['output']>;
  reference?: Maybe<Scalars['String']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  totalAmountDue?: Maybe<Scalars['BigDecimal']['output']>;
  totalDiscount?: Maybe<Scalars['BigDecimal']['output']>;
  totalHCIAmount?: Maybe<Scalars['BigDecimal']['output']>;
  totalHCICreditNote?: Maybe<Scalars['BigDecimal']['output']>;
  totalPFAmount?: Maybe<Scalars['BigDecimal']['output']>;
  totalPFCreditNote?: Maybe<Scalars['BigDecimal']['output']>;
  totalTransfer?: Maybe<Scalars['BigDecimal']['output']>;
  transferredAccount?: Maybe<CompanyAccount>;
  vatAmount?: Maybe<Scalars['BigDecimal']['output']>;
};

export type ArCreditNoteItems = {
  __typename?: 'ArCreditNoteItems';
  approval_code?: Maybe<Scalars['String']['output']>;
  arCreditNote?: Maybe<ArCreditNote>;
  arCustomer?: Maybe<ArCustomers>;
  arInvoiceId?: Maybe<Scalars['UUID']['output']>;
  arInvoiceItem?: Maybe<ArInvoiceItems>;
  arInvoiceItemRecordNo?: Maybe<Scalars['String']['output']>;
  arInvoiceNo?: Maybe<Scalars['String']['output']>;
  claimsItem?: Maybe<Scalars['Boolean']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  creditNoteNo?: Maybe<Scalars['String']['output']>;
  cwtAmount?: Maybe<Scalars['BigDecimal']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  discountAmount?: Maybe<Scalars['BigDecimal']['output']>;
  discountDepartment?: Maybe<Department>;
  discountPercentage?: Maybe<Scalars['BigDecimal']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  isCWT?: Maybe<Scalars['Boolean']['output']>;
  isVatable?: Maybe<Scalars['Boolean']['output']>;
  itemName?: Maybe<Scalars['String']['output']>;
  itemType?: Maybe<Scalars['String']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  patient_id?: Maybe<Scalars['UUID']['output']>;
  patient_name?: Maybe<Scalars['String']['output']>;
  pf_id?: Maybe<Scalars['UUID']['output']>;
  pf_name?: Maybe<Scalars['String']['output']>;
  quantity?: Maybe<Scalars['Int']['output']>;
  recipientCustomer?: Maybe<ArCustomers>;
  recipientInvoice?: Maybe<Scalars['UUID']['output']>;
  recordNo?: Maybe<Scalars['String']['output']>;
  reference?: Maybe<Scalars['String']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  totalAmountDue?: Maybe<Scalars['BigDecimal']['output']>;
  totalHCIAmount?: Maybe<Scalars['BigDecimal']['output']>;
  totalPFAmount?: Maybe<Scalars['BigDecimal']['output']>;
  unitPrice?: Maybe<Scalars['BigDecimal']['output']>;
  vatAmount?: Maybe<Scalars['BigDecimal']['output']>;
};

export type ArCustomers = {
  __typename?: 'ArCustomers';
  accountNo?: Maybe<Scalars['String']['output']>;
  accountPrefix?: Maybe<Scalars['String']['output']>;
  address?: Maybe<Scalars['String']['output']>;
  code?: Maybe<Scalars['String']['output']>;
  config?: Maybe<CoaConfig>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  customerName?: Maybe<Scalars['String']['output']>;
  customerType?: Maybe<CustomerType>;
  department?: Maybe<Array<Maybe<Scalars['UUID']['output']>>>;
  description?: Maybe<Scalars['String']['output']>;
  discountAndPenalties?: Maybe<CompanyDiscountAndPenalties>;
  domain?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  patientId?: Maybe<Scalars['UUID']['output']>;
  referenceId?: Maybe<Scalars['UUID']['output']>;
};

export type ArInvoice = {
  __typename?: 'ArInvoice';
  arCustomer?: Maybe<ArCustomers>;
  companyAccount?: Maybe<CompanyAccount>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  cwtAmount?: Maybe<Scalars['BigDecimal']['output']>;
  details?: Maybe<Scalars['Map_String_StringScalar']['output']>;
  discountAmount?: Maybe<Scalars['BigDecimal']['output']>;
  domain?: Maybe<Scalars['String']['output']>;
  dueDate?: Maybe<Scalars['Date']['output']>;
  electricity?: Maybe<Scalars['BigDecimal']['output']>;
  flagValue?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  invoiceDate?: Maybe<Scalars['Date']['output']>;
  invoiceNo?: Maybe<Scalars['String']['output']>;
  invoiceType?: Maybe<Scalars['String']['output']>;
  isCWT?: Maybe<Scalars['Boolean']['output']>;
  isVatable?: Maybe<Scalars['Boolean']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  ledgerId?: Maybe<Scalars['UUID']['output']>;
  negativeCWTAmount?: Maybe<Scalars['BigDecimal']['output']>;
  negativeTotalAmount?: Maybe<Scalars['BigDecimal']['output']>;
  negativeTotalAmountDue?: Maybe<Scalars['BigDecimal']['output']>;
  negativeTotalHCIAmount?: Maybe<Scalars['BigDecimal']['output']>;
  negativeTotalPFAmount?: Maybe<Scalars['BigDecimal']['output']>;
  netTotalAmount?: Maybe<Scalars['BigDecimal']['output']>;
  notes?: Maybe<Scalars['String']['output']>;
  others?: Maybe<Scalars['BigDecimal']['output']>;
  quantity?: Maybe<Scalars['BigDecimal']['output']>;
  reference?: Maybe<Scalars['String']['output']>;
  rental?: Maybe<Scalars['BigDecimal']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  totalAmount?: Maybe<Scalars['BigDecimal']['output']>;
  totalAmountDue?: Maybe<Scalars['BigDecimal']['output']>;
  totalCreditNote?: Maybe<Scalars['BigDecimal']['output']>;
  totalHCIAmount?: Maybe<Scalars['BigDecimal']['output']>;
  totalHCITax?: Maybe<Scalars['BigDecimal']['output']>;
  totalHCIVat?: Maybe<Scalars['BigDecimal']['output']>;
  totalPFAmount?: Maybe<Scalars['BigDecimal']['output']>;
  totalPayments?: Maybe<Scalars['BigDecimal']['output']>;
  unitPrice?: Maybe<Scalars['BigDecimal']['output']>;
  vatAmount?: Maybe<Scalars['BigDecimal']['output']>;
};

export type ArInvoiceItems = {
  __typename?: 'ArInvoiceItems';
  admission_date?: Maybe<Scalars['Date']['output']>;
  approval_code?: Maybe<Scalars['String']['output']>;
  arCustomer?: Maybe<ArCustomers>;
  arInvoice?: Maybe<ArInvoice>;
  billing_id?: Maybe<Scalars['UUID']['output']>;
  billing_item_id?: Maybe<Scalars['UUID']['output']>;
  billing_no?: Maybe<Scalars['String']['output']>;
  case_id?: Maybe<Scalars['UUID']['output']>;
  claimsItem?: Maybe<Scalars['Boolean']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  creditNote?: Maybe<Scalars['BigDecimal']['output']>;
  cwtAmount?: Maybe<Scalars['BigDecimal']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  discharge_date?: Maybe<Scalars['Date']['output']>;
  discount?: Maybe<Scalars['BigDecimal']['output']>;
  discountAmount?: Maybe<Scalars['BigDecimal']['output']>;
  discountPercentage?: Maybe<Scalars['BigDecimal']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  invoiceNo?: Maybe<Scalars['String']['output']>;
  isCWT?: Maybe<Scalars['Boolean']['output']>;
  isVatable?: Maybe<Scalars['Boolean']['output']>;
  itemName?: Maybe<Scalars['String']['output']>;
  itemType?: Maybe<Scalars['String']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  netTotalAmount?: Maybe<Scalars['BigDecimal']['output']>;
  patient_id?: Maybe<Scalars['UUID']['output']>;
  patient_name?: Maybe<Scalars['String']['output']>;
  payment?: Maybe<Scalars['BigDecimal']['output']>;
  pf_id?: Maybe<Scalars['UUID']['output']>;
  pf_name?: Maybe<Scalars['String']['output']>;
  quantity?: Maybe<Scalars['Int']['output']>;
  recordNo?: Maybe<Scalars['String']['output']>;
  reference_transfer_id?: Maybe<Scalars['UUID']['output']>;
  registry_type?: Maybe<Scalars['String']['output']>;
  soa_no?: Maybe<Scalars['String']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  totalAmountDue?: Maybe<Scalars['BigDecimal']['output']>;
  totalHCIAmount?: Maybe<Scalars['BigDecimal']['output']>;
  totalPFAmount?: Maybe<Scalars['BigDecimal']['output']>;
  unitPrice?: Maybe<Scalars['BigDecimal']['output']>;
  vatAmount?: Maybe<Scalars['BigDecimal']['output']>;
};

export type ArLedger = {
  __typename?: 'ArLedger';
  accountReceivable?: Maybe<AccountReceivable>;
  balance?: Maybe<Scalars['BigDecimal']['output']>;
  companyAccount?: Maybe<CompanyAccount>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  credit?: Maybe<Scalars['BigDecimal']['output']>;
  debit?: Maybe<Scalars['BigDecimal']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  journalLedger?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  ledgerDate?: Maybe<Scalars['Instant']['output']>;
  ledgerNo?: Maybe<Scalars['String']['output']>;
  personalAccount?: Maybe<Supplier>;
  reference?: Maybe<Scalars['String']['output']>;
  status?: Maybe<Scalars['String']['output']>;
};

export type ArLedgerInput = {
  accountReceivable?: InputMaybe<AccountReceivableInput>;
  balance?: InputMaybe<Scalars['BigDecimal']['input']>;
  companyAccount?: InputMaybe<CompanyAccountInput>;
  credit?: InputMaybe<Scalars['BigDecimal']['input']>;
  debit?: InputMaybe<Scalars['BigDecimal']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  journalLedger?: InputMaybe<Scalars['UUID']['input']>;
  ledgerDate?: InputMaybe<Scalars['Instant']['input']>;
  ledgerNo?: InputMaybe<Scalars['String']['input']>;
  personalAccount?: InputMaybe<SupplierInput>;
  reference?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
};

export type ArManualDeductions = {
  __typename?: 'ArManualDeductions';
  billing?: Maybe<Billing>;
  companyAccount?: Maybe<CompanyAccount>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  credit?: Maybe<Scalars['BigDecimal']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  itemType?: Maybe<Scalars['String']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  recordNo?: Maybe<Scalars['String']['output']>;
  remarks?: Maybe<Scalars['String']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  transactionDate?: Maybe<Scalars['Instant']['output']>;
};

export type ArManualDeductionsInput = {
  billing?: InputMaybe<BillingInput>;
  companyAccount?: InputMaybe<CompanyAccountInput>;
  credit?: InputMaybe<Scalars['BigDecimal']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  itemType?: InputMaybe<Scalars['String']['input']>;
  recordNo?: InputMaybe<Scalars['String']['input']>;
  remarks?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  transactionDate?: InputMaybe<Scalars['Instant']['input']>;
};

export type ArPaymentTracker = {
  __typename?: 'ArPaymentTracker';
  amount?: Maybe<Scalars['BigDecimal']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  credit?: Maybe<Scalars['BigDecimal']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  orNumber?: Maybe<Scalars['String']['output']>;
  paymentTracker?: Maybe<PaymentTracker>;
  status?: Maybe<Scalars['String']['output']>;
  tempCredit?: Maybe<Scalars['BigDecimal']['output']>;
};

export type ArPaymentTrackerInput = {
  amount?: InputMaybe<Scalars['BigDecimal']['input']>;
  credit?: InputMaybe<Scalars['BigDecimal']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  orNumber?: InputMaybe<Scalars['String']['input']>;
  paymentTracker?: InputMaybe<PaymentTrackerInput>;
  status?: InputMaybe<Scalars['String']['input']>;
  tempCredit?: InputMaybe<Scalars['BigDecimal']['input']>;
};

export type ArPaymentTrackerTransaction = {
  __typename?: 'ArPaymentTrackerTransaction';
  accountReceivable?: Maybe<AccountReceivable>;
  amount?: Maybe<Scalars['BigDecimal']['output']>;
  arPaymentTracker?: Maybe<ArPaymentTracker>;
  arTransaction?: Maybe<ArTransaction>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  status?: Maybe<Scalars['String']['output']>;
};

export type ArPaymentTrackerTransactionInput = {
  accountReceivable?: InputMaybe<AccountReceivableInput>;
  amount?: InputMaybe<Scalars['BigDecimal']['input']>;
  arPaymentTracker?: InputMaybe<ArPaymentTrackerInput>;
  arTransaction?: InputMaybe<ArTransactionInput>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
};

export type ArTransaction = {
  __typename?: 'ArTransaction';
  accountReceivable?: Maybe<AccountReceivable>;
  amount?: Maybe<Scalars['BigDecimal']['output']>;
  arTransactionItems?: Maybe<Array<Maybe<ArTransactionDetails>>>;
  arTransactionType?: Maybe<ArTransactionType>;
  artA?: Maybe<Scalars['BigDecimal']['output']>;
  artB?: Maybe<Scalars['BigDecimal']['output']>;
  artC?: Maybe<Scalars['BigDecimal']['output']>;
  companyAccount?: Maybe<CompanyAccount>;
  companyAmt?: Maybe<Scalars['BigDecimal']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  details?: Maybe<Scalars['Map_String_StringScalar']['output']>;
  domain?: Maybe<Scalars['String']['output']>;
  flagValue?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  negativeAmount?: Maybe<Scalars['BigDecimal']['output']>;
  paymentTracker?: Maybe<PaymentTracker>;
  personalAccount?: Maybe<Supplier>;
  personalAmt?: Maybe<Scalars['BigDecimal']['output']>;
  postedLedger?: Maybe<Scalars['UUID']['output']>;
  remarks?: Maybe<Scalars['String']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  totalHci?: Maybe<Scalars['BigDecimal']['output']>;
  totalPf?: Maybe<Scalars['BigDecimal']['output']>;
  trackingNo?: Maybe<Scalars['String']['output']>;
  transactionDate?: Maybe<Scalars['Instant']['output']>;
  type?: Maybe<Scalars['String']['output']>;
};

export type ArTransactionDetails = {
  __typename?: 'ArTransactionDetails';
  accountReceivableItems?: Maybe<AccountReceivableItems>;
  amount?: Maybe<Scalars['BigDecimal']['output']>;
  arTransaction?: Maybe<ArTransaction>;
  arTransfer?: Maybe<ArTransfer>;
  billingItemRef?: Maybe<BillingItem>;
  billingItemSource?: Maybe<BillingItem>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  isVoided?: Maybe<Scalars['Boolean']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  referenceNo?: Maybe<Scalars['String']['output']>;
  type?: Maybe<Scalars['String']['output']>;
};

export type ArTransactionDetailsInput = {
  accountReceivableItems?: InputMaybe<AccountReceivableItemsInput>;
  amount?: InputMaybe<Scalars['BigDecimal']['input']>;
  arTransaction?: InputMaybe<ArTransactionInput>;
  arTransfer?: InputMaybe<ArTransferInput>;
  billingItemRef?: InputMaybe<BillingItemInput>;
  billingItemSource?: InputMaybe<BillingItemInput>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  isVoided?: InputMaybe<Scalars['Boolean']['input']>;
  referenceNo?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};

export type ArTransactionInput = {
  accountReceivable?: InputMaybe<AccountReceivableInput>;
  amount?: InputMaybe<Scalars['BigDecimal']['input']>;
  arTransactionItems?: InputMaybe<Array<InputMaybe<ArTransactionDetailsInput>>>;
  arTransactionType?: InputMaybe<ArTransactionTypeInput>;
  artA?: InputMaybe<Scalars['BigDecimal']['input']>;
  artB?: InputMaybe<Scalars['BigDecimal']['input']>;
  artC?: InputMaybe<Scalars['BigDecimal']['input']>;
  companyAccount?: InputMaybe<CompanyAccountInput>;
  companyAmt?: InputMaybe<Scalars['BigDecimal']['input']>;
  flagValue?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  negativeAmount?: InputMaybe<Scalars['BigDecimal']['input']>;
  paymentTracker?: InputMaybe<PaymentTrackerInput>;
  personalAccount?: InputMaybe<SupplierInput>;
  personalAmt?: InputMaybe<Scalars['BigDecimal']['input']>;
  postedLedger?: InputMaybe<Scalars['UUID']['input']>;
  remarks?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  totalHci?: InputMaybe<Scalars['BigDecimal']['input']>;
  totalPf?: InputMaybe<Scalars['BigDecimal']['input']>;
  trackingNo?: InputMaybe<Scalars['String']['input']>;
  transactionDate?: InputMaybe<Scalars['Instant']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};

export type ArTransactionLedgerRemainingBalanceDto = {
  __typename?: 'ArTransactionLedgerRemainingBalanceDto';
  remainingBalanceSum?: Maybe<Scalars['BigDecimal']['output']>;
  remainingHCIBalanceSum?: Maybe<Scalars['BigDecimal']['output']>;
  remainingPFBalanceSum?: Maybe<Scalars['BigDecimal']['output']>;
};

export type ArTransactionType = {
  __typename?: 'ArTransactionType';
  active?: Maybe<Scalars['Boolean']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  integration?: Maybe<Integration>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
};

export type ArTransactionTypeInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  integration?: InputMaybe<IntegrationInput>;
};

export type ArTransfer = {
  __typename?: 'ArTransfer';
  amount?: Maybe<Scalars['BigDecimal']['output']>;
  arTransaction?: Maybe<ArTransaction>;
  arTransactionDetails?: Maybe<ArTransactionDetails>;
  billing?: Maybe<Billing>;
  billingItem?: Maybe<BillingItem>;
  billingScheduleItems?: Maybe<Array<Maybe<BillingScheduleItems>>>;
  companyAccount?: Maybe<CompanyAccount>;
  companySourceAccount?: Maybe<CompanyAccount>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  lastTouch?: Maybe<Scalars['String']['output']>;
  reference?: Maybe<Scalars['String']['output']>;
  status?: Maybe<Scalars['String']['output']>;
};

export type ArTransferInput = {
  amount?: InputMaybe<Scalars['BigDecimal']['input']>;
  arTransaction?: InputMaybe<ArTransactionInput>;
  arTransactionDetails?: InputMaybe<ArTransactionDetailsInput>;
  billing?: InputMaybe<BillingInput>;
  billingItem?: InputMaybe<BillingItemInput>;
  billingScheduleItems?: InputMaybe<Array<InputMaybe<BillingScheduleItemsInput>>>;
  companyAccount?: InputMaybe<CompanyAccountInput>;
  companySourceAccount?: InputMaybe<CompanyAccountInput>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  reference?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
};

export type AttLogDto = {
  __typename?: 'AttLogDto';
  date?: Maybe<Scalars['String']['output']>;
  dateTime?: Maybe<Scalars['Instant']['output']>;
  department?: Maybe<Scalars['String']['output']>;
  departmentId?: Maybe<Scalars['String']['output']>;
  deviceName?: Maybe<Scalars['String']['output']>;
  employeeId?: Maybe<Scalars['String']['output']>;
  idno?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  time?: Maybe<Scalars['String']['output']>;
  verification?: Maybe<Scalars['String']['output']>;
};

export type AttLogDtoInput = {
  date?: InputMaybe<Scalars['String']['input']>;
  dateTime?: InputMaybe<Scalars['Instant']['input']>;
  department?: InputMaybe<Scalars['String']['input']>;
  departmentId?: InputMaybe<Scalars['String']['input']>;
  deviceName?: InputMaybe<Scalars['String']['input']>;
  employeeId?: InputMaybe<Scalars['String']['input']>;
  idno?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  time?: InputMaybe<Scalars['String']['input']>;
  verification?: InputMaybe<Scalars['String']['input']>;
};

export type AttachmentDto = {
  __typename?: 'AttachmentDto';
  base64?: Maybe<Scalars['String']['output']>;
  desc?: Maybe<Scalars['String']['output']>;
  fileName?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  mimetype?: Maybe<Scalars['String']['output']>;
  urlPath?: Maybe<Scalars['String']['output']>;
};

export type AuthenticationTest = {
  __typename?: 'AuthenticationTest';
  authentication?: Maybe<Scalars['String']['output']>;
};

export type AuthenticationTestResponseDto = {
  __typename?: 'AuthenticationTestResponseDto';
  response_code?: Maybe<Scalars['String']['output']>;
  response_date?: Maybe<Scalars['String']['output']>;
  response_desc?: Maybe<Scalars['String']['output']>;
  response_value?: Maybe<AuthenticationTest>;
};

export type Authority = {
  __typename?: 'Authority';
  name: Scalars['String']['output'];
};

export type BScheduleEditPage = {
  __typename?: 'BScheduleEditPage';
  billingSchedule?: Maybe<BillingSchedule>;
  billingScheduleItems?: Maybe<Array<Maybe<BillingScheduleItems>>>;
};

export type BalanceSheetPage = {
  __typename?: 'BalanceSheetPage';
  accountsPayable?: Maybe<Array<Maybe<IncomeStatementAccount>>>;
  accountsPayableMap?: Maybe<Scalars['Map_String_Map_String_BigDecimalScalar']['output']>;
  accountsPayableTotal?: Maybe<Scalars['Map_String_BigDecimalScalar']['output']>;
  accruedInterestPayable?: Maybe<Array<Maybe<IncomeStatementAccount>>>;
  accruedInterestPayableMap?: Maybe<Scalars['Map_String_Map_String_BigDecimalScalar']['output']>;
  accruedInterestPayableTotal?: Maybe<Scalars['Map_String_BigDecimalScalar']['output']>;
  accruedSalariesAndWagesPayable?: Maybe<Array<Maybe<IncomeStatementAccount>>>;
  accruedSalariesAndWagesPayableMap?: Maybe<Scalars['Map_String_Map_String_BigDecimalScalar']['output']>;
  accruedSalariesAndWagesPayableTotal?: Maybe<Scalars['Map_String_BigDecimalScalar']['output']>;
  accruedVLSPayable?: Maybe<Array<Maybe<IncomeStatementAccount>>>;
  accruedVLSPayableMap?: Maybe<Scalars['Map_String_Map_String_BigDecimalScalar']['output']>;
  accruedVLSPayableTotal?: Maybe<Scalars['Map_String_BigDecimalScalar']['output']>;
  accumulatedDep?: Maybe<Array<Maybe<IncomeStatementAccount>>>;
  additionalPaidCapital?: Maybe<Array<Maybe<IncomeStatementAccount>>>;
  additionalPaidCapitalMap?: Maybe<Scalars['Map_String_Map_String_BigDecimalScalar']['output']>;
  additionalPaidCapitalTotal?: Maybe<Scalars['Map_String_BigDecimalScalar']['output']>;
  advances?: Maybe<Array<Maybe<IncomeStatementAccount>>>;
  advancesToEmp?: Maybe<Array<Maybe<IncomeStatementAccount>>>;
  advancesToEmpMap?: Maybe<Scalars['Map_String_Map_String_BigDecimalScalar']['output']>;
  advancesToEmpTotal?: Maybe<Scalars['Map_String_BigDecimalScalar']['output']>;
  advancesToShareHolders?: Maybe<Array<Maybe<IncomeStatementAccount>>>;
  advancesToShareHoldersMap?: Maybe<Scalars['Map_String_Map_String_BigDecimalScalar']['output']>;
  advancesToShareHoldersTotal?: Maybe<Scalars['Map_String_BigDecimalScalar']['output']>;
  allowDbtAcc?: Maybe<Array<Maybe<IncomeStatementAccount>>>;
  assets?: Maybe<Scalars['Map_String_BigDecimalScalar']['output']>;
  benefits?: Maybe<Array<Maybe<IncomeStatementAccount>>>;
  benefitsMap?: Maybe<Scalars['Map_String_Map_String_BigDecimalScalar']['output']>;
  benefitsTotal?: Maybe<Scalars['Map_String_BigDecimalScalar']['output']>;
  cashEquiv?: Maybe<Array<Maybe<IncomeStatementAccount>>>;
  constructionInProg?: Maybe<Array<Maybe<IncomeStatementAccount>>>;
  defferedTaxAssets?: Maybe<Array<Maybe<IncomeStatementAccount>>>;
  dividends?: Maybe<Array<Maybe<IncomeStatementAccount>>>;
  dividendsMap?: Maybe<Scalars['Map_String_Map_String_BigDecimalScalar']['output']>;
  dividendsTotal?: Maybe<Scalars['Map_String_BigDecimalScalar']['output']>;
  dueToDoctors?: Maybe<Array<Maybe<IncomeStatementAccount>>>;
  dueToDoctorsMap?: Maybe<Scalars['Map_String_Map_String_BigDecimalScalar']['output']>;
  dueToDoctorsTotal?: Maybe<Scalars['Map_String_BigDecimalScalar']['output']>;
  equity?: Maybe<Scalars['Map_String_BigDecimalScalar']['output']>;
  inputTax?: Maybe<Array<Maybe<IncomeStatementAccount>>>;
  intangibleAssets?: Maybe<Array<Maybe<IncomeStatementAccount>>>;
  inventory?: Maybe<Array<Maybe<IncomeStatementAccount>>>;
  isPeriodDateRangeChildList?: Maybe<Array<Maybe<IsPeriodDateRangeChild>>>;
  liabilities?: Maybe<Scalars['Map_String_BigDecimalScalar']['output']>;
  loansReceivable?: Maybe<Array<Maybe<IncomeStatementAccount>>>;
  mapAccumulatedDep?: Maybe<Scalars['Map_String_Map_String_BigDecimalScalar']['output']>;
  mapAdvances?: Maybe<Scalars['Map_String_Map_String_BigDecimalScalar']['output']>;
  mapAllowDbtAcc?: Maybe<Scalars['Map_String_Map_String_BigDecimalScalar']['output']>;
  mapCashEquiv?: Maybe<Scalars['Map_String_Map_String_BigDecimalScalar']['output']>;
  mapConstructionInProg?: Maybe<Scalars['Map_String_Map_String_BigDecimalScalar']['output']>;
  mapDefferedTaxAssets?: Maybe<Scalars['Map_String_Map_String_BigDecimalScalar']['output']>;
  mapInputTax?: Maybe<Scalars['Map_String_Map_String_BigDecimalScalar']['output']>;
  mapIntangibleAssets?: Maybe<Scalars['Map_String_Map_String_BigDecimalScalar']['output']>;
  mapInventory?: Maybe<Scalars['Map_String_Map_String_BigDecimalScalar']['output']>;
  mapLoansReceivable?: Maybe<Scalars['Map_String_Map_String_BigDecimalScalar']['output']>;
  mapOtherCurrAss?: Maybe<Scalars['Map_String_Map_String_BigDecimalScalar']['output']>;
  mapOtherNonCurrentAssets?: Maybe<Scalars['Map_String_Map_String_BigDecimalScalar']['output']>;
  mapPrePayments?: Maybe<Scalars['Map_String_Map_String_BigDecimalScalar']['output']>;
  mapPropPlantEquipment?: Maybe<Scalars['Map_String_Map_String_BigDecimalScalar']['output']>;
  mapToolsSupplies?: Maybe<Scalars['Map_String_Map_String_BigDecimalScalar']['output']>;
  mapTradeReceivable?: Maybe<Scalars['Map_String_Map_String_BigDecimalScalar']['output']>;
  nonPayableCurrent?: Maybe<Array<Maybe<IncomeStatementAccount>>>;
  nonPayableCurrentMap?: Maybe<Scalars['Map_String_Map_String_BigDecimalScalar']['output']>;
  nonPayableCurrentTotal?: Maybe<Scalars['Map_String_BigDecimalScalar']['output']>;
  notesPayableNonCurrent?: Maybe<Array<Maybe<IncomeStatementAccount>>>;
  notesPayableNonCurrentMap?: Maybe<Scalars['Map_String_Map_String_BigDecimalScalar']['output']>;
  notesPayableNonCurrentTotal?: Maybe<Scalars['Map_String_BigDecimalScalar']['output']>;
  otherCurrAss?: Maybe<Array<Maybe<IncomeStatementAccount>>>;
  otherCurrentPayables?: Maybe<Array<Maybe<IncomeStatementAccount>>>;
  otherCurrentPayablesMap?: Maybe<Scalars['Map_String_Map_String_BigDecimalScalar']['output']>;
  otherCurrentPayablesTotal?: Maybe<Scalars['Map_String_BigDecimalScalar']['output']>;
  otherNonCurrentAssets?: Maybe<Array<Maybe<IncomeStatementAccount>>>;
  otherNonCurrentLiabilities?: Maybe<Array<Maybe<IncomeStatementAccount>>>;
  otherNonCurrentLiabilitiesMap?: Maybe<Scalars['Map_String_Map_String_BigDecimalScalar']['output']>;
  otherNonCurrentLiabilitiesTotal?: Maybe<Scalars['Map_String_BigDecimalScalar']['output']>;
  period?: Maybe<Scalars['String']['output']>;
  permitAndLiscensPayables?: Maybe<Array<Maybe<IncomeStatementAccount>>>;
  permitAndLiscensPayablesMap?: Maybe<Scalars['Map_String_Map_String_BigDecimalScalar']['output']>;
  permitAndLiscensPayablesTotal?: Maybe<Scalars['Map_String_BigDecimalScalar']['output']>;
  prePayments?: Maybe<Array<Maybe<IncomeStatementAccount>>>;
  propPlantEquipment?: Maybe<Array<Maybe<IncomeStatementAccount>>>;
  retainedEarnings?: Maybe<Array<Maybe<IncomeStatementAccount>>>;
  retainedEarningsMap?: Maybe<Scalars['Map_String_Map_String_BigDecimalScalar']['output']>;
  retainedEarningsTotal?: Maybe<Scalars['Map_String_BigDecimalScalar']['output']>;
  shareCapital?: Maybe<Array<Maybe<IncomeStatementAccount>>>;
  shareCapitalMap?: Maybe<Scalars['Map_String_Map_String_BigDecimalScalar']['output']>;
  shareCapitalTotal?: Maybe<Scalars['Map_String_BigDecimalScalar']['output']>;
  taxesPayable?: Maybe<Array<Maybe<IncomeStatementAccount>>>;
  taxesPayableMap?: Maybe<Scalars['Map_String_Map_String_BigDecimalScalar']['output']>;
  taxesPayableTotal?: Maybe<Scalars['Map_String_BigDecimalScalar']['output']>;
  toolsSupplies?: Maybe<Array<Maybe<IncomeStatementAccount>>>;
  totalAccumulatedDep?: Maybe<Scalars['Map_String_BigDecimalScalar']['output']>;
  totalAdvances?: Maybe<Scalars['Map_String_BigDecimalScalar']['output']>;
  totalAllowDbtAcc?: Maybe<Scalars['Map_String_BigDecimalScalar']['output']>;
  totalCashEquiv?: Maybe<Scalars['Map_String_BigDecimalScalar']['output']>;
  totalConstructionInProg?: Maybe<Scalars['Map_String_BigDecimalScalar']['output']>;
  totalCurrentAssets?: Maybe<Scalars['Map_String_BigDecimalScalar']['output']>;
  totalCurrentLiabilities?: Maybe<Scalars['Map_String_BigDecimalScalar']['output']>;
  totalDefferedTaxAssets?: Maybe<Scalars['Map_String_BigDecimalScalar']['output']>;
  totalInputTax?: Maybe<Scalars['Map_String_BigDecimalScalar']['output']>;
  totalIntangibleAssets?: Maybe<Scalars['Map_String_BigDecimalScalar']['output']>;
  totalInventory?: Maybe<Scalars['Map_String_BigDecimalScalar']['output']>;
  totalLiabilitiesAndEquity?: Maybe<Scalars['Map_String_BigDecimalScalar']['output']>;
  totalLoansReceivable?: Maybe<Scalars['Map_String_BigDecimalScalar']['output']>;
  totalNonCurrentAssets?: Maybe<Scalars['Map_String_BigDecimalScalar']['output']>;
  totalNonCurrentLiabilities?: Maybe<Scalars['Map_String_BigDecimalScalar']['output']>;
  totalOtherCurrAss?: Maybe<Scalars['Map_String_BigDecimalScalar']['output']>;
  totalOtherNonCurrentAssets?: Maybe<Scalars['Map_String_BigDecimalScalar']['output']>;
  totalPrePayments?: Maybe<Scalars['Map_String_BigDecimalScalar']['output']>;
  totalPropPlantEquipment?: Maybe<Scalars['Map_String_BigDecimalScalar']['output']>;
  totalToolsSupplies?: Maybe<Scalars['Map_String_BigDecimalScalar']['output']>;
  totalTradeReceivable?: Maybe<Scalars['Map_String_BigDecimalScalar']['output']>;
  tradeReceivable?: Maybe<Array<Maybe<IncomeStatementAccount>>>;
};

export type Balances = {
  __typename?: 'Balances';
  balance?: Maybe<Scalars['BigDecimal']['output']>;
  billingItemId?: Maybe<Scalars['UUID']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  employeeid?: Maybe<Scalars['UUID']['output']>;
  type?: Maybe<Scalars['String']['output']>;
};

export type Bank = {
  __typename?: 'Bank';
  accountName?: Maybe<Scalars['String']['output']>;
  accountNumber?: Maybe<Scalars['String']['output']>;
  acquiringBank?: Maybe<Scalars['Boolean']['output']>;
  bankAddress?: Maybe<Scalars['String']['output']>;
  bankaccountId?: Maybe<Scalars['String']['output']>;
  bankname?: Maybe<Scalars['String']['output']>;
  branch?: Maybe<Scalars['String']['output']>;
  code?: Maybe<Scalars['String']['output']>;
  config?: Maybe<CoaConfig>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  department?: Maybe<Array<Maybe<Scalars['UUID']['output']>>>;
  description?: Maybe<Scalars['String']['output']>;
  domain?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
};

export type BankInput = {
  accountName?: InputMaybe<Scalars['String']['input']>;
  accountNumber?: InputMaybe<Scalars['String']['input']>;
  acquiringBank?: InputMaybe<Scalars['Boolean']['input']>;
  bankAddress?: InputMaybe<Scalars['String']['input']>;
  bankaccountId?: InputMaybe<Scalars['String']['input']>;
  bankname?: InputMaybe<Scalars['String']['input']>;
  branch?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};

export type Barangay = {
  __typename?: 'Barangay';
  id?: Maybe<Scalars['UUID']['output']>;
  municipality?: Maybe<Municipality>;
  name?: Maybe<Scalars['String']['output']>;
};

export type BedCapacity = {
  __typename?: 'BedCapacity';
  abc?: Maybe<Scalars['String']['output']>;
  bor?: Maybe<Scalars['String']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  implementingBeds?: Maybe<Scalars['String']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  reportingYear?: Maybe<Scalars['Int']['output']>;
  submittedDateTime?: Maybe<Scalars['Instant']['output']>;
};

export type BedCapacityOccupancy = {
  __typename?: 'BedCapacityOccupancy';
  bedCapacityTables?: Maybe<Array<Maybe<BedCapacityTable>>>;
  bedOccupancyRate?: Maybe<Scalars['BigDecimal']['output']>;
};

export type BedCapacitySubTable = {
  __typename?: 'BedCapacitySubTable';
  key?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  value?: Maybe<Scalars['Long']['output']>;
};

export type BedCapacityTable = {
  __typename?: 'BedCapacityTable';
  bedCapacitySubTables?: Maybe<Array<Maybe<BedCapacitySubTable>>>;
  key?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  value?: Maybe<Scalars['Long']['output']>;
};

export type BeginningBalance = {
  __typename?: 'BeginningBalance';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  dateTrans?: Maybe<Scalars['Instant']['output']>;
  department?: Maybe<Department>;
  id?: Maybe<Scalars['UUID']['output']>;
  isCancel?: Maybe<Scalars['Boolean']['output']>;
  isPosted?: Maybe<Scalars['Boolean']['output']>;
  item?: Maybe<Item>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  quantity?: Maybe<Scalars['Int']['output']>;
  refNum?: Maybe<Scalars['String']['output']>;
  unitCost?: Maybe<Scalars['BigDecimal']['output']>;
};

export type BeginningDetails = {
  __typename?: 'BeginningDetails';
  beginning?: Maybe<BeginningTransaction>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  department?: Maybe<Department>;
  id?: Maybe<Scalars['UUID']['output']>;
  item?: Maybe<Item>;
  itemCategory?: Maybe<Scalars['String']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  posted?: Maybe<Scalars['Boolean']['output']>;
  qty?: Maybe<Scalars['Int']['output']>;
  unitCost?: Maybe<Scalars['BigDecimal']['output']>;
  unitMeasurement?: Maybe<Scalars['String']['output']>;
  uou?: Maybe<Scalars['String']['output']>;
};

export type BeginningItem = {
  __typename?: 'BeginningItem';
  allow_trade?: Maybe<Scalars['Boolean']['output']>;
  department?: Maybe<Department>;
  documentTypes?: Maybe<Scalars['UUID']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  is_assign?: Maybe<Scalars['Boolean']['output']>;
  item?: Maybe<Item>;
  itemCategory?: Maybe<Scalars['String']['output']>;
  lastUnitCost?: Maybe<Scalars['BigDecimal']['output']>;
  referenceNo?: Maybe<Scalars['String']['output']>;
  reorder_quantity?: Maybe<Scalars['BigDecimal']['output']>;
  unitMeasurement?: Maybe<Scalars['String']['output']>;
  uou?: Maybe<Scalars['String']['output']>;
};

export type BeginningItemDtoInput = {
  department?: InputMaybe<DepartmentInput>;
  id?: InputMaybe<Scalars['String']['input']>;
  isNew?: InputMaybe<Scalars['Boolean']['input']>;
  item?: InputMaybe<ItemInput>;
  posted?: InputMaybe<Scalars['Boolean']['input']>;
  qty?: InputMaybe<Scalars['Int']['input']>;
  unitCost?: InputMaybe<Scalars['BigDecimal']['input']>;
};

export type BeginningTransaction = {
  __typename?: 'BeginningTransaction';
  accType?: Maybe<Scalars['UUID']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  department?: Maybe<Department>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  posted?: Maybe<Scalars['Boolean']['output']>;
  postedBy?: Maybe<Scalars['String']['output']>;
  postedLedger?: Maybe<Scalars['UUID']['output']>;
  remarksNotes?: Maybe<Scalars['String']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  transBy?: Maybe<Employee>;
  transDate?: Maybe<Scalars['Instant']['output']>;
  transNo?: Maybe<Scalars['String']['output']>;
};

export type BeginningTransactionInput = {
  accType?: InputMaybe<Scalars['UUID']['input']>;
  department?: InputMaybe<DepartmentInput>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  posted?: InputMaybe<Scalars['Boolean']['input']>;
  postedBy?: InputMaybe<Scalars['String']['input']>;
  postedLedger?: InputMaybe<Scalars['UUID']['input']>;
  remarksNotes?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  transBy?: InputMaybe<EmployeeInput>;
  transDate?: InputMaybe<Scalars['Instant']['input']>;
  transNo?: InputMaybe<Scalars['String']['input']>;
};

export type Billing = {
  __typename?: 'Billing';
  admissionCharge?: Maybe<Scalars['Boolean']['output']>;
  balance?: Maybe<Scalars['BigDecimal']['output']>;
  billingItemList?: Maybe<Array<Maybe<BillingItem>>>;
  billingNo?: Maybe<Scalars['String']['output']>;
  cashBasisItems?: Maybe<Array<Maybe<CashBasisItem>>>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  /** Detect if Credit limit is reached */
  creditLimit?: Maybe<Scalars['BigDecimal']['output']>;
  deductions?: Maybe<Scalars['String']['output']>;
  entryDateTime?: Maybe<Scalars['Instant']['output']>;
  finalSoa?: Maybe<Scalars['String']['output']>;
  finalizedSoa?: Maybe<Scalars['Boolean']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  isAllowedProgressPayment?: Maybe<Scalars['Boolean']['output']>;
  /** Detect if Credit limit is reached */
  isCreditLimitReached?: Maybe<Scalars['Boolean']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  locked?: Maybe<Scalars['Boolean']['output']>;
  lockedBy?: Maybe<Scalars['String']['output']>;
  otcname?: Maybe<Scalars['String']['output']>;
  overrideCreditLimit?: Maybe<Scalars['BigDecimal']['output']>;
  overrideProgressPayment?: Maybe<Scalars['Boolean']['output']>;
  patient?: Maybe<Patient>;
  patientCase?: Maybe<Case>;
  /** List of Or Number based on Billing */
  paymentTracker?: Maybe<Array<Maybe<PaymentTracker>>>;
  payments?: Maybe<Scalars['BigDecimal']['output']>;
  pricetiermanual?: Maybe<Scalars['UUID']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  totals?: Maybe<Scalars['BigDecimal']['output']>;
};

export type BillingBarcodeDto = {
  __typename?: 'BillingBarcodeDto';
  id?: Maybe<Scalars['UUID']['output']>;
  quantity?: Maybe<Scalars['Int']['output']>;
  supply?: Maybe<SupplyDto>;
};

export type BillingDeductionSummary = {
  __typename?: 'BillingDeductionSummary';
  billingNo?: Maybe<Scalars['String']['output']>;
  dischargedDate?: Maybe<Scalars['String']['output']>;
  hci?: Maybe<Scalars['BigDecimal']['output']>;
  icd?: Maybe<Scalars['String']['output']>;
  patient?: Maybe<Scalars['String']['output']>;
  pf?: Maybe<Scalars['BigDecimal']['output']>;
  recordNo?: Maybe<Scalars['Int']['output']>;
  rvs?: Maybe<Scalars['String']['output']>;
  soa?: Maybe<Scalars['String']['output']>;
  total?: Maybe<Scalars['BigDecimal']['output']>;
  totalSize?: Maybe<Scalars['Int']['output']>;
};

export type BillingDeductionSummaryPage = {
  __typename?: 'BillingDeductionSummaryPage';
  content?: Maybe<Array<Maybe<BillingDeductionSummary>>>;
  page?: Maybe<Scalars['Int']['output']>;
  size?: Maybe<Scalars['Int']['output']>;
  totalSize?: Maybe<Scalars['Int']['output']>;
};

export type BillingDto = {
  __typename?: 'BillingDto';
  billingNo?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  patient?: Maybe<PatientDto>;
  patientCase?: Maybe<PatientCaseDto>;
};

export type BillingInput = {
  admissionCharge?: InputMaybe<Scalars['Boolean']['input']>;
  balance?: InputMaybe<Scalars['BigDecimal']['input']>;
  billingItemList?: InputMaybe<Array<InputMaybe<BillingItemInput>>>;
  billingNo?: InputMaybe<Scalars['String']['input']>;
  cashBasisItems?: InputMaybe<Array<InputMaybe<CashBasisItemInput>>>;
  deductions?: InputMaybe<Scalars['String']['input']>;
  entryDateTime?: InputMaybe<Scalars['Instant']['input']>;
  finalSoa?: InputMaybe<Scalars['String']['input']>;
  finalizedSoa?: InputMaybe<Scalars['Boolean']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  locked?: InputMaybe<Scalars['Boolean']['input']>;
  lockedBy?: InputMaybe<Scalars['String']['input']>;
  otcname?: InputMaybe<Scalars['String']['input']>;
  overrideCreditLimit?: InputMaybe<Scalars['BigDecimal']['input']>;
  overrideProgressPayment?: InputMaybe<Scalars['Boolean']['input']>;
  patient?: InputMaybe<PatientInput>;
  patientCase?: InputMaybe<CaseInput>;
  payments?: InputMaybe<Scalars['BigDecimal']['input']>;
  pricetiermanual?: InputMaybe<Scalars['UUID']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  totals?: InputMaybe<Scalars['BigDecimal']['input']>;
};

export type BillingItem = {
  __typename?: 'BillingItem';
  amountdetails?: Maybe<Scalars['Map_String_BigDecimalScalar']['output']>;
  annotationAmount?: Maybe<Scalars['BigDecimal']['output']>;
  apProcess?: Maybe<Scalars['Boolean']['output']>;
  apackage?: Maybe<Package>;
  approvalCode?: Maybe<Scalars['String']['output']>;
  arBilled?: Maybe<Scalars['Boolean']['output']>;
  arDeductionTotalClearing?: Maybe<Scalars['BigDecimal']['output']>;
  arDeductionTotalDirect?: Maybe<Scalars['BigDecimal']['output']>;
  arErPatient?: Maybe<Scalars['BigDecimal']['output']>;
  arInPatient?: Maybe<Scalars['BigDecimal']['output']>;
  arOtcPatient?: Maybe<Scalars['BigDecimal']['output']>;
  arOutPatient?: Maybe<Scalars['BigDecimal']['output']>;
  billing?: Maybe<Billing>;
  canceledref?: Maybe<Scalars['UUID']['output']>;
  cashBasisUser?: Maybe<Scalars['String']['output']>;
  cogsPerItem?: Maybe<Scalars['BigDecimal']['output']>;
  companyAccount?: Maybe<CompanyAccount>;
  costDept?: Maybe<Department>;
  costOfSale?: Maybe<Scalars['BigDecimal']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  credit?: Maybe<Scalars['BigDecimal']['output']>;
  debit?: Maybe<Scalars['BigDecimal']['output']>;
  department?: Maybe<Department>;
  description?: Maybe<Scalars['String']['output']>;
  details?: Maybe<Scalars['Map_String_StringScalar']['output']>;
  discount?: Maybe<Discount>;
  discountAmount?: Maybe<Scalars['BigDecimal']['output']>;
  discountAmountArER?: Maybe<Scalars['BigDecimal']['output']>;
  discountAmountArIP?: Maybe<Scalars['BigDecimal']['output']>;
  discountAmountArOPD?: Maybe<Scalars['BigDecimal']['output']>;
  discountAmountArOTC?: Maybe<Scalars['BigDecimal']['output']>;
  discountAmountVat?: Maybe<Scalars['BigDecimal']['output']>;
  discountDepartment?: Maybe<Department>;
  /** List of item details based on Deductions */
  discountDetails?: Maybe<Array<Maybe<AmountDetailsDto>>>;
  dmConsignment?: Maybe<Scalars['BigDecimal']['output']>;
  dmConsignmentPayable?: Maybe<Scalars['BigDecimal']['output']>;
  dmInventory?: Maybe<Scalars['BigDecimal']['output']>;
  dmPackage?: Maybe<Scalars['BigDecimal']['output']>;
  domain?: Maybe<Scalars['String']['output']>;
  entrydate?: Maybe<Scalars['Instant']['output']>;
  flagValue?: Maybe<Scalars['String']['output']>;
  forPosting?: Maybe<Scalars['Boolean']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  income?: Maybe<Scalars['BigDecimal']['output']>;
  inventoryDeduct?: Maybe<Scalars['BigDecimal']['output']>;
  inventoryDept?: Maybe<Department>;
  isProgress?: Maybe<Scalars['Boolean']['output']>;
  item?: Maybe<Scalars['String']['output']>;
  itemCategory?: Maybe<AccountingCategory>;
  itemType?: Maybe<BillingItemType>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  lastTouch?: Maybe<Scalars['String']['output']>;
  nonpnf?: Maybe<Scalars['Boolean']['output']>;
  orderSlipItemNo?: Maybe<Scalars['String']['output']>;
  paymentRecomp?: Maybe<Scalars['Boolean']['output']>;
  pfPaymentRecomp?: Maybe<Scalars['Boolean']['output']>;
  pnf?: Maybe<Scalars['Boolean']['output']>;
  postedledger?: Maybe<Scalars['UUID']['output']>;
  price?: Maybe<Scalars['BigDecimal']['output']>;
  priceTierDetail?: Maybe<PriceTierDetail>;
  qty?: Maybe<Scalars['Int']['output']>;
  reappliedDatetime?: Maybe<Scalars['Instant']['output']>;
  recomputeDatetime?: Maybe<Scalars['Instant']['output']>;
  recordNo?: Maybe<Scalars['String']['output']>;
  registryTypeCharged?: Maybe<Scalars['String']['output']>;
  revenueDept?: Maybe<Department>;
  rfDetails?: Maybe<Scalars['String']['output']>;
  rfFee?: Maybe<Scalars['BigDecimal']['output']>;
  roomAndBoard?: Maybe<Department>;
  /** List of Service/item details */
  serviceDetials?: Maybe<ItemServiceDto>;
  serviceOverhead?: Maybe<Scalars['BigDecimal']['output']>;
  soaGrouping?: Maybe<SoaGrouping>;
  status?: Maybe<BillingItemStatus>;
  subtotal?: Maybe<Scalars['BigDecimal']['output']>;
  supportingDocs?: Maybe<Array<Maybe<SupportingDoc>>>;
  taggedCashAllowedBy?: Maybe<Scalars['String']['output']>;
  taggedOrNumber?: Maybe<Scalars['String']['output']>;
  tempCanceled?: Maybe<Scalars['Boolean']['output']>;
  tmpBalance?: Maybe<Scalars['BigDecimal']['output']>;
  transactionDate?: Maybe<Scalars['Instant']['output']>;
  vatAmountdetails?: Maybe<Scalars['Map_String_BigDecimalScalar']['output']>;
  vatOutputTax?: Maybe<Scalars['BigDecimal']['output']>;
};

export type BillingItemInput = {
  amountdetails?: InputMaybe<Scalars['Map_String_BigDecimalScalar']['input']>;
  annotationAmount?: InputMaybe<Scalars['BigDecimal']['input']>;
  apProcess?: InputMaybe<Scalars['Boolean']['input']>;
  apackage?: InputMaybe<PackageInput>;
  approvalCode?: InputMaybe<Scalars['String']['input']>;
  arBilled?: InputMaybe<Scalars['Boolean']['input']>;
  arDeductionTotalClearing?: InputMaybe<Scalars['BigDecimal']['input']>;
  arDeductionTotalDirect?: InputMaybe<Scalars['BigDecimal']['input']>;
  arErPatient?: InputMaybe<Scalars['BigDecimal']['input']>;
  arInPatient?: InputMaybe<Scalars['BigDecimal']['input']>;
  arOtcPatient?: InputMaybe<Scalars['BigDecimal']['input']>;
  arOutPatient?: InputMaybe<Scalars['BigDecimal']['input']>;
  billing?: InputMaybe<BillingInput>;
  canceledref?: InputMaybe<Scalars['UUID']['input']>;
  cashBasisUser?: InputMaybe<Scalars['String']['input']>;
  cogsPerItem?: InputMaybe<Scalars['BigDecimal']['input']>;
  companyAccount?: InputMaybe<CompanyAccountInput>;
  costDept?: InputMaybe<DepartmentInput>;
  costOfSale?: InputMaybe<Scalars['BigDecimal']['input']>;
  credit?: InputMaybe<Scalars['BigDecimal']['input']>;
  debit?: InputMaybe<Scalars['BigDecimal']['input']>;
  department?: InputMaybe<DepartmentInput>;
  description?: InputMaybe<Scalars['String']['input']>;
  details?: InputMaybe<Scalars['Map_String_StringScalar']['input']>;
  discount?: InputMaybe<DiscountInput>;
  discountAmount?: InputMaybe<Scalars['BigDecimal']['input']>;
  discountAmountArER?: InputMaybe<Scalars['BigDecimal']['input']>;
  discountAmountArIP?: InputMaybe<Scalars['BigDecimal']['input']>;
  discountAmountArOPD?: InputMaybe<Scalars['BigDecimal']['input']>;
  discountAmountArOTC?: InputMaybe<Scalars['BigDecimal']['input']>;
  discountAmountVat?: InputMaybe<Scalars['BigDecimal']['input']>;
  discountDepartment?: InputMaybe<DepartmentInput>;
  dmConsignment?: InputMaybe<Scalars['BigDecimal']['input']>;
  dmConsignmentPayable?: InputMaybe<Scalars['BigDecimal']['input']>;
  dmInventory?: InputMaybe<Scalars['BigDecimal']['input']>;
  dmPackage?: InputMaybe<Scalars['BigDecimal']['input']>;
  flagValue?: InputMaybe<Scalars['String']['input']>;
  forPosting?: InputMaybe<Scalars['Boolean']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  income?: InputMaybe<Scalars['BigDecimal']['input']>;
  inventoryDeduct?: InputMaybe<Scalars['BigDecimal']['input']>;
  inventoryDept?: InputMaybe<DepartmentInput>;
  isProgress?: InputMaybe<Scalars['Boolean']['input']>;
  item?: InputMaybe<Scalars['String']['input']>;
  itemCategory?: InputMaybe<AccountingCategoryInput>;
  itemType?: InputMaybe<BillingItemType>;
  nonpnf?: InputMaybe<Scalars['Boolean']['input']>;
  orderSlipItemNo?: InputMaybe<Scalars['String']['input']>;
  paymentRecomp?: InputMaybe<Scalars['Boolean']['input']>;
  pfPaymentRecomp?: InputMaybe<Scalars['Boolean']['input']>;
  pnf?: InputMaybe<Scalars['Boolean']['input']>;
  postedledger?: InputMaybe<Scalars['UUID']['input']>;
  price?: InputMaybe<Scalars['BigDecimal']['input']>;
  priceTierDetail?: InputMaybe<PriceTierDetailInput>;
  qty?: InputMaybe<Scalars['Int']['input']>;
  reappliedDatetime?: InputMaybe<Scalars['Instant']['input']>;
  recomputeDatetime?: InputMaybe<Scalars['Instant']['input']>;
  recordNo?: InputMaybe<Scalars['String']['input']>;
  registryTypeCharged?: InputMaybe<Scalars['String']['input']>;
  revenueDept?: InputMaybe<DepartmentInput>;
  rfDetails?: InputMaybe<Scalars['String']['input']>;
  rfFee?: InputMaybe<Scalars['BigDecimal']['input']>;
  roomAndBoard?: InputMaybe<DepartmentInput>;
  serviceOverhead?: InputMaybe<Scalars['BigDecimal']['input']>;
  soaGrouping?: InputMaybe<SoaGroupingInput>;
  status?: InputMaybe<BillingItemStatus>;
  subtotal?: InputMaybe<Scalars['BigDecimal']['input']>;
  supportingDocs?: InputMaybe<Array<InputMaybe<SupportingDocInput>>>;
  taggedCashAllowedBy?: InputMaybe<Scalars['String']['input']>;
  taggedOrNumber?: InputMaybe<Scalars['String']['input']>;
  tempCanceled?: InputMaybe<Scalars['Boolean']['input']>;
  tmpBalance?: InputMaybe<Scalars['BigDecimal']['input']>;
  transactionDate?: InputMaybe<Scalars['Instant']['input']>;
  vatAmountdetails?: InputMaybe<Scalars['Map_String_BigDecimalScalar']['input']>;
  vatOutputTax?: InputMaybe<Scalars['BigDecimal']['input']>;
};

export enum BillingItemStatus {
  Active = 'ACTIVE',
  Canceled = 'CANCELED'
}

export enum BillingItemType {
  AnnotationNotificationGroups = 'ANNOTATION_NOTIFICATION_GROUPS',
  AnnotationPaymentsGroups = 'ANNOTATION_PAYMENTS_GROUPS',
  Cathlab = 'CATHLAB',
  Deductions = 'DEDUCTIONS',
  Deductionspf = 'DEDUCTIONSPF',
  Diagnostics = 'DIAGNOSTICS',
  Medicines = 'MEDICINES',
  Orfee = 'ORFEE',
  Others = 'OTHERS',
  Oxygen = 'OXYGEN',
  Payments = 'PAYMENTS',
  Pf = 'PF',
  Roomboard = 'ROOMBOARD',
  Supplies = 'SUPPLIES'
}

export type BillingItemWithBsDtoPage = {
  __typename?: 'BillingItemWithBsDTOPage';
  content?: Maybe<Array<Maybe<CustomBillingItemNativeDto>>>;
  page?: Maybe<Scalars['Int']['output']>;
  size?: Maybe<Scalars['Int']['output']>;
  totalSize?: Maybe<Scalars['BigInteger']['output']>;
};

export type BillingOperationResult = {
  __typename?: 'BillingOperationResult';
  entityIdRef?: Maybe<Scalars['UUID']['output']>;
  message?: Maybe<Scalars['String']['output']>;
  operationOk: Scalars['Boolean']['output'];
};

export type BillingSchedule = {
  __typename?: 'BillingSchedule';
  billingScheduleItems?: Maybe<Array<Maybe<BillingScheduleItems>>>;
  billingScheduleNo?: Maybe<Scalars['String']['output']>;
  companyAccount?: Maybe<CompanyAccount>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  debitAdjustment?: Maybe<Scalars['BigDecimal']['output']>;
  details?: Maybe<Scalars['Map_String_StringScalar']['output']>;
  domain?: Maybe<Scalars['String']['output']>;
  dueDate?: Maybe<Scalars['SqlDate']['output']>;
  flagValue?: Maybe<Scalars['String']['output']>;
  hci?: Maybe<Scalars['BigDecimal']['output']>;
  hciWithDebit?: Maybe<Scalars['BigDecimal']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  isVoided?: Maybe<Scalars['Boolean']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  negativeHciWithDebit?: Maybe<Scalars['BigDecimal']['output']>;
  patientType?: Maybe<Scalars['String']['output']>;
  pf?: Maybe<Scalars['BigDecimal']['output']>;
  pfWithDebit?: Maybe<Scalars['BigDecimal']['output']>;
  remarks?: Maybe<Scalars['String']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  totalAmount?: Maybe<Scalars['BigDecimal']['output']>;
  totalAmountWithDebit?: Maybe<Scalars['BigDecimal']['output']>;
  totalHCI?: Maybe<Scalars['BigDecimal']['output']>;
  totalHciWithDebit?: Maybe<Scalars['BigDecimal']['output']>;
  totalPf?: Maybe<Scalars['BigDecimal']['output']>;
  totalReceivableAmount?: Maybe<Scalars['BigDecimal']['output']>;
  transactionDate?: Maybe<Scalars['SqlDate']['output']>;
  varA?: Maybe<Scalars['BigDecimal']['output']>;
  varB?: Maybe<Scalars['BigDecimal']['output']>;
  varC?: Maybe<Scalars['BigDecimal']['output']>;
};

export type BillingScheduleInput = {
  billingScheduleItems?: InputMaybe<Array<InputMaybe<BillingScheduleItemsInput>>>;
  billingScheduleNo?: InputMaybe<Scalars['String']['input']>;
  companyAccount?: InputMaybe<CompanyAccountInput>;
  debitAdjustment?: InputMaybe<Scalars['BigDecimal']['input']>;
  dueDate?: InputMaybe<Scalars['SqlDate']['input']>;
  flagValue?: InputMaybe<Scalars['String']['input']>;
  hci?: InputMaybe<Scalars['BigDecimal']['input']>;
  hciWithDebit?: InputMaybe<Scalars['BigDecimal']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  isVoided?: InputMaybe<Scalars['Boolean']['input']>;
  negativeHciWithDebit?: InputMaybe<Scalars['BigDecimal']['input']>;
  patientType?: InputMaybe<Scalars['String']['input']>;
  pf?: InputMaybe<Scalars['BigDecimal']['input']>;
  pfWithDebit?: InputMaybe<Scalars['BigDecimal']['input']>;
  remarks?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  totalAmount?: InputMaybe<Scalars['BigDecimal']['input']>;
  totalAmountWithDebit?: InputMaybe<Scalars['BigDecimal']['input']>;
  totalHCI?: InputMaybe<Scalars['BigDecimal']['input']>;
  totalHciWithDebit?: InputMaybe<Scalars['BigDecimal']['input']>;
  totalPf?: InputMaybe<Scalars['BigDecimal']['input']>;
  totalReceivableAmount?: InputMaybe<Scalars['BigDecimal']['input']>;
  transactionDate?: InputMaybe<Scalars['SqlDate']['input']>;
  varA?: InputMaybe<Scalars['BigDecimal']['input']>;
  varB?: InputMaybe<Scalars['BigDecimal']['input']>;
  varC?: InputMaybe<Scalars['BigDecimal']['input']>;
};

export type BillingScheduleItems = {
  __typename?: 'BillingScheduleItems';
  amount?: Maybe<Scalars['BigDecimal']['output']>;
  approvalCode?: Maybe<Scalars['String']['output']>;
  arManualDeductions?: Maybe<ArManualDeductions>;
  arTransfer?: Maybe<ArTransfer>;
  billing?: Maybe<Billing>;
  billingItem?: Maybe<BillingItem>;
  billingSchedule?: Maybe<BillingSchedule>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  debitAdjustment?: Maybe<Scalars['BigDecimal']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  isVoided?: Maybe<Scalars['Boolean']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  lastTouch?: Maybe<Scalars['String']['output']>;
  totalAmount?: Maybe<Scalars['BigDecimal']['output']>;
  type?: Maybe<Scalars['String']['output']>;
};

export type BillingScheduleItemsInput = {
  amount?: InputMaybe<Scalars['BigDecimal']['input']>;
  approvalCode?: InputMaybe<Scalars['String']['input']>;
  arManualDeductions?: InputMaybe<ArManualDeductionsInput>;
  arTransfer?: InputMaybe<ArTransferInput>;
  billing?: InputMaybe<BillingInput>;
  billingItem?: InputMaybe<BillingItemInput>;
  billingSchedule?: InputMaybe<BillingScheduleInput>;
  debitAdjustment?: InputMaybe<Scalars['BigDecimal']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  isVoided?: InputMaybe<Scalars['Boolean']['input']>;
  totalAmount?: InputMaybe<Scalars['BigDecimal']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};

export type BiometricDevice = {
  __typename?: 'BiometricDevice';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  deviceName?: Maybe<Scalars['String']['output']>;
  devicePassword?: Maybe<Scalars['String']['output']>;
  deviceUsername?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  ipAddress?: Maybe<Scalars['String']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  port?: Maybe<Scalars['String']['output']>;
  session?: Maybe<Scalars['String']['output']>;
  sessionAddedAt?: Maybe<Scalars['Instant']['output']>;
};

export type BiometricServiceConfig = {
  __typename?: 'BiometricServiceConfig';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  ipAddress?: Maybe<Scalars['String']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  port?: Maybe<Scalars['String']['output']>;
};

export type BsPhilClaims = {
  __typename?: 'BsPhilClaims';
  arNo?: Maybe<Scalars['String']['output']>;
  billing?: Maybe<Billing>;
  billingItemTransactionDate?: Maybe<Scalars['Instant']['output']>;
  caseNo?: Maybe<Scalars['String']['output']>;
  claimAmount?: Maybe<Scalars['BigDecimal']['output']>;
  claimCreator?: Maybe<Scalars['String']['output']>;
  claimDateCreated?: Maybe<Scalars['Instant']['output']>;
  claimNumber?: Maybe<Scalars['String']['output']>;
  claimSeriesLhio?: Maybe<Scalars['String']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  hci?: Maybe<Scalars['BigDecimal']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  patient?: Maybe<Patient>;
  patientCase?: Maybe<Case>;
  pf?: Maybe<Scalars['BigDecimal']['output']>;
  processDate?: Maybe<Scalars['Instant']['output']>;
  processStage?: Maybe<Scalars['String']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  voucherDate?: Maybe<Scalars['Date']['output']>;
  voucherNo?: Maybe<Scalars['String']['output']>;
};

export type BsPhilClaimsItems = {
  __typename?: 'BsPhilClaimsItems';
  accountReceivable?: Maybe<AccountReceivable>;
  accountReceivableItems?: Maybe<AccountReceivableItems>;
  amount?: Maybe<Scalars['BigDecimal']['output']>;
  billing?: Maybe<Scalars['UUID']['output']>;
  billingItem?: Maybe<BillingItem>;
  bsPhilClaims?: Maybe<BsPhilClaims>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  patient?: Maybe<Scalars['UUID']['output']>;
  patientCase?: Maybe<Scalars['UUID']['output']>;
  type?: Maybe<Scalars['String']['output']>;
};

export type BundyUserDto = {
  __typename?: 'BundyUserDto';
  dwEnable?: Maybe<Scalars['String']['output']>;
  dwEnrollNumber?: Maybe<Scalars['String']['output']>;
  dwMachineNumber: Scalars['Int']['output'];
  fingerId: Scalars['Int']['output'];
  flag: Scalars['Int']['output'];
  name?: Maybe<Scalars['String']['output']>;
  privilege: Scalars['Int']['output'];
  userId?: Maybe<Scalars['String']['output']>;
};

export type CeSupportingDocuInput = {
  description?: InputMaybe<Scalars['String']['input']>;
  fileName?: InputMaybe<Scalars['String']['input']>;
  referenceNo?: InputMaybe<Scalars['String']['input']>;
};

export type Case = {
  __typename?: 'Case';
  accommodationType?: Maybe<Scalars['String']['output']>;
  /** Get all First Active billing record */
  activeBilling?: Maybe<Billing>;
  admissionDatetime?: Maybe<Scalars['Instant']['output']>;
  admissionKit?: Maybe<Scalars['String']['output']>;
  admittingDiagnosis?: Maybe<Scalars['String']['output']>;
  admittingOfficer?: Maybe<Employee>;
  admittingPhysician?: Maybe<Employee>;
  adultKitBag?: Maybe<Scalars['Boolean']['output']>;
  attendingPhysician?: Maybe<Employee>;
  billingrecords?: Maybe<Array<Maybe<Billing>>>;
  bsiInfectedDate?: Maybe<Scalars['Instant']['output']>;
  bsiInfection?: Maybe<Scalars['Boolean']['output']>;
  bsiInfectionBy?: Maybe<Employee>;
  /** Get all Case VitalSigns */
  caseInsurances?: Maybe<Array<Maybe<CaseInsurance>>>;
  /** Get all Case Intakes */
  caseIntakes?: Maybe<Array<Maybe<Intake>>>;
  /** Get all Case Medications */
  caseMedications?: Maybe<Array<Maybe<Medication>>>;
  caseNo?: Maybe<Scalars['String']['output']>;
  /** Get all Case NurseNotes */
  caseNurseNotes?: Maybe<Array<Maybe<NurseNote>>>;
  /** Get all Case Outputs */
  caseOutputs?: Maybe<Array<Maybe<Output>>>;
  /** Get all Case Transfers by Case */
  caseTransfers?: Maybe<Array<Maybe<Transfer>>>;
  /** Get all Case VitalSigns */
  caseVitalSigns?: Maybe<Array<Maybe<VitalSign>>>;
  chiefComplaint?: Maybe<Scalars['String']['output']>;
  comlogikRefNo?: Maybe<Scalars['String']['output']>;
  companyAddress?: Maybe<Scalars['String']['output']>;
  companyContact?: Maybe<Scalars['String']['output']>;
  companyName?: Maybe<Scalars['String']['output']>;
  companyPen?: Maybe<Scalars['String']['output']>;
  consultation?: Maybe<Scalars['String']['output']>;
  consultingPhysician?: Maybe<Employee>;
  consultingPhysicianTransfer?: Maybe<Employee>;
  courseInTheWard?: Maybe<Scalars['String']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  creditLimit?: Maybe<Scalars['BigDecimal']['output']>;
  deathExpiration?: Maybe<Scalars['String']['output']>;
  deathType?: Maybe<Scalars['String']['output']>;
  deliveryType?: Maybe<Scalars['String']['output']>;
  department?: Maybe<Department>;
  diet?: Maybe<Diet>;
  dischargeCondition?: Maybe<Scalars['String']['output']>;
  dischargeDiagnosis?: Maybe<Scalars['String']['output']>;
  dischargeDisposition?: Maybe<Scalars['String']['output']>;
  dischargedDatetime?: Maybe<Scalars['Instant']['output']>;
  /** Get all DoctorOrders by Case Id */
  doctorOrders?: Maybe<Array<Maybe<DoctorOrder>>>;
  dohICDDiagnosis?: Maybe<Scalars['String']['output']>;
  dohSurgicalDiagnosis?: Maybe<Scalars['String']['output']>;
  emergencyContact?: Maybe<Scalars['String']['output']>;
  emergencyContactAddress?: Maybe<Scalars['String']['output']>;
  emergencyContactName?: Maybe<Scalars['String']['output']>;
  emergencyContactRelation?: Maybe<Scalars['String']['output']>;
  entryDateTime?: Maybe<Scalars['Instant']['output']>;
  fallAssessment?: Maybe<Scalars['String']['output']>;
  familyHistory?: Maybe<Scalars['String']['output']>;
  followupDatetime?: Maybe<Scalars['Instant']['output']>;
  getrIcd?: Maybe<Scalars['String']['output']>;
  guarantorAddress?: Maybe<Scalars['String']['output']>;
  guarantorContact?: Maybe<Scalars['String']['output']>;
  guarantorName?: Maybe<Scalars['String']['output']>;
  guarantorRelation?: Maybe<Scalars['String']['output']>;
  headInjury?: Maybe<Scalars['String']['output']>;
  height?: Maybe<Scalars['String']['output']>;
  historyInputDatetime?: Maybe<Scalars['Instant']['output']>;
  historyPresentIllness?: Maybe<Scalars['String']['output']>;
  hmoCompany?: Maybe<InsuranceCompany>;
  homeMedication?: Maybe<Scalars['String']['output']>;
  howTakenToRoom?: Maybe<Scalars['String']['output']>;
  icdDiagnosis?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  informant?: Maybe<Scalars['String']['output']>;
  informantAddress?: Maybe<Scalars['String']['output']>;
  informantContact?: Maybe<Scalars['String']['output']>;
  informantRelation?: Maybe<Scalars['String']['output']>;
  initialBp?: Maybe<Scalars['String']['output']>;
  initialCBS?: Maybe<Scalars['String']['output']>;
  initialO2sat?: Maybe<Scalars['String']['output']>;
  initialPulse?: Maybe<Scalars['String']['output']>;
  initialResp?: Maybe<Scalars['String']['output']>;
  initialTemperature?: Maybe<Scalars['String']['output']>;
  investor?: Maybe<Scalars['Boolean']['output']>;
  investorId?: Maybe<Scalars['String']['output']>;
  isAntenatal?: Maybe<Scalars['Boolean']['output']>;
  isConsultation?: Maybe<Scalars['Boolean']['output']>;
  isDeadOnArrival?: Maybe<Scalars['Boolean']['output']>;
  isInfacilityDelivery?: Maybe<Scalars['Boolean']['output']>;
  isPostnatal?: Maybe<Scalars['Boolean']['output']>;
  laceratedWound?: Maybe<Scalars['String']['output']>;
  lastMeal?: Maybe<Scalars['Instant']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  /** Get latest Meal */
  latestMeal?: Maybe<DietLog>;
  locked?: Maybe<Scalars['Boolean']['output']>;
  mayGoHomeDatetime?: Maybe<Scalars['Instant']['output']>;
  newBornKitBag?: Maybe<Scalars['Boolean']['output']>;
  nurseNote?: Maybe<Scalars['String']['output']>;
  obgynHistory?: Maybe<ObgynHistory>;
  occupation?: Maybe<Scalars['String']['output']>;
  opdPhysician?: Maybe<Physician>;
  operationCode?: Maybe<Scalars['String']['output']>;
  originatingHci?: Maybe<Scalars['String']['output']>;
  otherAdmissionDate?: Maybe<Scalars['Instant']['output']>;
  painScore?: Maybe<Scalars['String']['output']>;
  pastMedicalHistory?: Maybe<Scalars['String']['output']>;
  patient?: Maybe<Patient>;
  patientTransfer?: Maybe<Scalars['Boolean']['output']>;
  personalSocialHistory?: Maybe<Scalars['String']['output']>;
  pertinentPastMedicalHistory?: Maybe<Scalars['String']['output']>;
  pertinentSymptomsList?: Maybe<Scalars['String']['output']>;
  physicalExamList?: Maybe<Scalars['String']['output']>;
  postOpDiagnosis?: Maybe<Scalars['String']['output']>;
  preOpDiagnosis?: Maybe<Scalars['String']['output']>;
  previousAdmission?: Maybe<Scalars['String']['output']>;
  previousHCI?: Maybe<Scalars['String']['output']>;
  priceAccommodationType?: Maybe<Scalars['String']['output']>;
  priceTierDetail?: Maybe<PriceTierDetail>;
  primaryDx?: Maybe<Scalars['String']['output']>;
  proceduresPerformed?: Maybe<Scalars['String']['output']>;
  reasonForTransferIn?: Maybe<Scalars['String']['output']>;
  reasonForTransferOut?: Maybe<Scalars['String']['output']>;
  refusalOfAdmission?: Maybe<Scalars['String']['output']>;
  refusedKitBag?: Maybe<Scalars['Boolean']['output']>;
  registryType?: Maybe<Scalars['String']['output']>;
  room?: Maybe<Room>;
  roomIn?: Maybe<Scalars['Boolean']['output']>;
  rvsDiagnosis?: Maybe<Scalars['String']['output']>;
  secondaryDx?: Maybe<Scalars['String']['output']>;
  serviceCode?: Maybe<Scalars['Int']['output']>;
  serviceType?: Maybe<Scalars['String']['output']>;
  specialInstructions?: Maybe<Scalars['String']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  takeHomeMedications?: Maybe<Scalars['String']['output']>;
  timeOfBirth?: Maybe<Scalars['Instant']['output']>;
  timeOfDeath?: Maybe<Scalars['Instant']['output']>;
  transferHci?: Maybe<Scalars['String']['output']>;
  transferredIn?: Maybe<Scalars['Boolean']['output']>;
  transferredOut?: Maybe<Scalars['Boolean']['output']>;
  triage?: Maybe<Scalars['String']['output']>;
  urgency?: Maybe<Scalars['String']['output']>;
  utiInfectedDate?: Maybe<Scalars['Instant']['output']>;
  utiInfection?: Maybe<Scalars['Boolean']['output']>;
  utiInfectionBy?: Maybe<Employee>;
  vapInfectedDate?: Maybe<Scalars['Instant']['output']>;
  vapInfection?: Maybe<Scalars['Boolean']['output']>;
  vapInfectionBy?: Maybe<Employee>;
  weight?: Maybe<Scalars['String']['output']>;
};

export type CaseInput = {
  accommodationType?: InputMaybe<Scalars['String']['input']>;
  admissionDatetime?: InputMaybe<Scalars['Instant']['input']>;
  admissionKit?: InputMaybe<Scalars['String']['input']>;
  admittingDiagnosis?: InputMaybe<Scalars['String']['input']>;
  admittingOfficer?: InputMaybe<EmployeeInput>;
  admittingPhysician?: InputMaybe<EmployeeInput>;
  adultKitBag?: InputMaybe<Scalars['Boolean']['input']>;
  attendingPhysician?: InputMaybe<EmployeeInput>;
  bsiInfectedDate?: InputMaybe<Scalars['Instant']['input']>;
  bsiInfection?: InputMaybe<Scalars['Boolean']['input']>;
  bsiInfectionBy?: InputMaybe<EmployeeInput>;
  caseNo?: InputMaybe<Scalars['String']['input']>;
  chiefComplaint?: InputMaybe<Scalars['String']['input']>;
  comlogikRefNo?: InputMaybe<Scalars['String']['input']>;
  companyAddress?: InputMaybe<Scalars['String']['input']>;
  companyContact?: InputMaybe<Scalars['String']['input']>;
  companyName?: InputMaybe<Scalars['String']['input']>;
  companyPen?: InputMaybe<Scalars['String']['input']>;
  consultation?: InputMaybe<Scalars['String']['input']>;
  consultingPhysician?: InputMaybe<EmployeeInput>;
  consultingPhysicianTransfer?: InputMaybe<EmployeeInput>;
  courseInTheWard?: InputMaybe<Scalars['String']['input']>;
  creditLimit?: InputMaybe<Scalars['BigDecimal']['input']>;
  deathExpiration?: InputMaybe<Scalars['String']['input']>;
  deathType?: InputMaybe<Scalars['String']['input']>;
  deliveryType?: InputMaybe<Scalars['String']['input']>;
  department?: InputMaybe<DepartmentInput>;
  diet?: InputMaybe<DietInput>;
  dischargeCondition?: InputMaybe<Scalars['String']['input']>;
  dischargeDiagnosis?: InputMaybe<Scalars['String']['input']>;
  dischargeDisposition?: InputMaybe<Scalars['String']['input']>;
  dischargedDatetime?: InputMaybe<Scalars['Instant']['input']>;
  dohICDDiagnosis?: InputMaybe<Scalars['String']['input']>;
  dohSurgicalDiagnosis?: InputMaybe<Scalars['String']['input']>;
  emergencyContact?: InputMaybe<Scalars['String']['input']>;
  emergencyContactAddress?: InputMaybe<Scalars['String']['input']>;
  emergencyContactName?: InputMaybe<Scalars['String']['input']>;
  emergencyContactRelation?: InputMaybe<Scalars['String']['input']>;
  entryDateTime?: InputMaybe<Scalars['Instant']['input']>;
  fallAssessment?: InputMaybe<Scalars['String']['input']>;
  familyHistory?: InputMaybe<Scalars['String']['input']>;
  followupDatetime?: InputMaybe<Scalars['Instant']['input']>;
  guarantorAddress?: InputMaybe<Scalars['String']['input']>;
  guarantorContact?: InputMaybe<Scalars['String']['input']>;
  guarantorName?: InputMaybe<Scalars['String']['input']>;
  guarantorRelation?: InputMaybe<Scalars['String']['input']>;
  headInjury?: InputMaybe<Scalars['String']['input']>;
  height?: InputMaybe<Scalars['String']['input']>;
  historyInputDatetime?: InputMaybe<Scalars['Instant']['input']>;
  historyPresentIllness?: InputMaybe<Scalars['String']['input']>;
  hmoCompany?: InputMaybe<InsuranceCompanyInput>;
  homeMedication?: InputMaybe<Scalars['String']['input']>;
  howTakenToRoom?: InputMaybe<Scalars['String']['input']>;
  icdDiagnosis?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  informant?: InputMaybe<Scalars['String']['input']>;
  informantAddress?: InputMaybe<Scalars['String']['input']>;
  informantContact?: InputMaybe<Scalars['String']['input']>;
  informantRelation?: InputMaybe<Scalars['String']['input']>;
  initialBp?: InputMaybe<Scalars['String']['input']>;
  initialCBS?: InputMaybe<Scalars['String']['input']>;
  initialO2sat?: InputMaybe<Scalars['String']['input']>;
  initialPulse?: InputMaybe<Scalars['String']['input']>;
  initialResp?: InputMaybe<Scalars['String']['input']>;
  initialTemperature?: InputMaybe<Scalars['String']['input']>;
  investor?: InputMaybe<Scalars['Boolean']['input']>;
  investorId?: InputMaybe<Scalars['String']['input']>;
  isAntenatal?: InputMaybe<Scalars['Boolean']['input']>;
  isConsultation?: InputMaybe<Scalars['Boolean']['input']>;
  isDeadOnArrival?: InputMaybe<Scalars['Boolean']['input']>;
  isInfacilityDelivery?: InputMaybe<Scalars['Boolean']['input']>;
  isPostnatal?: InputMaybe<Scalars['Boolean']['input']>;
  laceratedWound?: InputMaybe<Scalars['String']['input']>;
  lastMeal?: InputMaybe<Scalars['Instant']['input']>;
  locked?: InputMaybe<Scalars['Boolean']['input']>;
  mayGoHomeDatetime?: InputMaybe<Scalars['Instant']['input']>;
  newBornKitBag?: InputMaybe<Scalars['Boolean']['input']>;
  nurseNote?: InputMaybe<Scalars['String']['input']>;
  obgynHistory?: InputMaybe<ObgynHistoryInput>;
  occupation?: InputMaybe<Scalars['String']['input']>;
  opdPhysician?: InputMaybe<PhysicianInput>;
  operationCode?: InputMaybe<Scalars['String']['input']>;
  originatingHci?: InputMaybe<Scalars['String']['input']>;
  otherAdmissionDate?: InputMaybe<Scalars['Instant']['input']>;
  painScore?: InputMaybe<Scalars['String']['input']>;
  pastMedicalHistory?: InputMaybe<Scalars['String']['input']>;
  patient?: InputMaybe<PatientInput>;
  patientTransfer?: InputMaybe<Scalars['Boolean']['input']>;
  personalSocialHistory?: InputMaybe<Scalars['String']['input']>;
  pertinentPastMedicalHistory?: InputMaybe<Scalars['String']['input']>;
  pertinentSymptomsList?: InputMaybe<Scalars['String']['input']>;
  physicalExamList?: InputMaybe<Scalars['String']['input']>;
  postOpDiagnosis?: InputMaybe<Scalars['String']['input']>;
  preOpDiagnosis?: InputMaybe<Scalars['String']['input']>;
  previousAdmission?: InputMaybe<Scalars['String']['input']>;
  previousHCI?: InputMaybe<Scalars['String']['input']>;
  priceAccommodationType?: InputMaybe<Scalars['String']['input']>;
  priceTierDetail?: InputMaybe<PriceTierDetailInput>;
  primaryDx?: InputMaybe<Scalars['String']['input']>;
  proceduresPerformed?: InputMaybe<Scalars['String']['input']>;
  rIcd?: InputMaybe<Scalars['String']['input']>;
  reasonForTransferIn?: InputMaybe<Scalars['String']['input']>;
  reasonForTransferOut?: InputMaybe<Scalars['String']['input']>;
  refusalOfAdmission?: InputMaybe<Scalars['String']['input']>;
  refusedKitBag?: InputMaybe<Scalars['Boolean']['input']>;
  registryType?: InputMaybe<Scalars['String']['input']>;
  room?: InputMaybe<RoomInput>;
  roomIn?: InputMaybe<Scalars['Boolean']['input']>;
  rvsDiagnosis?: InputMaybe<Scalars['String']['input']>;
  secondaryDx?: InputMaybe<Scalars['String']['input']>;
  serviceCode?: InputMaybe<Scalars['Int']['input']>;
  serviceType?: InputMaybe<Scalars['String']['input']>;
  specialInstructions?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  takeHomeMedications?: InputMaybe<Scalars['String']['input']>;
  timeOfBirth?: InputMaybe<Scalars['Instant']['input']>;
  timeOfDeath?: InputMaybe<Scalars['Instant']['input']>;
  transferHci?: InputMaybe<Scalars['String']['input']>;
  transferredIn?: InputMaybe<Scalars['Boolean']['input']>;
  transferredOut?: InputMaybe<Scalars['Boolean']['input']>;
  triage?: InputMaybe<Scalars['String']['input']>;
  urgency?: InputMaybe<Scalars['String']['input']>;
  utiInfectedDate?: InputMaybe<Scalars['Instant']['input']>;
  utiInfection?: InputMaybe<Scalars['Boolean']['input']>;
  utiInfectionBy?: InputMaybe<EmployeeInput>;
  vapInfectedDate?: InputMaybe<Scalars['Instant']['input']>;
  vapInfection?: InputMaybe<Scalars['Boolean']['input']>;
  vapInfectionBy?: InputMaybe<EmployeeInput>;
  weight?: InputMaybe<Scalars['String']['input']>;
};

export type CaseInsurance = {
  __typename?: 'CaseInsurance';
  coveredAmount?: Maybe<Scalars['BigDecimal']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  insuranceCompany?: Maybe<InsuranceCompany>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  parentCase?: Maybe<Case>;
  referenceNo?: Maybe<Scalars['String']['output']>;
};

export type CashBasis = {
  __typename?: 'CashBasis';
  cashBasisItem?: Maybe<Array<Maybe<CashBasisItem>>>;
  cashBasisNo?: Maybe<Scalars['String']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  department?: Maybe<Department>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  patient?: Maybe<Patient>;
  patientCase?: Maybe<Case>;
  status?: Maybe<Scalars['String']['output']>;
};

export type CashBasisItem = {
  __typename?: 'CashBasisItem';
  billing?: Maybe<Billing>;
  code?: Maybe<Scalars['String']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  data?: Maybe<Scalars['String']['output']>;
  departmentId?: Maybe<Scalars['UUID']['output']>;
  expandDetails?: Maybe<Array<Maybe<Scalars['Map_String_ObjectScalar']['output']>>>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  processed?: Maybe<Scalars['Boolean']['output']>;
  type?: Maybe<Scalars['String']['output']>;
};

export type CashBasisItemInput = {
  billing?: InputMaybe<BillingInput>;
  code?: InputMaybe<Scalars['String']['input']>;
  data?: InputMaybe<Scalars['String']['input']>;
  departmentId?: InputMaybe<Scalars['UUID']['input']>;
  expandDetails?: InputMaybe<Array<InputMaybe<Scalars['Map_String_StringScalar']['input']>>>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  processed?: InputMaybe<Scalars['Boolean']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};

export type CashFlowFields = {
  __typename?: 'CashFlowFields';
  code?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  source?: Maybe<Scalars['String']['output']>;
};

export type CashFlowGuarantor = {
  __typename?: 'CashFlowGuarantor';
  code?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  source?: Maybe<Scalars['Map_String_ObjectScalar']['output']>;
};

export type CashierData = {
  __typename?: 'CashierData';
  batchReceiptId?: Maybe<Scalars['UUID']['output']>;
  nextAR?: Maybe<Scalars['String']['output']>;
  nextOR?: Maybe<Scalars['String']['output']>;
  notFound: Scalars['Boolean']['output'];
  shiftId?: Maybe<Scalars['String']['output']>;
  shiftPk?: Maybe<Scalars['UUID']['output']>;
  terminalCode?: Maybe<Scalars['String']['output']>;
  terminalId?: Maybe<Scalars['UUID']['output']>;
  terminalName?: Maybe<Scalars['String']['output']>;
  type?: Maybe<Scalars['String']['output']>;
  x?: Maybe<Scalars['String']['output']>;
};

export type CashierTerminal = {
  __typename?: 'CashierTerminal';
  code?: Maybe<Scalars['String']['output']>;
  config?: Maybe<CoaConfig>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  department?: Maybe<Array<Maybe<Scalars['UUID']['output']>>>;
  description?: Maybe<Scalars['String']['output']>;
  domain?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  macAddress?: Maybe<Scalars['String']['output']>;
  remarks?: Maybe<Scalars['String']['output']>;
  terminalId?: Maybe<Scalars['String']['output']>;
  terminalName?: Maybe<Scalars['String']['output']>;
};

export type CashierTerminalInput = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  macAddress?: InputMaybe<Scalars['String']['input']>;
  remarks?: InputMaybe<Scalars['String']['input']>;
  terminalId?: InputMaybe<Scalars['String']['input']>;
  terminalName?: InputMaybe<Scalars['String']['input']>;
};

export type CathLabNote = {
  __typename?: 'CathLabNote';
  comment?: Maybe<Scalars['String']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  employee?: Maybe<Employee>;
  entryDateTime?: Maybe<Scalars['Instant']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  parentCase?: Maybe<Case>;
  summary?: Maybe<Scalars['String']['output']>;
};

export type CatheterRecord = {
  __typename?: 'CatheterRecord';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  endDate?: Maybe<Scalars['Instant']['output']>;
  getaCase?: Maybe<Case>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  remarks?: Maybe<Scalars['String']['output']>;
  sensitivity?: Maybe<Scalars['String']['output']>;
  startDate?: Maybe<Scalars['Instant']['output']>;
};

export type Cdctr = {
  __typename?: 'Cdctr';
  collection?: Maybe<CollectionDeposit>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  received_datetime?: Maybe<Scalars['Instant']['output']>;
  receivedby?: Maybe<Scalars['String']['output']>;
  recno?: Maybe<Scalars['String']['output']>;
  shiftings?: Maybe<Array<Maybe<Shifting>>>;
  status?: Maybe<Scalars['String']['output']>;
  totalcollection?: Maybe<Scalars['BigDecimal']['output']>;
  voidedBy?: Maybe<Scalars['String']['output']>;
  voidedDatetime?: Maybe<Scalars['Instant']['output']>;
};

export type CdctrInput = {
  collection?: InputMaybe<CollectionDepositInput>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  received_datetime?: InputMaybe<Scalars['Instant']['input']>;
  receivedby?: InputMaybe<Scalars['String']['input']>;
  recno?: InputMaybe<Scalars['String']['input']>;
  shiftings?: InputMaybe<Array<InputMaybe<ShiftingInput>>>;
  status?: InputMaybe<Scalars['String']['input']>;
  totalcollection?: InputMaybe<Scalars['BigDecimal']['input']>;
  voidedBy?: InputMaybe<Scalars['String']['input']>;
  voidedDatetime?: InputMaybe<Scalars['Instant']['input']>;
};

export type CensusDto = {
  __typename?: 'CensusDTO';
  erPatientsCount: Scalars['Int']['output'];
  inPatientsCount: Scalars['Int']['output'];
  outPatientsCount: Scalars['Int']['output'];
};

export type CentralLineRecord = {
  __typename?: 'CentralLineRecord';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  endDate?: Maybe<Scalars['Instant']['output']>;
  getaCase?: Maybe<Case>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  remarks?: Maybe<Scalars['String']['output']>;
  sensitivity?: Maybe<Scalars['String']['output']>;
  startDate?: Maybe<Scalars['Instant']['output']>;
};

export type ChartOfAccount = {
  __typename?: 'ChartOfAccount';
  accountCode?: Maybe<Scalars['String']['output']>;
  accountTrace?: Maybe<Scalars['String']['output']>;
  accountType?: Maybe<AccountType>;
  category?: Maybe<Scalars['Boolean']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  dateCreated?: Maybe<Scalars['Instant']['output']>;
  deprecated?: Maybe<Scalars['Boolean']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  fsType?: Maybe<FinancialStatementType>;
  fullDesc?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  isContra?: Maybe<Scalars['Boolean']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  normalSide?: Maybe<NormalSide>;
  parent?: Maybe<Scalars['UUID']['output']>;
  tags?: Maybe<Scalars['String']['output']>;
};

export type ChartOfAccountGenerate = {
  __typename?: 'ChartOfAccountGenerate';
  accountType?: Maybe<Scalars['String']['output']>;
  code?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  fromGenerator?: Maybe<Scalars['Boolean']['output']>;
  motherAccount?: Maybe<CoaComponentContainer>;
  subAccount?: Maybe<CoaComponentContainer>;
  subSubAccount?: Maybe<CoaComponentContainer>;
};

export type ChartOfAccountGenerateInput = {
  accountType?: InputMaybe<Scalars['String']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  fromGenerator?: InputMaybe<Scalars['Boolean']['input']>;
  motherAccount?: InputMaybe<CoaComponentContainerInput>;
  subAccount?: InputMaybe<CoaComponentContainerInput>;
  subSubAccount?: InputMaybe<CoaComponentContainerInput>;
};

export type ChartOfAccountInput = {
  accountCode?: InputMaybe<Scalars['String']['input']>;
  accountTrace?: InputMaybe<Scalars['String']['input']>;
  accountType?: InputMaybe<AccountType>;
  category?: InputMaybe<Scalars['Boolean']['input']>;
  deprecated?: InputMaybe<Scalars['Boolean']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  fsType?: InputMaybe<FinancialStatementType>;
  fullDesc?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  isContra?: InputMaybe<Scalars['Boolean']['input']>;
  normalSide?: InputMaybe<NormalSide>;
  parent?: InputMaybe<Scalars['UUID']['input']>;
  tags?: InputMaybe<Scalars['String']['input']>;
};

export type ChequeEncashment = {
  __typename?: 'ChequeEncashment';
  amount?: Maybe<Scalars['BigDecimal']['output']>;
  bank?: Maybe<Bank>;
  chequeDate?: Maybe<Scalars['Date']['output']>;
  chequeNo?: Maybe<Scalars['String']['output']>;
  cleared?: Maybe<Scalars['Boolean']['output']>;
  clearedDate?: Maybe<Scalars['Instant']['output']>;
  collectionDetail?: Maybe<CollectionDetail>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  denied?: Maybe<Scalars['Boolean']['output']>;
  deniedDate?: Maybe<Scalars['Instant']['output']>;
  details?: Maybe<Scalars['Map_String_StringScalar']['output']>;
  domain?: Maybe<Scalars['String']['output']>;
  flagValue?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  negativeAmount?: Maybe<Scalars['BigDecimal']['output']>;
  postedLedger?: Maybe<Scalars['UUID']['output']>;
  recordNo?: Maybe<Scalars['String']['output']>;
  remarks?: Maybe<Scalars['String']['output']>;
  returnPostedLedger?: Maybe<Scalars['UUID']['output']>;
  returnRemarks?: Maybe<Scalars['String']['output']>;
  returnedDate?: Maybe<Scalars['Instant']['output']>;
  returnedPersonnel?: Maybe<Employee>;
  returnedShifting?: Maybe<Shifting>;
  shifting?: Maybe<Shifting>;
  supportingDocs?: Maybe<Array<Maybe<ChequeEncashmentSupportingDoc>>>;
  terminal?: Maybe<CashierTerminal>;
  transactionDate?: Maybe<Scalars['Instant']['output']>;
};

export type ChequeEncashmentCashier = {
  __typename?: 'ChequeEncashmentCashier';
  cashierTerminal?: Maybe<CashierTerminal>;
  shifting?: Maybe<Shifting>;
};

export type ChequeEncashmentInput = {
  amount?: InputMaybe<Scalars['BigDecimal']['input']>;
  bank?: InputMaybe<BankInput>;
  chequeDate?: InputMaybe<Scalars['Date']['input']>;
  chequeNo?: InputMaybe<Scalars['String']['input']>;
  cleared?: InputMaybe<Scalars['Boolean']['input']>;
  clearedDate?: InputMaybe<Scalars['Instant']['input']>;
  collectionDetail?: InputMaybe<CollectionDetailInput>;
  denied?: InputMaybe<Scalars['Boolean']['input']>;
  deniedDate?: InputMaybe<Scalars['Instant']['input']>;
  flagValue?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  negativeAmount?: InputMaybe<Scalars['BigDecimal']['input']>;
  postedLedger?: InputMaybe<Scalars['UUID']['input']>;
  recordNo?: InputMaybe<Scalars['String']['input']>;
  remarks?: InputMaybe<Scalars['String']['input']>;
  returnPostedLedger?: InputMaybe<Scalars['UUID']['input']>;
  returnRemarks?: InputMaybe<Scalars['String']['input']>;
  returnedDate?: InputMaybe<Scalars['Instant']['input']>;
  returnedPersonnel?: InputMaybe<EmployeeInput>;
  returnedShifting?: InputMaybe<ShiftingInput>;
  shifting?: InputMaybe<ShiftingInput>;
  supportingDocs?: InputMaybe<Array<InputMaybe<ChequeEncashmentSupportingDocInput>>>;
  terminal?: InputMaybe<CashierTerminalInput>;
  transactionDate?: InputMaybe<Scalars['Instant']['input']>;
};

export type ChequeEncashmentResponse = {
  __typename?: 'ChequeEncashmentResponse';
  activeShift?: Maybe<Shifting>;
  chequeEncashment?: Maybe<ChequeEncashment>;
};

export type ChequeEncashmentSupportingDoc = {
  __typename?: 'ChequeEncashmentSupportingDoc';
  attachment?: Maybe<Array<Maybe<Scalars['Byte']['output']>>>;
  attachmentUrl?: Maybe<Scalars['String']['output']>;
  chequeEncashment?: Maybe<ChequeEncashment>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  filename?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  referenceNo?: Maybe<Scalars['String']['output']>;
};

export type ChequeEncashmentSupportingDocInput = {
  attachment?: InputMaybe<Array<InputMaybe<Scalars['Byte']['input']>>>;
  chequeEncashment?: InputMaybe<ChequeEncashmentInput>;
  description?: InputMaybe<Scalars['String']['input']>;
  filename?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  referenceNo?: InputMaybe<Scalars['String']['input']>;
};

export type City = {
  __typename?: 'City';
  cityName?: Maybe<Scalars['String']['output']>;
  district?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  province?: Maybe<Province>;
  zipCode?: Maybe<Scalars['String']['output']>;
};

export type Claim = {
  __typename?: 'Claim';
  batchNo?: Maybe<Scalars['String']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  ticketNo?: Maybe<Scalars['String']['output']>;
};

export type ClaimItem = {
  __typename?: 'ClaimItem';
  claimType?: Maybe<Scalars['String']['output']>;
  claims?: Maybe<Claim>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  parentCase?: Maybe<Case>;
  totalAmtActual?: Maybe<Scalars['BigDecimal']['output']>;
  totalAmtClaimed?: Maybe<Scalars['BigDecimal']['output']>;
  trackingNo?: Maybe<Scalars['String']['output']>;
};

export type Classification = {
  __typename?: 'Classification';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  general?: Maybe<Scalars['Int']['output']>;
  government?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  locals?: Maybe<Scalars['Int']['output']>;
  nationals?: Maybe<Scalars['Int']['output']>;
  natureOfOwnership?: Maybe<Scalars['Int']['output']>;
  ownershipOthers?: Maybe<Scalars['String']['output']>;
  privates?: Maybe<Scalars['Int']['output']>;
  reportingYear?: Maybe<Scalars['Int']['output']>;
  serviceCapability?: Maybe<Scalars['Int']['output']>;
  specialty?: Maybe<Scalars['Int']['output']>;
  specialtySpecify?: Maybe<Scalars['String']['output']>;
  submittedDateTime?: Maybe<Scalars['Instant']['output']>;
  traumaCapability?: Maybe<Scalars['Int']['output']>;
};

export type Clinic = {
  __typename?: 'Clinic';
  clinicAddress?: Maybe<Scalars['String']['output']>;
  clinicContact?: Maybe<Scalars['String']['output']>;
  clinicContactName?: Maybe<Scalars['String']['output']>;
  clinicName?: Maybe<Scalars['String']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
};

export type ClinicDoctor = {
  __typename?: 'ClinicDoctor';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  physician?: Maybe<Physician>;
  room?: Maybe<ClinicRoom>;
};

export type ClinicRoom = {
  __typename?: 'ClinicRoom';
  clinicDoctors?: Maybe<Array<Maybe<ClinicDoctor>>>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  number?: Maybe<Scalars['String']['output']>;
};

export type CoaComponentContainer = {
  __typename?: 'CoaComponentContainer';
  code?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  domain?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  normalSide?: Maybe<Scalars['String']['output']>;
};

export type CoaComponentContainerInput = {
  code?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  domain?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  normalSide?: InputMaybe<Scalars['String']['input']>;
};

export type CoaConfig = {
  __typename?: 'CoaConfig';
  motherAccounts?: Maybe<Array<Maybe<Scalars['UUID']['output']>>>;
  show?: Maybe<Scalars['Boolean']['output']>;
  showDepartments?: Maybe<Scalars['Boolean']['output']>;
};

export type CoaPattern = {
  __typename?: 'CoaPattern';
  code?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  motherAccount?: Maybe<CoaComponentContainer>;
  subAccount?: Maybe<CoaComponentContainer>;
  subAccountName?: Maybe<Scalars['String']['output']>;
  subAccountSetupId?: Maybe<Scalars['UUID']['output']>;
  subSubAccount?: Maybe<CoaComponentContainer>;
};

export type CoaPatternInput = {
  code?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  motherAccount?: InputMaybe<CoaComponentContainerInput>;
  subAccount?: InputMaybe<CoaComponentContainerInput>;
  subAccountName?: InputMaybe<Scalars['String']['input']>;
  subAccountSetupId?: InputMaybe<Scalars['UUID']['input']>;
  subSubAccount?: InputMaybe<CoaComponentContainerInput>;
};

export type CollectionDeposit = {
  __typename?: 'CollectionDeposit';
  cdctrList?: Maybe<Array<Maybe<Cdctr>>>;
  collectionDetails?: Maybe<Array<Maybe<CollectionDetail>>>;
  collectionId?: Maybe<Scalars['String']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  ledgerHeader?: Maybe<Scalars['UUID']['output']>;
  remarks?: Maybe<Scalars['String']['output']>;
  totalBankdeposit?: Maybe<Scalars['BigDecimal']['output']>;
  totalCard?: Maybe<Scalars['BigDecimal']['output']>;
  totalCheck?: Maybe<Scalars['BigDecimal']['output']>;
  totalHardCash?: Maybe<Scalars['BigDecimal']['output']>;
  transactionDateTime?: Maybe<Scalars['Instant']['output']>;
};

export type CollectionDepositBreakDown = {
  __typename?: 'CollectionDepositBreakDown';
  chequeEncashmentReceive?: Maybe<Array<Maybe<CustomCdctrReturn>>>;
  chequeEncashmentReturn?: Maybe<Array<Maybe<CustomCdctrReturn>>>;
  hardCash?: Maybe<Array<Maybe<CustomCdctrReturn>>>;
  systemTotalHardCash?: Maybe<Scalars['BigDecimal']['output']>;
};

export type CollectionDepositInput = {
  cdctrList?: InputMaybe<Array<InputMaybe<CdctrInput>>>;
  collectionDetails?: InputMaybe<Array<InputMaybe<CollectionDetailInput>>>;
  collectionId?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  ledgerHeader?: InputMaybe<Scalars['UUID']['input']>;
  remarks?: InputMaybe<Scalars['String']['input']>;
  totalBankdeposit?: InputMaybe<Scalars['BigDecimal']['input']>;
  totalCard?: InputMaybe<Scalars['BigDecimal']['input']>;
  totalCheck?: InputMaybe<Scalars['BigDecimal']['input']>;
  totalHardCash?: InputMaybe<Scalars['BigDecimal']['input']>;
  transactionDateTime?: InputMaybe<Scalars['Instant']['input']>;
};

export type CollectionDetail = {
  __typename?: 'CollectionDetail';
  amount?: Maybe<Scalars['BigDecimal']['output']>;
  bank?: Maybe<Bank>;
  chequeEncashmentDetails?: Maybe<Array<Maybe<ChequeEncashment>>>;
  collection?: Maybe<CollectionDeposit>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  depositReferenceNo?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  paymentTrackerDetails?: Maybe<Array<Maybe<PaymentTrackerDetails>>>;
  ptdIds?: Maybe<Scalars['String']['output']>;
  terminal?: Maybe<CashierTerminal>;
  type?: Maybe<CollectionDetailType>;
};

export type CollectionDetailInput = {
  amount?: InputMaybe<Scalars['BigDecimal']['input']>;
  bank?: InputMaybe<BankInput>;
  chequeEncashmentDetails?: InputMaybe<Array<InputMaybe<ChequeEncashmentInput>>>;
  collection?: InputMaybe<CollectionDepositInput>;
  depositReferenceNo?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  paymentTrackerDetails?: InputMaybe<Array<InputMaybe<PaymentTrackerDetailsInput>>>;
  ptdIds?: InputMaybe<Scalars['String']['input']>;
  terminal?: InputMaybe<CashierTerminalInput>;
  type?: InputMaybe<CollectionDetailType>;
};

export enum CollectionDetailType {
  Cash = 'CASH',
  Cashovershort = 'CASHOVERSHORT',
  Check = 'CHECK',
  Checkencashment = 'CHECKENCASHMENT'
}

export type ComlogikItemDto = {
  __typename?: 'ComlogikItemDto';
  genericId?: Maybe<Scalars['UUID']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  isPatientMed?: Maybe<Scalars['Boolean']['output']>;
  philhealthActualUnitPrice?: Maybe<Scalars['String']['output']>;
  philhealthBrandName?: Maybe<Scalars['String']['output']>;
  philhealthDrugCode?: Maybe<Scalars['String']['output']>;
  philhealthDrugCodePhic?: Maybe<Scalars['String']['output']>;
  philhealthGenericName?: Maybe<Scalars['String']['output']>;
  philhealthInstructionFrequency?: Maybe<Scalars['String']['output']>;
  philhealthPNDFCode?: Maybe<Scalars['String']['output']>;
  philhealthPreparation?: Maybe<Scalars['String']['output']>;
  philhealthPurchaseDate?: Maybe<Scalars['String']['output']>;
  philhealthQuantity?: Maybe<Scalars['Int']['output']>;
  philhealthRoute?: Maybe<Scalars['String']['output']>;
  refId?: Maybe<Scalars['UUID']['output']>;
};

export type ComlogikMedicineDto = {
  __typename?: 'ComlogikMedicineDto';
  addedBy?: Maybe<Scalars['String']['output']>;
  customMedicine?: Maybe<Scalars['Boolean']['output']>;
  dateAdded?: Maybe<Scalars['String']['output']>;
  dateDeleted?: Maybe<Scalars['String']['output']>;
  dateUpdated?: Maybe<Scalars['String']['output']>;
  deletedBy?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  drugCode?: Maybe<Scalars['String']['output']>;
  formCode?: Maybe<Scalars['String']['output']>;
  formDescription?: Maybe<Scalars['String']['output']>;
  genCode?: Maybe<Scalars['String']['output']>;
  genericDescription?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  packageCode?: Maybe<Scalars['String']['output']>;
  packageDescription?: Maybe<Scalars['String']['output']>;
  route?: Maybe<Scalars['String']['output']>;
  saltCode?: Maybe<Scalars['String']['output']>;
  saltDescription?: Maybe<Scalars['String']['output']>;
  strengthCode?: Maybe<Scalars['String']['output']>;
  strengthDescription?: Maybe<Scalars['String']['output']>;
  unitCode?: Maybe<Scalars['String']['output']>;
  unitDescription?: Maybe<Scalars['String']['output']>;
  updatedBy?: Maybe<Scalars['String']['output']>;
};

export type ComlogikSetting = {
  __typename?: 'ComlogikSetting';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  host?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  login?: Maybe<Scalars['String']['output']>;
  password?: Maybe<Scalars['String']['output']>;
};

export type CompanyAccount = {
  __typename?: 'CompanyAccount';
  code?: Maybe<Scalars['String']['output']>;
  compTypeCode?: Maybe<Scalars['String']['output']>;
  compTypeDescription?: Maybe<Scalars['String']['output']>;
  companyFullAddress?: Maybe<Scalars['String']['output']>;
  companyType?: Maybe<CompanyType>;
  companyaccountId?: Maybe<Scalars['String']['output']>;
  companyname?: Maybe<Scalars['String']['output']>;
  config?: Maybe<CoaConfig>;
  contactPerson?: Maybe<Scalars['String']['output']>;
  contactno?: Maybe<Scalars['String']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  department?: Maybe<Array<Maybe<Scalars['UUID']['output']>>>;
  description?: Maybe<Scalars['String']['output']>;
  directToAr?: Maybe<Scalars['Boolean']['output']>;
  domain?: Maybe<Scalars['String']['output']>;
  hideInSoa?: Maybe<Scalars['Boolean']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  philHealth?: Maybe<Scalars['Boolean']['output']>;
  promissoryNote?: Maybe<Scalars['Boolean']['output']>;
  referenceno?: Maybe<Scalars['String']['output']>;
  remarks?: Maybe<Scalars['String']['output']>;
  tag?: Maybe<Scalars['String']['output']>;
  validationSource?: Maybe<Scalars['String']['output']>;
};

export type CompanyAccountInput = {
  compTypeCode?: InputMaybe<Scalars['String']['input']>;
  compTypeDescription?: InputMaybe<Scalars['String']['input']>;
  companyFullAddress?: InputMaybe<Scalars['String']['input']>;
  companyType?: InputMaybe<CompanyTypeInput>;
  companyaccountId?: InputMaybe<Scalars['String']['input']>;
  companyname?: InputMaybe<Scalars['String']['input']>;
  contactPerson?: InputMaybe<Scalars['String']['input']>;
  contactno?: InputMaybe<Scalars['String']['input']>;
  directToAr?: InputMaybe<Scalars['Boolean']['input']>;
  hideInSoa?: InputMaybe<Scalars['Boolean']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  philHealth?: InputMaybe<Scalars['Boolean']['input']>;
  promissoryNote?: InputMaybe<Scalars['Boolean']['input']>;
  referenceno?: InputMaybe<Scalars['String']['input']>;
  remarks?: InputMaybe<Scalars['String']['input']>;
  tag?: InputMaybe<Scalars['String']['input']>;
  validationSource?: InputMaybe<Scalars['String']['input']>;
};

export type CompanyDiscountAndPenalties = {
  __typename?: 'CompanyDiscountAndPenalties';
  creditLimit?: Maybe<Scalars['BigDecimal']['output']>;
  creditPeriod?: Maybe<PeriodWithUot>;
  disputePaymentPeriod?: Maybe<PeriodWithUot>;
  overduePenalties?: Maybe<OverduePenalties>;
  paymentDiscounts?: Maybe<Array<Maybe<PaymentDiscounts>>>;
  reconcileDisputePaymentPeriod?: Maybe<PeriodWithUot>;
};

export type CompanyType = {
  __typename?: 'CompanyType';
  active?: Maybe<Scalars['Boolean']['output']>;
  code?: Maybe<Scalars['String']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
};

export type CompanyTypeInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};

export type Constant = {
  __typename?: 'Constant';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  shortCode?: Maybe<Scalars['String']['output']>;
  status?: Maybe<Scalars['Boolean']['output']>;
  type?: Maybe<ConstantType>;
  value?: Maybe<Scalars['String']['output']>;
};

export type ConstantType = {
  __typename?: 'ConstantType';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

export type ContactNumbers = {
  __typename?: 'ContactNumbers';
  active?: Maybe<Scalars['Boolean']['output']>;
  contactNum?: Maybe<Scalars['String']['output']>;
};

export type Counter = {
  __typename?: 'Counter';
  name?: Maybe<Scalars['String']['output']>;
  value?: Maybe<Scalars['Long']['output']>;
};

export type Country = {
  __typename?: 'Country';
  country?: Maybe<Scalars['String']['output']>;
  countryName?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Long']['output']>;
  shortName?: Maybe<Scalars['String']['output']>;
};

export type CovidUpdatesList = {
  __typename?: 'CovidUpdatesList';
  label?: Maybe<Scalars['String']['output']>;
  value?: Maybe<Scalars['String']['output']>;
};

export type CreateRsvAccount = {
  __typename?: 'CreateRsvAccount';
  accessKey?: Maybe<Scalars['String']['output']>;
  bgyCode?: Maybe<Scalars['String']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  ctyMunCode?: Maybe<Scalars['String']['output']>;
  fhUdAddress?: Maybe<Scalars['String']['output']>;
  fhUdEmail?: Maybe<Scalars['String']['output']>;
  fhUdFaxNo?: Maybe<Scalars['String']['output']>;
  fhUdTelNo1?: Maybe<Scalars['String']['output']>;
  fhUdTelNo2?: Maybe<Scalars['String']['output']>;
  headfName?: Maybe<Scalars['String']['output']>;
  headlName?: Maybe<Scalars['String']['output']>;
  headmName?: Maybe<Scalars['String']['output']>;
  hfhUdName?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  provCode?: Maybe<Scalars['String']['output']>;
  regCode?: Maybe<Scalars['String']['output']>;
  submittedDateTime?: Maybe<Scalars['Instant']['output']>;
};

export type CreditLimitDto = {
  __typename?: 'CreditLimitDto';
  billingId?: Maybe<Scalars['UUID']['output']>;
  credit_limit?: Maybe<Scalars['Float']['output']>;
  credit_limit_reached?: Maybe<Scalars['Boolean']['output']>;
  paid?: Maybe<Scalars['Boolean']['output']>;
};

export type CustomBillingItemNativeDto = {
  __typename?: 'CustomBillingItemNativeDto';
  BILLING_ALIAS?: Maybe<Scalars['String']['output']>;
  CREDIT_ALIAS?: Maybe<Scalars['String']['output']>;
  DESCRIPTION_ALIAS?: Maybe<Scalars['String']['output']>;
  FULL_COUNT_ALIAS?: Maybe<Scalars['String']['output']>;
  ID_ALIAS?: Maybe<Scalars['String']['output']>;
  ITEM_TYPE_ALIAS?: Maybe<Scalars['String']['output']>;
  RECORD_NO_ALIAS?: Maybe<Scalars['String']['output']>;
  ROW_NUM_ALIAS?: Maybe<Scalars['String']['output']>;
  TRANSACTION_DATE?: Maybe<Scalars['String']['output']>;
  billing?: Maybe<BillingDto>;
  billingStr?: Maybe<Scalars['String']['output']>;
  credit?: Maybe<Scalars['BigDecimal']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  fullCount?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  itemType?: Maybe<Scalars['String']['output']>;
  recordNo?: Maybe<Scalars['String']['output']>;
  rowNum?: Maybe<Scalars['Int']['output']>;
  transactionDate?: Maybe<Scalars['String']['output']>;
};

export type CustomCdctrReturn = {
  __typename?: 'CustomCdctrReturn';
  amount?: Maybe<Scalars['BigDecimal']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  recNo?: Maybe<Scalars['String']['output']>;
};

export enum CustomerType {
  Corporate = 'CORPORATE',
  Hmo = 'HMO',
  Personal = 'PERSONAL',
  PromissoryNote = 'PROMISSORY_NOTE'
}

export type DohProgressLogs = {
  __typename?: 'DOHProgressLogs';
  description?: Maybe<Scalars['String']['output']>;
  items?: Maybe<Scalars['String']['output']>;
  key?: Maybe<Scalars['Int']['output']>;
  logs?: Maybe<Scalars['String']['output']>;
  success?: Maybe<Scalars['Int']['output']>;
};

export type DailySalesDataExtracted = {
  __typename?: 'DailySalesDataExtracted';
  amount?: Maybe<Scalars['BigDecimal']['output']>;
  collectionDate?: Maybe<Scalars['String']['output']>;
  docNo?: Maybe<Scalars['String']['output']>;
  docType?: Maybe<Scalars['String']['output']>;
  endShift?: Maybe<Scalars['String']['output']>;
  payee?: Maybe<Scalars['String']['output']>;
  paymentDescription?: Maybe<Scalars['String']['output']>;
  reference?: Maybe<Scalars['String']['output']>;
  shiftNo?: Maybe<Scalars['String']['output']>;
  startShift?: Maybe<Scalars['String']['output']>;
  terminalId?: Maybe<Scalars['String']['output']>;
  type?: Maybe<Scalars['String']['output']>;
  userId?: Maybe<Scalars['String']['output']>;
};

export type DashboardCensusDto = {
  __typename?: 'DashboardCensusDto';
  absconded: Scalars['Int']['output'];
  admitting_officer?: Maybe<Scalars['String']['output']>;
  discharge_alive: Scalars['Int']['output'];
  discharge_ama: Scalars['Int']['output'];
  discharge_expired: Scalars['Int']['output'];
  new_admission: Scalars['Int']['output'];
  newborn: Scalars['Int']['output'];
  old_admissions: Scalars['Int']['output'];
  transferred_to_facility: Scalars['Int']['output'];
  transferred_to_this_facility: Scalars['Int']['output'];
};

export type DebitMemo = {
  __typename?: 'DebitMemo';
  appliedAmount?: Maybe<Scalars['BigDecimal']['output']>;
  bank?: Maybe<Bank>;
  cashOnBank?: Maybe<Scalars['BigDecimal']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  debitDate?: Maybe<Scalars['Instant']['output']>;
  debitNo?: Maybe<Scalars['String']['output']>;
  debitType?: Maybe<Scalars['String']['output']>;
  department?: Maybe<Department>;
  details?: Maybe<Scalars['Map_String_StringScalar']['output']>;
  discAmount?: Maybe<Scalars['BigDecimal']['output']>;
  discount?: Maybe<Scalars['BigDecimal']['output']>;
  domain?: Maybe<Scalars['String']['output']>;
  ewt1Percent?: Maybe<Scalars['BigDecimal']['output']>;
  ewt2Percent?: Maybe<Scalars['BigDecimal']['output']>;
  ewt3Percent?: Maybe<Scalars['BigDecimal']['output']>;
  ewt4Percent?: Maybe<Scalars['BigDecimal']['output']>;
  ewt5Percent?: Maybe<Scalars['BigDecimal']['output']>;
  ewt7Percent?: Maybe<Scalars['BigDecimal']['output']>;
  ewt10Percent?: Maybe<Scalars['BigDecimal']['output']>;
  ewt15Percent?: Maybe<Scalars['BigDecimal']['output']>;
  ewt18Percent?: Maybe<Scalars['BigDecimal']['output']>;
  ewt30Percent?: Maybe<Scalars['BigDecimal']['output']>;
  ewtAmount?: Maybe<Scalars['BigDecimal']['output']>;
  flagValue?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  memoAmount?: Maybe<Scalars['BigDecimal']['output']>;
  posted?: Maybe<Scalars['Boolean']['output']>;
  postedBy?: Maybe<Scalars['String']['output']>;
  postedLedger?: Maybe<Scalars['UUID']['output']>;
  remarksNotes?: Maybe<Scalars['String']['output']>;
  rounding?: Maybe<Scalars['Int']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  supplier?: Maybe<Supplier>;
  supplierAmount?: Maybe<Scalars['BigDecimal']['output']>;
  transType?: Maybe<ApTransaction>;
  value_a?: Maybe<Scalars['BigDecimal']['output']>;
  value_b?: Maybe<Scalars['BigDecimal']['output']>;
  value_c?: Maybe<Scalars['BigDecimal']['output']>;
  value_d?: Maybe<Scalars['BigDecimal']['output']>;
  value_e?: Maybe<Scalars['BigDecimal']['output']>;
  value_f?: Maybe<Scalars['BigDecimal']['output']>;
  value_g?: Maybe<Scalars['BigDecimal']['output']>;
  value_h?: Maybe<Scalars['BigDecimal']['output']>;
  value_i?: Maybe<Scalars['BigDecimal']['output']>;
  value_j?: Maybe<Scalars['BigDecimal']['output']>;
  value_k?: Maybe<Scalars['BigDecimal']['output']>;
  value_l?: Maybe<Scalars['BigDecimal']['output']>;
  value_m?: Maybe<Scalars['BigDecimal']['output']>;
  value_n?: Maybe<Scalars['BigDecimal']['output']>;
  value_o?: Maybe<Scalars['BigDecimal']['output']>;
  value_p?: Maybe<Scalars['BigDecimal']['output']>;
  value_q?: Maybe<Scalars['BigDecimal']['output']>;
  value_r?: Maybe<Scalars['BigDecimal']['output']>;
  value_s?: Maybe<Scalars['BigDecimal']['output']>;
  value_t?: Maybe<Scalars['BigDecimal']['output']>;
  value_u?: Maybe<Scalars['BigDecimal']['output']>;
  value_v?: Maybe<Scalars['BigDecimal']['output']>;
  value_w?: Maybe<Scalars['BigDecimal']['output']>;
  value_x?: Maybe<Scalars['BigDecimal']['output']>;
  value_y?: Maybe<Scalars['BigDecimal']['output']>;
  value_z?: Maybe<Scalars['BigDecimal']['output']>;
  value_z1?: Maybe<Scalars['BigDecimal']['output']>;
  value_z2?: Maybe<Scalars['BigDecimal']['output']>;
  value_z3?: Maybe<Scalars['BigDecimal']['output']>;
  value_z4?: Maybe<Scalars['BigDecimal']['output']>;
  value_z5?: Maybe<Scalars['BigDecimal']['output']>;
  value_z6?: Maybe<Scalars['BigDecimal']['output']>;
  value_z7?: Maybe<Scalars['BigDecimal']['output']>;
  value_z8?: Maybe<Scalars['BigDecimal']['output']>;
  value_z9?: Maybe<Scalars['BigDecimal']['output']>;
  value_z10?: Maybe<Scalars['BigDecimal']['output']>;
  value_z11?: Maybe<Scalars['BigDecimal']['output']>;
  value_z12?: Maybe<Scalars['BigDecimal']['output']>;
  value_z13?: Maybe<Scalars['BigDecimal']['output']>;
  value_z14?: Maybe<Scalars['BigDecimal']['output']>;
  value_z15?: Maybe<Scalars['BigDecimal']['output']>;
  value_z16?: Maybe<Scalars['BigDecimal']['output']>;
  value_z17?: Maybe<Scalars['BigDecimal']['output']>;
  value_z18?: Maybe<Scalars['BigDecimal']['output']>;
  value_z19?: Maybe<Scalars['BigDecimal']['output']>;
  value_z20?: Maybe<Scalars['BigDecimal']['output']>;
  value_z21?: Maybe<Scalars['BigDecimal']['output']>;
  value_z22?: Maybe<Scalars['BigDecimal']['output']>;
  value_z23?: Maybe<Scalars['BigDecimal']['output']>;
  value_z24?: Maybe<Scalars['BigDecimal']['output']>;
  value_z25?: Maybe<Scalars['BigDecimal']['output']>;
  value_z26?: Maybe<Scalars['BigDecimal']['output']>;
};

export type DebitMemoDetails = {
  __typename?: 'DebitMemoDetails';
  amount?: Maybe<Scalars['BigDecimal']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  debitMemo?: Maybe<DebitMemo>;
  department?: Maybe<Department>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  percent?: Maybe<Scalars['BigDecimal']['output']>;
  remarks?: Maybe<Scalars['String']['output']>;
  transType?: Maybe<ExpenseTransaction>;
  type?: Maybe<Scalars['String']['output']>;
};

export type DebitMemoInput = {
  appliedAmount?: InputMaybe<Scalars['BigDecimal']['input']>;
  bank?: InputMaybe<BankInput>;
  cashOnBank?: InputMaybe<Scalars['BigDecimal']['input']>;
  debitDate?: InputMaybe<Scalars['Instant']['input']>;
  debitNo?: InputMaybe<Scalars['String']['input']>;
  debitType?: InputMaybe<Scalars['String']['input']>;
  department?: InputMaybe<DepartmentInput>;
  discAmount?: InputMaybe<Scalars['BigDecimal']['input']>;
  discount?: InputMaybe<Scalars['BigDecimal']['input']>;
  ewt1Percent?: InputMaybe<Scalars['BigDecimal']['input']>;
  ewt2Percent?: InputMaybe<Scalars['BigDecimal']['input']>;
  ewt3Percent?: InputMaybe<Scalars['BigDecimal']['input']>;
  ewt4Percent?: InputMaybe<Scalars['BigDecimal']['input']>;
  ewt5Percent?: InputMaybe<Scalars['BigDecimal']['input']>;
  ewt7Percent?: InputMaybe<Scalars['BigDecimal']['input']>;
  ewt10Percent?: InputMaybe<Scalars['BigDecimal']['input']>;
  ewt15Percent?: InputMaybe<Scalars['BigDecimal']['input']>;
  ewt18Percent?: InputMaybe<Scalars['BigDecimal']['input']>;
  ewt30Percent?: InputMaybe<Scalars['BigDecimal']['input']>;
  ewtAmount?: InputMaybe<Scalars['BigDecimal']['input']>;
  flagValue?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  memoAmount?: InputMaybe<Scalars['BigDecimal']['input']>;
  posted?: InputMaybe<Scalars['Boolean']['input']>;
  postedBy?: InputMaybe<Scalars['String']['input']>;
  postedLedger?: InputMaybe<Scalars['UUID']['input']>;
  remarksNotes?: InputMaybe<Scalars['String']['input']>;
  rounding?: InputMaybe<Scalars['Int']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  supplier?: InputMaybe<SupplierInput>;
  supplierAmount?: InputMaybe<Scalars['BigDecimal']['input']>;
  transType?: InputMaybe<ApTransactionInput>;
  value_a?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_b?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_c?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_d?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_e?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_f?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_g?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_h?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_i?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_j?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_k?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_l?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_m?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_n?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_o?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_p?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_q?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_r?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_s?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_t?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_u?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_v?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_w?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_x?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_y?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_z?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_z1?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_z2?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_z3?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_z4?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_z5?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_z6?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_z7?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_z8?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_z9?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_z10?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_z11?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_z12?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_z13?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_z14?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_z15?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_z16?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_z17?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_z18?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_z19?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_z20?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_z21?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_z22?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_z23?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_z24?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_z25?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_z26?: InputMaybe<Scalars['BigDecimal']['input']>;
};

export type DeductionsTableData = {
  __typename?: 'DeductionsTableData';
  deductions?: Maybe<Array<Maybe<BillingItem>>>;
  labs?: Maybe<Array<Maybe<BillingItem>>>;
  meds?: Maybe<Array<Maybe<BillingItem>>>;
  misc?: Maybe<Array<Maybe<BillingItem>>>;
  or?: Maybe<Array<Maybe<BillingItem>>>;
  pfCharges?: Maybe<Array<Maybe<BillingItem>>>;
  pfDeductions?: Maybe<Array<Maybe<BillingItem>>>;
  rooms?: Maybe<Array<Maybe<BillingItem>>>;
  supplies?: Maybe<Array<Maybe<BillingItem>>>;
};

export type DefaultAdmissionItems = {
  __typename?: 'DefaultAdmissionItems';
  admissionKitType?: Maybe<Scalars['String']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  department?: Maybe<Department>;
  id?: Maybe<Scalars['UUID']['output']>;
  inventory?: Maybe<Scalars['UUID']['output']>;
  item?: Maybe<Item>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  quantity?: Maybe<Scalars['BigDecimal']['output']>;
  refusedAdmissionKitItem?: Maybe<Scalars['Boolean']['output']>;
};

export type DefaultDohResponseDetails = {
  __typename?: 'DefaultDOHResponseDetails';
  hfhudcode?: Maybe<Scalars['String']['output']>;
  reportingyear?: Maybe<Scalars['String']['output']>;
  status?: Maybe<Scalars['String']['output']>;
};

export type DeliveriesDto = {
  __typename?: 'DeliveriesDto';
  caesarian?: Maybe<Scalars['String']['output']>;
  infacility?: Maybe<Scalars['String']['output']>;
  other?: Maybe<Scalars['String']['output']>;
  vaginal?: Maybe<Scalars['String']['output']>;
};

export type DengueConfirmedCasesDto = {
  __typename?: 'DengueConfirmedCasesDto';
  icdcode?: Maybe<Scalars['String']['output']>;
  longname?: Maybe<Scalars['String']['output']>;
  total?: Maybe<Scalars['Int']['output']>;
};

export type Department = {
  __typename?: 'Department';
  ancillaryConfig?: Maybe<AncillaryConfig>;
  /** Get all available Department Rooms */
  availableDepartmentRooms?: Maybe<Array<Maybe<Room>>>;
  canClearPatientDischarge?: Maybe<Scalars['Boolean']['output']>;
  canPurchaseItems?: Maybe<Scalars['Boolean']['output']>;
  canReceiveItems?: Maybe<Scalars['Boolean']['output']>;
  children?: Maybe<Array<Maybe<Department>>>;
  code?: Maybe<Scalars['String']['output']>;
  config?: Maybe<CoaConfig>;
  costCenter?: Maybe<Scalars['Boolean']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  deleted?: Maybe<Scalars['Boolean']['output']>;
  department?: Maybe<Array<Maybe<Scalars['UUID']['output']>>>;
  departmentCode?: Maybe<Scalars['String']['output']>;
  departmentDesc?: Maybe<Scalars['String']['output']>;
  departmentHead?: Maybe<Scalars['UUID']['output']>;
  departmentItems?: Maybe<Array<Maybe<DepartmentItem>>>;
  departmentName?: Maybe<Scalars['String']['output']>;
  /** Get all Department Rooms */
  departmentRooms?: Maybe<Array<Maybe<Room>>>;
  deprecated?: Maybe<Scalars['Boolean']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  eventsToNotify?: Maybe<Scalars['String']['output']>;
  groupCategory?: Maybe<Scalars['String']['output']>;
  hasDiagnostics?: Maybe<Scalars['Boolean']['output']>;
  hasPatients?: Maybe<Scalars['Boolean']['output']>;
  hasRooms?: Maybe<Scalars['Boolean']['output']>;
  hasSpecialPriceTier?: Maybe<Scalars['Boolean']['output']>;
  hideAccounting?: Maybe<Scalars['Boolean']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  idPrefix?: Maybe<Scalars['String']['output']>;
  isDefaultClearingDepartment?: Maybe<Scalars['Boolean']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  medicationStockRequest?: Maybe<Scalars['Boolean']['output']>;
  parentDepartment?: Maybe<Department>;
  revenueCenter?: Maybe<Scalars['Boolean']['output']>;
  revenueTag?: Maybe<Scalars['String']['output']>;
  specialArea?: Maybe<Scalars['Boolean']['output']>;
  subDepartment?: Maybe<Scalars['Boolean']['output']>;
  /** Get Parent Departments */
  subDepartments?: Maybe<Array<Maybe<Department>>>;
  workSchedule?: Maybe<Array<Maybe<DepartmentSchedule>>>;
};

export type DepartmentCensusDto = {
  __typename?: 'DepartmentCensusDto';
  department?: Maybe<Scalars['String']['output']>;
  department_name?: Maybe<Scalars['String']['output']>;
  entry_datetime?: Maybe<Scalars['String']['output']>;
  first_name?: Maybe<Scalars['String']['output']>;
  last_name?: Maybe<Scalars['String']['output']>;
  middle_name?: Maybe<Scalars['String']['output']>;
  registry_type?: Maybe<Scalars['String']['output']>;
};

export type DepartmentInput = {
  ancillaryConfig?: InputMaybe<AncillaryConfigInput>;
  canClearPatientDischarge?: InputMaybe<Scalars['Boolean']['input']>;
  canPurchaseItems?: InputMaybe<Scalars['Boolean']['input']>;
  canReceiveItems?: InputMaybe<Scalars['Boolean']['input']>;
  children?: InputMaybe<Array<InputMaybe<DepartmentInput>>>;
  costCenter?: InputMaybe<Scalars['Boolean']['input']>;
  createdDate?: InputMaybe<Scalars['Instant']['input']>;
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  departmentCode?: InputMaybe<Scalars['String']['input']>;
  departmentDesc?: InputMaybe<Scalars['String']['input']>;
  departmentHead?: InputMaybe<Scalars['UUID']['input']>;
  departmentItems?: InputMaybe<Array<InputMaybe<DepartmentItemInput>>>;
  departmentName?: InputMaybe<Scalars['String']['input']>;
  deprecated?: InputMaybe<Scalars['Boolean']['input']>;
  eventsToNotify?: InputMaybe<Scalars['String']['input']>;
  groupCategory?: InputMaybe<Scalars['String']['input']>;
  hasDiagnostics?: InputMaybe<Scalars['Boolean']['input']>;
  hasPatients?: InputMaybe<Scalars['Boolean']['input']>;
  hasRooms?: InputMaybe<Scalars['Boolean']['input']>;
  hasSpecialPriceTier?: InputMaybe<Scalars['Boolean']['input']>;
  hideAccounting?: InputMaybe<Scalars['Boolean']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  idPrefix?: InputMaybe<Scalars['String']['input']>;
  isDefaultClearingDepartment?: InputMaybe<Scalars['Boolean']['input']>;
  medicationStockRequest?: InputMaybe<Scalars['Boolean']['input']>;
  parentDepartment?: InputMaybe<DepartmentInput>;
  revenueCenter?: InputMaybe<Scalars['Boolean']['input']>;
  revenueTag?: InputMaybe<Scalars['String']['input']>;
  specialArea?: InputMaybe<Scalars['Boolean']['input']>;
  subDepartment?: InputMaybe<Scalars['Boolean']['input']>;
  workSchedule?: InputMaybe<Array<InputMaybe<DepartmentScheduleInput>>>;
};

export type DepartmentItem = {
  __typename?: 'DepartmentItem';
  allow_trade?: Maybe<Scalars['Boolean']['output']>;
  department?: Maybe<Department>;
  id?: Maybe<Scalars['UUID']['output']>;
  is_assign?: Maybe<Scalars['Boolean']['output']>;
  item?: Maybe<Item>;
  reorder_quantity?: Maybe<Scalars['BigDecimal']['output']>;
};

export type DepartmentItemInput = {
  allow_trade?: InputMaybe<Scalars['Boolean']['input']>;
  department?: InputMaybe<DepartmentInput>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  is_assign?: InputMaybe<Scalars['Boolean']['input']>;
  item?: InputMaybe<ItemInput>;
  reorder_quantity?: InputMaybe<Scalars['BigDecimal']['input']>;
};

export type DepartmentSchedule = {
  __typename?: 'DepartmentSchedule';
  color?: Maybe<Scalars['String']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  dateTimeEnd?: Maybe<Scalars['String']['output']>;
  dateTimeEndRaw?: Maybe<Scalars['Instant']['output']>;
  dateTimeStart?: Maybe<Scalars['String']['output']>;
  dateTimeStartRaw?: Maybe<Scalars['Instant']['output']>;
  department?: Maybe<Department>;
  id?: Maybe<Scalars['UUID']['output']>;
  label?: Maybe<Scalars['String']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  mealBreakEnd?: Maybe<Scalars['Instant']['output']>;
  mealBreakStart?: Maybe<Scalars['Instant']['output']>;
  title?: Maybe<Scalars['String']['output']>;
};

export type DepartmentScheduleInput = {
  color?: InputMaybe<Scalars['String']['input']>;
  dateTimeEnd?: InputMaybe<Scalars['String']['input']>;
  dateTimeEndRaw?: InputMaybe<Scalars['Instant']['input']>;
  dateTimeStart?: InputMaybe<Scalars['String']['input']>;
  dateTimeStartRaw?: InputMaybe<Scalars['Instant']['input']>;
  department?: InputMaybe<DepartmentInput>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  label?: InputMaybe<Scalars['String']['input']>;
  mealBreakEnd?: InputMaybe<Scalars['Instant']['input']>;
  mealBreakStart?: InputMaybe<Scalars['Instant']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
};

export type DepartmentStockIssue = {
  __typename?: 'DepartmentStockIssue';
  accType?: Maybe<Scalars['UUID']['output']>;
  asset_a?: Maybe<Scalars['BigDecimal']['output']>;
  asset_b?: Maybe<Scalars['BigDecimal']['output']>;
  asset_c?: Maybe<Scalars['BigDecimal']['output']>;
  asset_d?: Maybe<Scalars['BigDecimal']['output']>;
  asset_e?: Maybe<Scalars['BigDecimal']['output']>;
  asset_f?: Maybe<Scalars['BigDecimal']['output']>;
  asset_g?: Maybe<Scalars['BigDecimal']['output']>;
  asset_h?: Maybe<Scalars['BigDecimal']['output']>;
  asset_i?: Maybe<Scalars['BigDecimal']['output']>;
  asset_j?: Maybe<Scalars['BigDecimal']['output']>;
  asset_k?: Maybe<Scalars['BigDecimal']['output']>;
  asset_l?: Maybe<Scalars['BigDecimal']['output']>;
  asset_m?: Maybe<Scalars['BigDecimal']['output']>;
  asset_n?: Maybe<Scalars['BigDecimal']['output']>;
  asset_o?: Maybe<Scalars['BigDecimal']['output']>;
  asset_p?: Maybe<Scalars['BigDecimal']['output']>;
  asset_q?: Maybe<Scalars['BigDecimal']['output']>;
  asset_r?: Maybe<Scalars['BigDecimal']['output']>;
  asset_s?: Maybe<Scalars['BigDecimal']['output']>;
  asset_t?: Maybe<Scalars['BigDecimal']['output']>;
  asset_u?: Maybe<Scalars['BigDecimal']['output']>;
  asset_v?: Maybe<Scalars['BigDecimal']['output']>;
  asset_w?: Maybe<Scalars['BigDecimal']['output']>;
  asset_x?: Maybe<Scalars['BigDecimal']['output']>;
  asset_y?: Maybe<Scalars['BigDecimal']['output']>;
  asset_z?: Maybe<Scalars['BigDecimal']['output']>;
  category?: Maybe<AccountingCategory>;
  claimed_by?: Maybe<Employee>;
  created?: Maybe<Scalars['Instant']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  details?: Maybe<Scalars['Map_String_StringScalar']['output']>;
  domain?: Maybe<Scalars['String']['output']>;
  expense_a?: Maybe<Scalars['BigDecimal']['output']>;
  expense_b?: Maybe<Scalars['BigDecimal']['output']>;
  expense_c?: Maybe<Scalars['BigDecimal']['output']>;
  expense_d?: Maybe<Scalars['BigDecimal']['output']>;
  expense_e?: Maybe<Scalars['BigDecimal']['output']>;
  expense_f?: Maybe<Scalars['BigDecimal']['output']>;
  expense_g?: Maybe<Scalars['BigDecimal']['output']>;
  expense_h?: Maybe<Scalars['BigDecimal']['output']>;
  expense_i?: Maybe<Scalars['BigDecimal']['output']>;
  expense_j?: Maybe<Scalars['BigDecimal']['output']>;
  expense_k?: Maybe<Scalars['BigDecimal']['output']>;
  expense_l?: Maybe<Scalars['BigDecimal']['output']>;
  expense_m?: Maybe<Scalars['BigDecimal']['output']>;
  expense_n?: Maybe<Scalars['BigDecimal']['output']>;
  expense_o?: Maybe<Scalars['BigDecimal']['output']>;
  expense_p?: Maybe<Scalars['BigDecimal']['output']>;
  expense_q?: Maybe<Scalars['BigDecimal']['output']>;
  expense_r?: Maybe<Scalars['BigDecimal']['output']>;
  expense_s?: Maybe<Scalars['BigDecimal']['output']>;
  expense_t?: Maybe<Scalars['BigDecimal']['output']>;
  expense_u?: Maybe<Scalars['BigDecimal']['output']>;
  expense_v?: Maybe<Scalars['BigDecimal']['output']>;
  expense_w?: Maybe<Scalars['BigDecimal']['output']>;
  expense_x?: Maybe<Scalars['BigDecimal']['output']>;
  expense_y?: Maybe<Scalars['BigDecimal']['output']>;
  expense_z?: Maybe<Scalars['BigDecimal']['output']>;
  flagValue?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  isCancel?: Maybe<Scalars['Boolean']['output']>;
  isPosted?: Maybe<Scalars['Boolean']['output']>;
  issueDate?: Maybe<Scalars['Instant']['output']>;
  issueFrom?: Maybe<Department>;
  issueNo?: Maybe<Scalars['String']['output']>;
  issueTo?: Maybe<Department>;
  issueType?: Maybe<Scalars['String']['output']>;
  issued_by?: Maybe<Employee>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  negative_asset_a?: Maybe<Scalars['BigDecimal']['output']>;
  negative_asset_b?: Maybe<Scalars['BigDecimal']['output']>;
  negative_asset_c?: Maybe<Scalars['BigDecimal']['output']>;
  negative_asset_d?: Maybe<Scalars['BigDecimal']['output']>;
  negative_asset_e?: Maybe<Scalars['BigDecimal']['output']>;
  negative_asset_f?: Maybe<Scalars['BigDecimal']['output']>;
  negative_asset_g?: Maybe<Scalars['BigDecimal']['output']>;
  negative_asset_h?: Maybe<Scalars['BigDecimal']['output']>;
  negative_asset_i?: Maybe<Scalars['BigDecimal']['output']>;
  negative_asset_j?: Maybe<Scalars['BigDecimal']['output']>;
  negative_asset_k?: Maybe<Scalars['BigDecimal']['output']>;
  negative_asset_l?: Maybe<Scalars['BigDecimal']['output']>;
  negative_asset_m?: Maybe<Scalars['BigDecimal']['output']>;
  negative_asset_n?: Maybe<Scalars['BigDecimal']['output']>;
  negative_asset_o?: Maybe<Scalars['BigDecimal']['output']>;
  negative_asset_p?: Maybe<Scalars['BigDecimal']['output']>;
  negative_asset_q?: Maybe<Scalars['BigDecimal']['output']>;
  negative_asset_r?: Maybe<Scalars['BigDecimal']['output']>;
  negative_asset_s?: Maybe<Scalars['BigDecimal']['output']>;
  negative_asset_t?: Maybe<Scalars['BigDecimal']['output']>;
  negative_asset_u?: Maybe<Scalars['BigDecimal']['output']>;
  negative_asset_v?: Maybe<Scalars['BigDecimal']['output']>;
  negative_asset_w?: Maybe<Scalars['BigDecimal']['output']>;
  negative_asset_x?: Maybe<Scalars['BigDecimal']['output']>;
  negative_asset_y?: Maybe<Scalars['BigDecimal']['output']>;
  negative_asset_z?: Maybe<Scalars['BigDecimal']['output']>;
  postedLedger?: Maybe<Scalars['UUID']['output']>;
  request?: Maybe<DepartmentStockRequest>;
  requestNo?: Maybe<Scalars['String']['output']>;
};

export type DepartmentStockIssueItems = {
  __typename?: 'DepartmentStockIssueItems';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  isPosted?: Maybe<Scalars['Boolean']['output']>;
  issueQty?: Maybe<Scalars['Int']['output']>;
  item?: Maybe<Item>;
  itemCategory?: Maybe<Scalars['String']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  remarks?: Maybe<Scalars['String']['output']>;
  requestItem?: Maybe<Scalars['UUID']['output']>;
  requestedQty?: Maybe<Scalars['Int']['output']>;
  stockIssue?: Maybe<DepartmentStockIssue>;
  unitCost?: Maybe<Scalars['BigDecimal']['output']>;
  uou?: Maybe<Scalars['String']['output']>;
};

export type DepartmentStockRequest = {
  __typename?: 'DepartmentStockRequest';
  claimedBy?: Maybe<Employee>;
  created?: Maybe<Scalars['Instant']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  dispensedBy?: Maybe<Employee>;
  id?: Maybe<Scalars['UUID']['output']>;
  isCanceled?: Maybe<Scalars['Boolean']['output']>;
  isPosted?: Maybe<Scalars['Boolean']['output']>;
  issuingDepartment?: Maybe<Department>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  preparedBy?: Maybe<Employee>;
  purpose?: Maybe<Scalars['String']['output']>;
  remarks?: Maybe<Scalars['String']['output']>;
  requestDate?: Maybe<Scalars['Instant']['output']>;
  requestNo?: Maybe<Scalars['String']['output']>;
  requestType?: Maybe<Scalars['String']['output']>;
  requestedBy?: Maybe<Employee>;
  requestingDepartment?: Maybe<Department>;
  status?: Maybe<Scalars['Int']['output']>;
  stockIssue?: Maybe<DepartmentStockIssue>;
};

export type DepartmentStockRequestItem = {
  __typename?: 'DepartmentStockRequestItem';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  departmentStockRequest?: Maybe<DepartmentStockRequest>;
  id?: Maybe<Scalars['UUID']['output']>;
  isPosted?: Maybe<Scalars['Boolean']['output']>;
  isRejected?: Maybe<Scalars['Boolean']['output']>;
  item?: Maybe<Item>;
  itemCategory?: Maybe<Scalars['String']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  preparedQty?: Maybe<Scalars['Int']['output']>;
  quantity_requested?: Maybe<Scalars['Int']['output']>;
  remarks?: Maybe<Scalars['String']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  stockIssue?: Maybe<DepartmentStockIssue>;
  stockIssueItems?: Maybe<DepartmentStockIssueItems>;
  unit_cost?: Maybe<Scalars['BigDecimal']['output']>;
  uou?: Maybe<Scalars['String']['output']>;
};

export enum DependentType {
  Child = 'CHILD',
  Father = 'FATHER',
  Mother = 'MOTHER',
  Spouse = 'SPOUSE'
}

export type DiagnosticResult = {
  __typename?: 'DiagnosticResult';
  accession?: Maybe<Scalars['String']['output']>;
  created?: Maybe<Scalars['Instant']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  data?: Maybe<Scalars['String']['output']>;
  deleted?: Maybe<Scalars['Boolean']['output']>;
  file_name?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  mimetype?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  orderSlipItem?: Maybe<OrderSlipItem>;
  parsed?: Maybe<Scalars['String']['output']>;
  patient?: Maybe<Patient>;
  service?: Maybe<Service>;
  type?: Maybe<Scalars['String']['output']>;
  url_path?: Maybe<Scalars['String']['output']>;
};

export type DicNumber = {
  __typename?: 'DicNumber';
  department?: Maybe<Department>;
  dic_no?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  patient?: Maybe<Patient>;
};

export type Diet = {
  __typename?: 'Diet';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  dietCategory?: Maybe<DietCategory>;
  dietColor?: Maybe<Scalars['String']['output']>;
  dietDescription?: Maybe<Scalars['String']['output']>;
  dietName?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
};

export type DietCategory = {
  __typename?: 'DietCategory';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  dietCategoryCode?: Maybe<Scalars['String']['output']>;
  dietCategoryDescription?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  status?: Maybe<Scalars['String']['output']>;
};

export type DietCategoryInput = {
  dietCategoryCode?: InputMaybe<Scalars['String']['input']>;
  dietCategoryDescription?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
};

export type DietInput = {
  dietCategory?: InputMaybe<DietCategoryInput>;
  dietColor?: InputMaybe<Scalars['String']['input']>;
  dietDescription?: InputMaybe<Scalars['String']['input']>;
  dietName?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};

export type DietList = {
  __typename?: 'DietList';
  alias?: Maybe<Scalars['String']['output']>;
  created?: Maybe<Scalars['Instant']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  dietType?: Maybe<Scalars['String']['output']>;
  employee?: Maybe<Employee>;
  fullName?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  mealDate?: Maybe<Scalars['Instant']['output']>;
  mealSched?: Maybe<Scalars['String']['output']>;
  mealToCompanion?: Maybe<Scalars['Boolean']['output']>;
  patientCase?: Maybe<Case>;
  requestedBy?: Maybe<Employee>;
  requestedFrom?: Maybe<Department>;
  served?: Maybe<Scalars['Instant']['output']>;
  servedBy?: Maybe<Employee>;
  status?: Maybe<Scalars['String']['output']>;
};

export type DietLog = {
  __typename?: 'DietLog';
  additional_instructions?: Maybe<Scalars['String']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  dateAdded?: Maybe<Scalars['Instant']['output']>;
  diet?: Maybe<Diet>;
  employee?: Maybe<Employee>;
  getaCase?: Maybe<Case>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  reason?: Maybe<Scalars['String']['output']>;
};

export type DietNotes = {
  __typename?: 'DietNotes';
  caseId?: Maybe<Case>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  dateTime?: Maybe<Scalars['Date']['output']>;
  dietitianNote?: Maybe<Scalars['String']['output']>;
  employee?: Maybe<Employee>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  pesStatement?: Maybe<Scalars['String']['output']>;
};

export enum Direction {
  Asc = 'ASC',
  Desc = 'DESC'
}

export type Disbursement = {
  __typename?: 'Disbursement';
  advancesSupplier?: Maybe<Scalars['BigDecimal']['output']>;
  appliedAmount?: Maybe<Scalars['BigDecimal']['output']>;
  bank?: Maybe<Bank>;
  cash?: Maybe<Scalars['BigDecimal']['output']>;
  cashOnBank?: Maybe<Scalars['BigDecimal']['output']>;
  cashOnHand?: Maybe<Scalars['BigDecimal']['output']>;
  checks?: Maybe<Scalars['BigDecimal']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  department?: Maybe<Department>;
  details?: Maybe<Scalars['Map_String_StringScalar']['output']>;
  disDate?: Maybe<Scalars['Instant']['output']>;
  disNo?: Maybe<Scalars['String']['output']>;
  disType?: Maybe<Scalars['String']['output']>;
  discAmount?: Maybe<Scalars['BigDecimal']['output']>;
  discountAmount?: Maybe<Scalars['BigDecimal']['output']>;
  domain?: Maybe<Scalars['String']['output']>;
  ewt1Percent?: Maybe<Scalars['BigDecimal']['output']>;
  ewt2Percent?: Maybe<Scalars['BigDecimal']['output']>;
  ewt3Percent?: Maybe<Scalars['BigDecimal']['output']>;
  ewt4Percent?: Maybe<Scalars['BigDecimal']['output']>;
  ewt5Percent?: Maybe<Scalars['BigDecimal']['output']>;
  ewt7Percent?: Maybe<Scalars['BigDecimal']['output']>;
  ewt10Percent?: Maybe<Scalars['BigDecimal']['output']>;
  ewt15Percent?: Maybe<Scalars['BigDecimal']['output']>;
  ewt18Percent?: Maybe<Scalars['BigDecimal']['output']>;
  ewt30Percent?: Maybe<Scalars['BigDecimal']['output']>;
  ewtAmount?: Maybe<Scalars['BigDecimal']['output']>;
  flagValue?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  isAdvance?: Maybe<Scalars['Boolean']['output']>;
  isRelease?: Maybe<Scalars['Boolean']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  otherCredits?: Maybe<Scalars['BigDecimal']['output']>;
  payeeName?: Maybe<Scalars['String']['output']>;
  paymentCategory?: Maybe<Scalars['String']['output']>;
  posted?: Maybe<Scalars['Boolean']['output']>;
  postedBy?: Maybe<Scalars['String']['output']>;
  postedLedger?: Maybe<Scalars['UUID']['output']>;
  reapplication?: Maybe<Scalars['UUID']['output']>;
  remarksNotes?: Maybe<Scalars['String']['output']>;
  rounding?: Maybe<Scalars['Int']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  supplier?: Maybe<Supplier>;
  supplierAmount?: Maybe<Scalars['BigDecimal']['output']>;
  terminal?: Maybe<CashierTerminal>;
  transType?: Maybe<ApTransaction>;
  value_a?: Maybe<Scalars['BigDecimal']['output']>;
  value_b?: Maybe<Scalars['BigDecimal']['output']>;
  value_c?: Maybe<Scalars['BigDecimal']['output']>;
  value_d?: Maybe<Scalars['BigDecimal']['output']>;
  value_e?: Maybe<Scalars['BigDecimal']['output']>;
  value_f?: Maybe<Scalars['BigDecimal']['output']>;
  value_g?: Maybe<Scalars['BigDecimal']['output']>;
  value_h?: Maybe<Scalars['BigDecimal']['output']>;
  value_i?: Maybe<Scalars['BigDecimal']['output']>;
  value_j?: Maybe<Scalars['BigDecimal']['output']>;
  value_k?: Maybe<Scalars['BigDecimal']['output']>;
  value_l?: Maybe<Scalars['BigDecimal']['output']>;
  value_m?: Maybe<Scalars['BigDecimal']['output']>;
  value_n?: Maybe<Scalars['BigDecimal']['output']>;
  value_o?: Maybe<Scalars['BigDecimal']['output']>;
  value_p?: Maybe<Scalars['BigDecimal']['output']>;
  value_q?: Maybe<Scalars['BigDecimal']['output']>;
  value_r?: Maybe<Scalars['BigDecimal']['output']>;
  value_s?: Maybe<Scalars['BigDecimal']['output']>;
  value_t?: Maybe<Scalars['BigDecimal']['output']>;
  value_u?: Maybe<Scalars['BigDecimal']['output']>;
  value_v?: Maybe<Scalars['BigDecimal']['output']>;
  value_w?: Maybe<Scalars['BigDecimal']['output']>;
  value_x?: Maybe<Scalars['BigDecimal']['output']>;
  value_y?: Maybe<Scalars['BigDecimal']['output']>;
  value_z?: Maybe<Scalars['BigDecimal']['output']>;
  value_z1?: Maybe<Scalars['BigDecimal']['output']>;
  value_z2?: Maybe<Scalars['BigDecimal']['output']>;
  value_z3?: Maybe<Scalars['BigDecimal']['output']>;
  value_z4?: Maybe<Scalars['BigDecimal']['output']>;
  value_z5?: Maybe<Scalars['BigDecimal']['output']>;
  value_z6?: Maybe<Scalars['BigDecimal']['output']>;
  value_z7?: Maybe<Scalars['BigDecimal']['output']>;
  value_z8?: Maybe<Scalars['BigDecimal']['output']>;
  value_z9?: Maybe<Scalars['BigDecimal']['output']>;
  value_z10?: Maybe<Scalars['BigDecimal']['output']>;
  value_z11?: Maybe<Scalars['BigDecimal']['output']>;
  value_z12?: Maybe<Scalars['BigDecimal']['output']>;
  value_z13?: Maybe<Scalars['BigDecimal']['output']>;
  value_z14?: Maybe<Scalars['BigDecimal']['output']>;
  value_z15?: Maybe<Scalars['BigDecimal']['output']>;
  value_z16?: Maybe<Scalars['BigDecimal']['output']>;
  value_z17?: Maybe<Scalars['BigDecimal']['output']>;
  value_z18?: Maybe<Scalars['BigDecimal']['output']>;
  value_z19?: Maybe<Scalars['BigDecimal']['output']>;
  value_z20?: Maybe<Scalars['BigDecimal']['output']>;
  value_z21?: Maybe<Scalars['BigDecimal']['output']>;
  value_z22?: Maybe<Scalars['BigDecimal']['output']>;
  value_z23?: Maybe<Scalars['BigDecimal']['output']>;
  value_z24?: Maybe<Scalars['BigDecimal']['output']>;
  value_z25?: Maybe<Scalars['BigDecimal']['output']>;
  value_z26?: Maybe<Scalars['BigDecimal']['output']>;
  voucherAmount?: Maybe<Scalars['BigDecimal']['output']>;
};

export type DisbursementAp = {
  __typename?: 'DisbursementAp';
  appliedAmount?: Maybe<Scalars['BigDecimal']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  debitMemo?: Maybe<DebitMemo>;
  disbursement?: Maybe<Disbursement>;
  discount?: Maybe<Scalars['BigDecimal']['output']>;
  ewtAmount?: Maybe<Scalars['BigDecimal']['output']>;
  ewtDesc?: Maybe<Scalars['String']['output']>;
  ewtRate?: Maybe<Scalars['BigDecimal']['output']>;
  grossAmount?: Maybe<Scalars['BigDecimal']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  netAmount?: Maybe<Scalars['BigDecimal']['output']>;
  payable?: Maybe<AccountsPayable>;
  posted?: Maybe<Scalars['Boolean']['output']>;
  reapplication?: Maybe<Scalars['UUID']['output']>;
  vatAmount?: Maybe<Scalars['BigDecimal']['output']>;
  vatInclusive?: Maybe<Scalars['Boolean']['output']>;
  vatRate?: Maybe<Scalars['BigDecimal']['output']>;
};

export type DisbursementApDtoInput = {
  appliedAmount?: InputMaybe<Scalars['BigDecimal']['input']>;
  discount?: InputMaybe<Scalars['BigDecimal']['input']>;
  ewtAmount?: InputMaybe<Scalars['BigDecimal']['input']>;
  ewtDesc?: InputMaybe<Scalars['String']['input']>;
  ewtRate?: InputMaybe<Scalars['BigDecimal']['input']>;
  grossAmount?: InputMaybe<Scalars['BigDecimal']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  isNew?: InputMaybe<Scalars['Boolean']['input']>;
  netAmount?: InputMaybe<Scalars['BigDecimal']['input']>;
  payable?: InputMaybe<AccountsPayableInput>;
  vatAmount?: InputMaybe<Scalars['BigDecimal']['input']>;
  vatInclusive?: InputMaybe<Scalars['Boolean']['input']>;
  vatRate?: InputMaybe<Scalars['BigDecimal']['input']>;
};

export type DisbursementCheck = {
  __typename?: 'DisbursementCheck';
  amount?: Maybe<Scalars['BigDecimal']['output']>;
  bank?: Maybe<Bank>;
  bankBranch?: Maybe<Scalars['String']['output']>;
  checkDate?: Maybe<Scalars['Instant']['output']>;
  checkNo?: Maybe<Scalars['String']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  disbursement?: Maybe<Disbursement>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  releasing?: Maybe<Scalars['UUID']['output']>;
};

export type DisbursementDtoInput = {
  amount?: InputMaybe<Scalars['BigDecimal']['input']>;
  bank?: InputMaybe<BankInput>;
  bankBranch?: InputMaybe<Scalars['String']['input']>;
  checkDate?: InputMaybe<Scalars['Instant']['input']>;
  checkNo?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  isNew?: InputMaybe<Scalars['Boolean']['input']>;
};

export type DisbursementExpDtoInput = {
  amount?: InputMaybe<Scalars['BigDecimal']['input']>;
  department?: InputMaybe<DepartmentInput>;
  id?: InputMaybe<Scalars['String']['input']>;
  isNew?: InputMaybe<Scalars['Boolean']['input']>;
  remarks?: InputMaybe<Scalars['String']['input']>;
  transType?: InputMaybe<ExpenseTransactionInput>;
};

export type DisbursementExpense = {
  __typename?: 'DisbursementExpense';
  amount?: Maybe<Scalars['BigDecimal']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  department?: Maybe<Department>;
  disbursement?: Maybe<Disbursement>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  remarks?: Maybe<Scalars['String']['output']>;
  transType?: Maybe<ExpenseTransaction>;
};

export type DisbursementInput = {
  advancesSupplier?: InputMaybe<Scalars['BigDecimal']['input']>;
  appliedAmount?: InputMaybe<Scalars['BigDecimal']['input']>;
  bank?: InputMaybe<BankInput>;
  cash?: InputMaybe<Scalars['BigDecimal']['input']>;
  cashOnBank?: InputMaybe<Scalars['BigDecimal']['input']>;
  cashOnHand?: InputMaybe<Scalars['BigDecimal']['input']>;
  checks?: InputMaybe<Scalars['BigDecimal']['input']>;
  department?: InputMaybe<DepartmentInput>;
  disDate?: InputMaybe<Scalars['Instant']['input']>;
  disNo?: InputMaybe<Scalars['String']['input']>;
  disType?: InputMaybe<Scalars['String']['input']>;
  discAmount?: InputMaybe<Scalars['BigDecimal']['input']>;
  discountAmount?: InputMaybe<Scalars['BigDecimal']['input']>;
  ewt1Percent?: InputMaybe<Scalars['BigDecimal']['input']>;
  ewt2Percent?: InputMaybe<Scalars['BigDecimal']['input']>;
  ewt3Percent?: InputMaybe<Scalars['BigDecimal']['input']>;
  ewt4Percent?: InputMaybe<Scalars['BigDecimal']['input']>;
  ewt5Percent?: InputMaybe<Scalars['BigDecimal']['input']>;
  ewt7Percent?: InputMaybe<Scalars['BigDecimal']['input']>;
  ewt10Percent?: InputMaybe<Scalars['BigDecimal']['input']>;
  ewt15Percent?: InputMaybe<Scalars['BigDecimal']['input']>;
  ewt18Percent?: InputMaybe<Scalars['BigDecimal']['input']>;
  ewt30Percent?: InputMaybe<Scalars['BigDecimal']['input']>;
  ewtAmount?: InputMaybe<Scalars['BigDecimal']['input']>;
  flagValue?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  isAdvance?: InputMaybe<Scalars['Boolean']['input']>;
  isRelease?: InputMaybe<Scalars['Boolean']['input']>;
  otherCredits?: InputMaybe<Scalars['BigDecimal']['input']>;
  payeeName?: InputMaybe<Scalars['String']['input']>;
  paymentCategory?: InputMaybe<Scalars['String']['input']>;
  posted?: InputMaybe<Scalars['Boolean']['input']>;
  postedBy?: InputMaybe<Scalars['String']['input']>;
  postedLedger?: InputMaybe<Scalars['UUID']['input']>;
  reapplication?: InputMaybe<Scalars['UUID']['input']>;
  remarksNotes?: InputMaybe<Scalars['String']['input']>;
  rounding?: InputMaybe<Scalars['Int']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  supplier?: InputMaybe<SupplierInput>;
  supplierAmount?: InputMaybe<Scalars['BigDecimal']['input']>;
  terminal?: InputMaybe<CashierTerminalInput>;
  transType?: InputMaybe<ApTransactionInput>;
  value_a?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_b?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_c?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_d?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_e?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_f?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_g?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_h?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_i?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_j?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_k?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_l?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_m?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_n?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_o?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_p?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_q?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_r?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_s?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_t?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_u?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_v?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_w?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_x?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_y?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_z?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_z1?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_z2?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_z3?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_z4?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_z5?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_z6?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_z7?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_z8?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_z9?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_z10?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_z11?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_z12?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_z13?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_z14?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_z15?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_z16?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_z17?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_z18?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_z19?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_z20?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_z21?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_z22?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_z23?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_z24?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_z25?: InputMaybe<Scalars['BigDecimal']['input']>;
  value_z26?: InputMaybe<Scalars['BigDecimal']['input']>;
  voucherAmount?: InputMaybe<Scalars['BigDecimal']['input']>;
};

export type DisbursementWtx = {
  __typename?: 'DisbursementWtx';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  disbursement?: Maybe<Disbursement>;
  ewtAmount?: Maybe<Scalars['BigDecimal']['output']>;
  ewtDesc?: Maybe<Scalars['String']['output']>;
  ewtRate?: Maybe<Scalars['BigDecimal']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
};

export type DisbursementWtxDtoInput = {
  ewtAmount?: InputMaybe<Scalars['BigDecimal']['input']>;
  ewtDesc?: InputMaybe<Scalars['String']['input']>;
  ewtRate?: InputMaybe<Scalars['BigDecimal']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  isNew?: InputMaybe<Scalars['Boolean']['input']>;
};

export type DischargeClearance = {
  __typename?: 'DischargeClearance';
  clearingStaff?: Maybe<Employee>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  department?: Maybe<Department>;
  id?: Maybe<Scalars['UUID']['output']>;
  isCleared?: Maybe<Scalars['Boolean']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  parentCase?: Maybe<Case>;
};

export type DischargeEv = {
  __typename?: 'DischargeEv';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  emergencyVisits?: Maybe<Scalars['Int']['output']>;
  emergencyVisitsAdult?: Maybe<Scalars['Int']['output']>;
  emergencyVisitsPediatric?: Maybe<Scalars['Int']['output']>;
  evFromFacilityToAnother?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  reportingYear?: Maybe<Scalars['Int']['output']>;
  submittedDateTime?: Maybe<Scalars['Instant']['output']>;
};

export type DischargeMobidity = {
  __typename?: 'DischargeMobidity';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  diagnosisCategory?: Maybe<Scalars['String']['output']>;
  dohResponse?: Maybe<Scalars['String']['output']>;
  female14?: Maybe<Scalars['Int']['output']>;
  female59?: Maybe<Scalars['Int']['output']>;
  female70Over?: Maybe<Scalars['Int']['output']>;
  female1014?: Maybe<Scalars['Int']['output']>;
  female1519?: Maybe<Scalars['Int']['output']>;
  female2024?: Maybe<Scalars['Int']['output']>;
  female2529?: Maybe<Scalars['Int']['output']>;
  female3034?: Maybe<Scalars['Int']['output']>;
  female3539?: Maybe<Scalars['Int']['output']>;
  female4044?: Maybe<Scalars['Int']['output']>;
  female4549?: Maybe<Scalars['Int']['output']>;
  female5054?: Maybe<Scalars['Int']['output']>;
  female5559?: Maybe<Scalars['Int']['output']>;
  female6064?: Maybe<Scalars['Int']['output']>;
  female6569?: Maybe<Scalars['Int']['output']>;
  femaleSubtotal?: Maybe<Scalars['Int']['output']>;
  femaleUnder1?: Maybe<Scalars['Int']['output']>;
  grandTotal?: Maybe<Scalars['Int']['output']>;
  icd10Code?: Maybe<Scalars['String']['output']>;
  icd10Desc?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  male14?: Maybe<Scalars['Int']['output']>;
  male59?: Maybe<Scalars['Int']['output']>;
  male70Over?: Maybe<Scalars['Int']['output']>;
  male1014?: Maybe<Scalars['Int']['output']>;
  male1519?: Maybe<Scalars['Int']['output']>;
  male2024?: Maybe<Scalars['Int']['output']>;
  male2529?: Maybe<Scalars['Int']['output']>;
  male3034?: Maybe<Scalars['Int']['output']>;
  male3539?: Maybe<Scalars['Int']['output']>;
  male4044?: Maybe<Scalars['Int']['output']>;
  male4549?: Maybe<Scalars['Int']['output']>;
  male5054?: Maybe<Scalars['Int']['output']>;
  male5559?: Maybe<Scalars['Int']['output']>;
  male5669?: Maybe<Scalars['Int']['output']>;
  male6064?: Maybe<Scalars['Int']['output']>;
  maleSubtotal?: Maybe<Scalars['Int']['output']>;
  maleUnder1?: Maybe<Scalars['Int']['output']>;
  reportingYear?: Maybe<Scalars['Int']['output']>;
  submittedDateTime?: Maybe<Scalars['Instant']['output']>;
};

export type DischargeNumberDeliveries = {
  __typename?: 'DischargeNumberDeliveries';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  dohResponse?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  reportingYear?: Maybe<Scalars['Int']['output']>;
  submittedDateTime?: Maybe<Scalars['Instant']['output']>;
  totalBvDelivery?: Maybe<Scalars['Int']['output']>;
  totalIfDelivery?: Maybe<Scalars['Int']['output']>;
  totalLbcDelivery?: Maybe<Scalars['Int']['output']>;
  totalOtherDelivery?: Maybe<Scalars['Int']['output']>;
};

export type DischargeOpd = {
  __typename?: 'DischargeOpd';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  icd10Category?: Maybe<Scalars['String']['output']>;
  icd10Code?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  number?: Maybe<Scalars['Int']['output']>;
  opdConsultation?: Maybe<Scalars['String']['output']>;
  reportingYear?: Maybe<Scalars['Int']['output']>;
  submittedDateTime?: Maybe<Scalars['Instant']['output']>;
};

export type DischargesEr = {
  __typename?: 'DischargesEr';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  erConsultations?: Maybe<Scalars['String']['output']>;
  icd10Category?: Maybe<Scalars['String']['output']>;
  icd10Code?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  number?: Maybe<Scalars['Int']['output']>;
  reportingYear?: Maybe<Scalars['Int']['output']>;
  submittedDateTime?: Maybe<Scalars['Instant']['output']>;
};

export type DischargesTesting = {
  __typename?: 'DischargesTesting';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  number?: Maybe<Scalars['Int']['output']>;
  reportingYear?: Maybe<Scalars['Int']['output']>;
  submittedDateTime?: Maybe<Scalars['Instant']['output']>;
  testing?: Maybe<Scalars['String']['output']>;
  testingGroup?: Maybe<Scalars['String']['output']>;
};

export type Discount = {
  __typename?: 'Discount';
  active?: Maybe<Scalars['Boolean']['output']>;
  applyhci?: Maybe<Scalars['Boolean']['output']>;
  applypf?: Maybe<Scalars['Boolean']['output']>;
  code?: Maybe<Scalars['String']['output']>;
  config?: Maybe<CoaConfig>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  department?: Maybe<Array<Maybe<Scalars['UUID']['output']>>>;
  description?: Maybe<Scalars['String']['output']>;
  discount?: Maybe<Scalars['String']['output']>;
  domain?: Maybe<Scalars['String']['output']>;
  fromInitial?: Maybe<Scalars['Boolean']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  includeVat?: Maybe<Scalars['Boolean']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  remarks?: Maybe<Scalars['String']['output']>;
  type?: Maybe<DiscountType>;
  validationSource?: Maybe<Scalars['String']['output']>;
  value?: Maybe<Scalars['BigDecimal']['output']>;
  vat?: Maybe<Scalars['Boolean']['output']>;
};

export type DiscountInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  applyhci?: InputMaybe<Scalars['Boolean']['input']>;
  applypf?: InputMaybe<Scalars['Boolean']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  discount?: InputMaybe<Scalars['String']['input']>;
  fromInitial?: InputMaybe<Scalars['Boolean']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  includeVat?: InputMaybe<Scalars['Boolean']['input']>;
  remarks?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<DiscountType>;
  validationSource?: InputMaybe<Scalars['String']['input']>;
  value?: InputMaybe<Scalars['BigDecimal']['input']>;
  vat?: InputMaybe<Scalars['Boolean']['input']>;
};

export enum DiscountType {
  Custom = 'CUSTOM',
  Fixed = 'FIXED'
}

export type DmDetailsDtoInput = {
  amount?: InputMaybe<Scalars['BigDecimal']['input']>;
  department?: InputMaybe<DepartmentInput>;
  id?: InputMaybe<Scalars['String']['input']>;
  isNew?: InputMaybe<Scalars['Boolean']['input']>;
  percent?: InputMaybe<Scalars['BigDecimal']['input']>;
  remarks?: InputMaybe<Scalars['String']['input']>;
  transType?: InputMaybe<ExpenseTransactionInput>;
  type?: InputMaybe<Scalars['String']['input']>;
};

export type DoctorNote = {
  __typename?: 'DoctorNote';
  assessment?: Maybe<Scalars['String']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  employee?: Maybe<Employee>;
  entryDateTime?: Maybe<Scalars['Instant']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  objective?: Maybe<Scalars['String']['output']>;
  parentCase?: Maybe<Case>;
  plan?: Maybe<Scalars['String']['output']>;
  subjective?: Maybe<Scalars['String']['output']>;
};

export type DoctorOrder = {
  __typename?: 'DoctorOrder';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  /** Get all DoctorOrder DoctorOrderItems */
  doctorOrderItems?: Maybe<Array<Maybe<DoctorOrderItem>>>;
  /** Get all DoctorOrder DoctorOrderProgressNotes */
  doctorOrderProgressNotes?: Maybe<Array<Maybe<DoctorOrderProgressNote>>>;
  entryDateTime?: Maybe<Scalars['Instant']['output']>;
  hidden?: Maybe<Scalars['Instant']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  orderingPhysician?: Maybe<Employee>;
  parentCase?: Maybe<Case>;
};

export type DoctorOrderInput = {
  entryDateTime?: InputMaybe<Scalars['Instant']['input']>;
  hidden?: InputMaybe<Scalars['Instant']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  orderingPhysician?: InputMaybe<EmployeeInput>;
  parentCase?: InputMaybe<CaseInput>;
};

export type DoctorOrderItem = {
  __typename?: 'DoctorOrderItem';
  action?: Maybe<Scalars['String']['output']>;
  additionalInstructions?: Maybe<Scalars['String']['output']>;
  additive?: Maybe<Item>;
  attendingPhysician?: Maybe<Employee>;
  carriedBy?: Maybe<Employee>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  diet?: Maybe<Diet>;
  discontinuedDatetime?: Maybe<Scalars['Instant']['output']>;
  discontinuedDoItemRef?: Maybe<Scalars['UUID']['output']>;
  doctorOrder?: Maybe<DoctorOrder>;
  dose?: Maybe<Scalars['String']['output']>;
  endTime?: Maybe<Scalars['Instant']['output']>;
  entryDateTime?: Maybe<Scalars['Instant']['output']>;
  executionLogs?: Maybe<Scalars['String']['output']>;
  flowRate?: Maybe<Scalars['String']['output']>;
  frequency?: Maybe<Scalars['String']['output']>;
  hidden?: Maybe<Scalars['Instant']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  item?: Maybe<Item>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  managingPhysician?: Maybe<Employee>;
  medicationType?: Maybe<Scalars['String']['output']>;
  medicine?: Maybe<Item>;
  order?: Maybe<Scalars['String']['output']>;
  rolePosition?: Maybe<Scalars['String']['output']>;
  route?: Maybe<Scalars['String']['output']>;
  service?: Maybe<Service>;
  startTime?: Maybe<Scalars['Instant']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  timesExecuted?: Maybe<Scalars['Int']['output']>;
  type?: Maybe<Scalars['String']['output']>;
  volume?: Maybe<Scalars['String']['output']>;
};

export type DoctorOrderItemInput = {
  action?: InputMaybe<Scalars['String']['input']>;
  additionalInstructions?: InputMaybe<Scalars['String']['input']>;
  additive?: InputMaybe<ItemInput>;
  attendingPhysician?: InputMaybe<EmployeeInput>;
  carriedBy?: InputMaybe<EmployeeInput>;
  diet?: InputMaybe<DietInput>;
  discontinuedDatetime?: InputMaybe<Scalars['Instant']['input']>;
  discontinuedDoItemRef?: InputMaybe<Scalars['UUID']['input']>;
  doctorOrder?: InputMaybe<DoctorOrderInput>;
  dose?: InputMaybe<Scalars['String']['input']>;
  endTime?: InputMaybe<Scalars['Instant']['input']>;
  entryDateTime?: InputMaybe<Scalars['Instant']['input']>;
  executionLogs?: InputMaybe<Scalars['String']['input']>;
  flowRate?: InputMaybe<Scalars['String']['input']>;
  frequency?: InputMaybe<Scalars['String']['input']>;
  hidden?: InputMaybe<Scalars['Instant']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  item?: InputMaybe<ItemInput>;
  managingPhysician?: InputMaybe<EmployeeInput>;
  medicationType?: InputMaybe<Scalars['String']['input']>;
  medicine?: InputMaybe<ItemInput>;
  order?: InputMaybe<Scalars['String']['input']>;
  rolePosition?: InputMaybe<Scalars['String']['input']>;
  route?: InputMaybe<Scalars['String']['input']>;
  service?: InputMaybe<ServiceInput>;
  startTime?: InputMaybe<Scalars['Instant']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  timesExecuted?: InputMaybe<Scalars['Int']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  volume?: InputMaybe<Scalars['String']['input']>;
};

export type DoctorOrderProgressNote = {
  __typename?: 'DoctorOrderProgressNote';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  doctorOrder?: Maybe<DoctorOrder>;
  entryDateTime?: Maybe<Scalars['Instant']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  note?: Maybe<Scalars['String']['output']>;
};

export type DocumentTypes = {
  __typename?: 'DocumentTypes';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  documentCode?: Maybe<Scalars['String']['output']>;
  documentDescription?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
};

export type DohClassification = {
  __typename?: 'DohClassification';
  general?: Maybe<Scalars['Int']['output']>;
  government?: Maybe<Scalars['Int']['output']>;
  local?: Maybe<Scalars['Int']['output']>;
  national?: Maybe<Scalars['Int']['output']>;
  natureofownership?: Maybe<Scalars['Int']['output']>;
  ownershipothers?: Maybe<Scalars['String']['output']>;
  privateClassification?: Maybe<Scalars['Int']['output']>;
  servicecapability?: Maybe<Scalars['Int']['output']>;
  specialty?: Maybe<Scalars['Int']['output']>;
  specialtyspecify?: Maybe<Scalars['String']['output']>;
  traumacapability?: Maybe<Scalars['Int']['output']>;
};

export type DohConfiguration = {
  __typename?: 'DohConfiguration';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  totalDeathsConfig?: Maybe<TotalDeathsConfig>;
};

export type DohDeathsDto = {
  __typename?: 'DohDeathsDto';
  deadOnArrivalDeaths?: Maybe<Scalars['Int']['output']>;
  emergencyRoomDeaths?: Maybe<Scalars['Int']['output']>;
  maternalDeaths?: Maybe<Scalars['Int']['output']>;
  neonatalDeaths?: Maybe<Scalars['Int']['output']>;
  no_admission_date?: Maybe<Scalars['Int']['output']>;
  no_discharge_date?: Maybe<Scalars['Int']['output']>;
  no_entry_datetime?: Maybe<Scalars['Int']['output']>;
  stillbirthsDeaths?: Maybe<Scalars['Int']['output']>;
  totalDeathGreaterThanEqualTo48?: Maybe<Scalars['Int']['output']>;
  totalDeathLessThan48?: Maybe<Scalars['Int']['output']>;
  totalDeaths?: Maybe<Scalars['Int']['output']>;
};

export type DohDeathsPageDto = {
  __typename?: 'DohDeathsPageDto';
  deathsDto?: Maybe<DohDeathsDto>;
  grossDeathRate?: Maybe<Scalars['BigDecimal']['output']>;
  netDeathRate?: Maybe<Scalars['BigDecimal']['output']>;
  totalDischarged?: Maybe<Scalars['BigInteger']['output']>;
};

export type DohExpenses = {
  __typename?: 'DohExpenses';
  allowances?: Maybe<Scalars['Float']['output']>;
  amountEquipment?: Maybe<Scalars['Float']['output']>;
  amountInfrastructure?: Maybe<Scalars['Float']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  employeeBenefits?: Maybe<Scalars['Float']['output']>;
  grandTotal?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  reportingYear?: Maybe<Scalars['Int']['output']>;
  salariesWages?: Maybe<Scalars['Float']['output']>;
  submittedDateTime?: Maybe<Scalars['Instant']['output']>;
  totalAmountMedicalSupplies?: Maybe<Scalars['Float']['output']>;
  totalAmountMedicine?: Maybe<Scalars['Float']['output']>;
  totalAmountNonMedicalService?: Maybe<Scalars['Float']['output']>;
  totalAmountUtilities?: Maybe<Scalars['Float']['output']>;
  totalCo?: Maybe<Scalars['Float']['output']>;
  totalMooe?: Maybe<Scalars['Float']['output']>;
  totalps?: Maybe<Scalars['Float']['output']>;
};

export type DohIcdCategory = {
  __typename?: 'DohIcdCategory';
  icdCategoryCode?: Maybe<Scalars['String']['output']>;
  icdCategoryDesc?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
};

export type DohIcdCode = {
  __typename?: 'DohIcdCode';
  icdCategory?: Maybe<Scalars['String']['output']>;
  icdCode?: Maybe<Scalars['String']['output']>;
  icdDesc?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
};

export type DohIcdCodeDto = {
  __typename?: 'DohIcdCodeDto';
  icdCategory?: Maybe<Scalars['String']['output']>;
  icdCode?: Maybe<Scalars['String']['output']>;
  icdDesc?: Maybe<Scalars['String']['output']>;
};

export type DohLogs = {
  __typename?: 'DohLogs';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  reportResponse?: Maybe<Scalars['String']['output']>;
  reportingYear?: Maybe<Scalars['Int']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  submittedReport?: Maybe<Scalars['String']['output']>;
  type?: Maybe<Scalars['String']['output']>;
};

export type DohPosition = {
  __typename?: 'DohPosition';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  isActive?: Maybe<Scalars['Boolean']['output']>;
  isOthers?: Maybe<Scalars['Boolean']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  poscode?: Maybe<Scalars['Int']['output']>;
  poscodeParent?: Maybe<Scalars['Int']['output']>;
  postdesc?: Maybe<Scalars['String']['output']>;
  postype?: Maybe<Scalars['Int']['output']>;
};

export type DohServiceType = {
  __typename?: 'DohServiceType';
  id?: Maybe<Scalars['UUID']['output']>;
  tscode?: Maybe<Scalars['Int']['output']>;
  tsdesc?: Maybe<Scalars['String']['output']>;
};

export type DohSurgeryCode = {
  __typename?: 'DohSurgeryCode';
  altpcode?: Maybe<Scalars['String']['output']>;
  altpdesc?: Maybe<Scalars['String']['output']>;
  costcenter?: Maybe<Scalars['String']['output']>;
  datemod?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  optycode?: Maybe<Scalars['String']['output']>;
  prdetsec?: Maybe<Scalars['String']['output']>;
  prextyp?: Maybe<Scalars['String']['output']>;
  priden?: Maybe<Scalars['String']['output']>;
  prmapto?: Maybe<Scalars['String']['output']>;
  proccode?: Maybe<Scalars['String']['output']>;
  procdesc?: Maybe<Scalars['String']['output']>;
  procrem?: Maybe<Scalars['String']['output']>;
  procreslt?: Maybe<Scalars['String']['output']>;
  procstat?: Maybe<Scalars['String']['output']>;
  procuval?: Maybe<Scalars['String']['output']>;
  protcode?: Maybe<Scalars['String']['output']>;
  prregn?: Maybe<Scalars['String']['output']>;
  prspeco?: Maybe<Scalars['String']['output']>;
  prvfa?: Maybe<Scalars['String']['output']>;
  restemplate?: Maybe<Scalars['String']['output']>;
  rvu?: Maybe<Scalars['String']['output']>;
  updsw?: Maybe<Scalars['String']['output']>;
};

export type DohTestingDetailsDTo = {
  __typename?: 'DohTestingDetailsDTo';
  code?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  groupCode?: Maybe<Scalars['String']['output']>;
  number?: Maybe<Scalars['Int']['output']>;
};

export type DohTestingDto = {
  __typename?: 'DohTestingDto';
  imaging?: Maybe<Array<Maybe<DohTestingDetailsDTo>>>;
  laboratoryAndDiagnostic?: Maybe<Array<Maybe<DohTestingDetailsDTo>>>;
};

export type EclaimsCaseRef = {
  __typename?: 'EclaimsCaseRef';
  cf4Details?: Maybe<Scalars['String']['output']>;
  cf4Id?: Maybe<Scalars['UUID']['output']>;
  claimsDetails?: Maybe<Scalars['String']['output']>;
  claimsId?: Maybe<Scalars['UUID']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  eligibility?: Maybe<Scalars['UUID']['output']>;
  eligibilityDetails?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  ptCase?: Maybe<Case>;
  referenceId?: Maybe<Scalars['String']['output']>;
};

export type EclaimsIntegrationAccount = {
  __typename?: 'EclaimsIntegrationAccount';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  employee?: Maybe<Employee>;
  id?: Maybe<Scalars['UUID']['output']>;
  integration?: Maybe<EclaimsIntegrationSetting>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  password?: Maybe<Scalars['String']['output']>;
  username?: Maybe<Scalars['String']['output']>;
};

export type EclaimsIntegrationSetting = {
  __typename?: 'EclaimsIntegrationSetting';
  clientHost?: Maybe<Scalars['String']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  host?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  provider?: Maybe<Scalars['String']['output']>;
};

export type EducationalBackground = {
  __typename?: 'EducationalBackground';
  degreeCourse?: Maybe<Scalars['String']['output']>;
  highestEducation?: Maybe<Scalars['String']['output']>;
  school?: Maybe<Scalars['String']['output']>;
  yearGraduated?: Maybe<Scalars['Int']['output']>;
};

export type EducationalBackgroundInput = {
  degreeCourse?: InputMaybe<Scalars['String']['input']>;
  highestEducation?: InputMaybe<Scalars['String']['input']>;
  school?: InputMaybe<Scalars['String']['input']>;
  yearGraduated?: InputMaybe<Scalars['Int']['input']>;
};

export type EducationalBackgroundList = {
  __typename?: 'EducationalBackgroundList';
  educationalBackgrounds?: Maybe<Array<Maybe<EducationalBackground>>>;
};

export type EducationalBackgroundListInput = {
  educationalBackgrounds?: InputMaybe<Array<InputMaybe<EducationalBackgroundInput>>>;
};

export type EmergencyVisitsDto = {
  __typename?: 'EmergencyVisitsDto';
  discharge_disposition?: Maybe<Scalars['String']['output']>;
  registry_type?: Maybe<Scalars['String']['output']>;
  total?: Maybe<Scalars['Int']['output']>;
};

export type Employee = {
  __typename?: 'Employee';
  address?: Maybe<Scalars['String']['output']>;
  address2?: Maybe<Scalars['String']['output']>;
  bankAccntName?: Maybe<Scalars['String']['output']>;
  bankAccountName?: Maybe<Scalars['String']['output']>;
  bankAccountNo?: Maybe<Scalars['String']['output']>;
  bankAcnntNo?: Maybe<Scalars['String']['output']>;
  barangay?: Maybe<Scalars['String']['output']>;
  basicSalary?: Maybe<Scalars['BigDecimal']['output']>;
  biometricNo?: Maybe<Scalars['Int']['output']>;
  birthplace?: Maybe<Scalars['String']['output']>;
  bloodType?: Maybe<Scalars['String']['output']>;
  careProvider?: Maybe<Scalars['String']['output']>;
  cityMunicipality?: Maybe<Scalars['String']['output']>;
  civilStatus?: Maybe<Scalars['String']['output']>;
  contributionPagIbig?: Maybe<Scalars['Float']['output']>;
  country?: Maybe<Scalars['String']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  department?: Maybe<Department>;
  departmentOfDuty?: Maybe<Department>;
  dob?: Maybe<Scalars['LocalDateTime']['output']>;
  educationalBackgroundList?: Maybe<EducationalBackgroundList>;
  emailAddress?: Maybe<Scalars['String']['output']>;
  emergencyContactAddress?: Maybe<Scalars['String']['output']>;
  emergencyContactName?: Maybe<Scalars['String']['output']>;
  emergencyContactNo?: Maybe<Scalars['String']['output']>;
  emergencyContactRelationship?: Maybe<Scalars['String']['output']>;
  employeeAllowance?: Maybe<Array<Maybe<EmployeeAllowance>>>;
  employeeCelNo?: Maybe<Scalars['String']['output']>;
  employeeId?: Maybe<Scalars['String']['output']>;
  employeeNo?: Maybe<Scalars['String']['output']>;
  employeeSchedule?: Maybe<Array<Maybe<EmployeeSchedule>>>;
  employeeTelNo?: Maybe<Scalars['String']['output']>;
  employeeType?: Maybe<Scalars['String']['output']>;
  excludePayroll?: Maybe<Scalars['Boolean']['output']>;
  expandedVatRate?: Maybe<Scalars['BigDecimal']['output']>;
  firstName?: Maybe<Scalars['String']['output']>;
  fullInitialName?: Maybe<Scalars['String']['output']>;
  fullName?: Maybe<Scalars['String']['output']>;
  fullnameMiddleInitialWithTitle?: Maybe<Scalars['String']['output']>;
  fullnameWithTitle?: Maybe<Scalars['String']['output']>;
  gender?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  isActive?: Maybe<Scalars['Boolean']['output']>;
  isAllowedCoManage?: Maybe<Scalars['Boolean']['output']>;
  isSpecialtyBoardCertified?: Maybe<Scalars['Boolean']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  lastName?: Maybe<Scalars['String']['output']>;
  middleName?: Maybe<Scalars['String']['output']>;
  nameSuffix?: Maybe<Scalars['String']['output']>;
  nationality?: Maybe<Scalars['String']['output']>;
  notificationType?: Maybe<Scalars['String']['output']>;
  otherDeductions?: Maybe<Array<Maybe<OtherDeduction>>>;
  pagIbigId?: Maybe<Scalars['String']['output']>;
  payFreq?: Maybe<Scalars['String']['output']>;
  pfRateDefault?: Maybe<Scalars['BigDecimal']['output']>;
  pfVatRate?: Maybe<Scalars['BigDecimal']['output']>;
  phicExpiryDate?: Maybe<Scalars['Instant']['output']>;
  phicGroup?: Maybe<Scalars['String']['output']>;
  phicNo?: Maybe<Scalars['String']['output']>;
  philhealthNo?: Maybe<Scalars['String']['output']>;
  pmmcNo?: Maybe<Scalars['String']['output']>;
  position?: Maybe<Scalars['UUID']['output']>;
  positionCode?: Maybe<Scalars['Int']['output']>;
  positionCodeOthers?: Maybe<Scalars['Int']['output']>;
  positionDesignation?: Maybe<Scalars['String']['output']>;
  positionType?: Maybe<Scalars['String']['output']>;
  prcExpiryDate?: Maybe<Scalars['Instant']['output']>;
  prcLicenseNo?: Maybe<Scalars['String']['output']>;
  prcLicenseType?: Maybe<Scalars['String']['output']>;
  professionDesignation?: Maybe<Scalars['String']['output']>;
  ptrNo?: Maybe<Scalars['String']['output']>;
  rfVat?: Maybe<Scalars['BigDecimal']['output']>;
  s2No?: Maybe<Scalars['String']['output']>;
  scheduleType?: Maybe<Scalars['String']['output']>;
  serviceClass?: Maybe<Scalars['String']['output']>;
  serviceType?: Maybe<Scalars['String']['output']>;
  shortName?: Maybe<Scalars['String']['output']>;
  signature1?: Maybe<Scalars['String']['output']>;
  signature2?: Maybe<Scalars['String']['output']>;
  signature3?: Maybe<Scalars['String']['output']>;
  specialization?: Maybe<Scalars['String']['output']>;
  sssNo?: Maybe<Scalars['String']['output']>;
  stateProvince?: Maybe<Scalars['String']['output']>;
  supplierId?: Maybe<Scalars['UUID']['output']>;
  tinNo?: Maybe<Scalars['String']['output']>;
  titleInitials?: Maybe<Scalars['String']['output']>;
  totalAllowance?: Maybe<Scalars['BigDecimal']['output']>;
  user?: Maybe<User>;
  vatable?: Maybe<Scalars['Boolean']['output']>;
  witholdTaxRate?: Maybe<Scalars['BigDecimal']['output']>;
  wtxDefault?: Maybe<Scalars['BigDecimal']['output']>;
  zipCode?: Maybe<Scalars['String']['output']>;
};

export type EmployeeAccumulatedAttendanceDto = {
  __typename?: 'EmployeeAccumulatedAttendanceDto';
  countAbsent?: Maybe<Scalars['Long']['output']>;
  countDoubleHoliday?: Maybe<Scalars['Long']['output']>;
  countDoubleHolidayAndRestDay?: Maybe<Scalars['Long']['output']>;
  countDoubleHolidayAndRestDayNSD?: Maybe<Scalars['Long']['output']>;
  countDoubleHolidayAndRestDayOvertime?: Maybe<Scalars['Long']['output']>;
  countDoubleHolidayNSD?: Maybe<Scalars['Long']['output']>;
  countDoubleHolidayOIC?: Maybe<Scalars['Long']['output']>;
  countDoubleHolidayOICNSD?: Maybe<Scalars['Long']['output']>;
  countDoubleHolidayOICOvertime?: Maybe<Scalars['Long']['output']>;
  countDoubleHolidayOvertime?: Maybe<Scalars['Long']['output']>;
  countLate?: Maybe<Scalars['Long']['output']>;
  countOICOvertime?: Maybe<Scalars['Long']['output']>;
  countOvertime?: Maybe<Scalars['Long']['output']>;
  countRegularHoliday?: Maybe<Scalars['Long']['output']>;
  countRegularHolidayAndRestDay?: Maybe<Scalars['Long']['output']>;
  countRegularHolidayAndRestDayNSD?: Maybe<Scalars['Long']['output']>;
  countRegularHolidayAndRestDayOvertime?: Maybe<Scalars['Long']['output']>;
  countRegularHolidayNSD?: Maybe<Scalars['Long']['output']>;
  countRegularHolidayOIC?: Maybe<Scalars['Long']['output']>;
  countRegularHolidayOICNSD?: Maybe<Scalars['Long']['output']>;
  countRegularHolidayOICOvertime?: Maybe<Scalars['Long']['output']>;
  countRegularHolidayOvertime?: Maybe<Scalars['Long']['output']>;
  countRestDay?: Maybe<Scalars['Long']['output']>;
  countRestDayNSD?: Maybe<Scalars['Long']['output']>;
  countRestDayWorked?: Maybe<Scalars['Long']['output']>;
  countRestOvertime?: Maybe<Scalars['Long']['output']>;
  countSpecialHoliday?: Maybe<Scalars['Long']['output']>;
  countSpecialHolidayAndRestDay?: Maybe<Scalars['Long']['output']>;
  countSpecialHolidayAndRestDayNSD?: Maybe<Scalars['Long']['output']>;
  countSpecialHolidayAndRestDayOvertime?: Maybe<Scalars['Long']['output']>;
  countSpecialHolidayNSD?: Maybe<Scalars['Long']['output']>;
  countSpecialHolidayOIC?: Maybe<Scalars['Long']['output']>;
  countSpecialHolidayOICNSD?: Maybe<Scalars['Long']['output']>;
  countSpecialHolidayOICOvertime?: Maybe<Scalars['Long']['output']>;
  countSpecialHolidayOvertime?: Maybe<Scalars['Long']['output']>;
  countUndertime?: Maybe<Scalars['Long']['output']>;
  countWorked?: Maybe<Scalars['Long']['output']>;
  countWorkedNSD?: Maybe<Scalars['Long']['output']>;
  countWorkedOIC?: Maybe<Scalars['Long']['output']>;
  countWorkedOICNSD?: Maybe<Scalars['Long']['output']>;
  date?: Maybe<Scalars['Instant']['output']>;
  hoursAbsent?: Maybe<Scalars['BigDecimal']['output']>;
  hoursDoubleHoliday?: Maybe<Scalars['BigDecimal']['output']>;
  hoursDoubleHolidayAndRestDay?: Maybe<Scalars['BigDecimal']['output']>;
  hoursDoubleHolidayAndRestDayNSD?: Maybe<Scalars['BigDecimal']['output']>;
  hoursDoubleHolidayAndRestDayOvertime?: Maybe<Scalars['BigDecimal']['output']>;
  hoursDoubleHolidayNSD?: Maybe<Scalars['BigDecimal']['output']>;
  hoursDoubleHolidayOIC?: Maybe<Scalars['BigDecimal']['output']>;
  hoursDoubleHolidayOICNSD?: Maybe<Scalars['BigDecimal']['output']>;
  hoursDoubleHolidayOICOvertime?: Maybe<Scalars['BigDecimal']['output']>;
  hoursDoubleHolidayOvertime?: Maybe<Scalars['BigDecimal']['output']>;
  hoursNightDifferential?: Maybe<Scalars['BigDecimal']['output']>;
  hoursNightDifferentialOvertime?: Maybe<Scalars['BigDecimal']['output']>;
  hoursRegularHoliday?: Maybe<Scalars['BigDecimal']['output']>;
  hoursRegularHolidayAndRestDay?: Maybe<Scalars['BigDecimal']['output']>;
  hoursRegularHolidayAndRestDayNSD?: Maybe<Scalars['BigDecimal']['output']>;
  hoursRegularHolidayAndRestDayOvertime?: Maybe<Scalars['BigDecimal']['output']>;
  hoursRegularHolidayNSD?: Maybe<Scalars['BigDecimal']['output']>;
  hoursRegularHolidayOIC?: Maybe<Scalars['BigDecimal']['output']>;
  hoursRegularHolidayOICNSD?: Maybe<Scalars['BigDecimal']['output']>;
  hoursRegularHolidayOICOvertime?: Maybe<Scalars['BigDecimal']['output']>;
  hoursRegularHolidayOvertime?: Maybe<Scalars['BigDecimal']['output']>;
  hoursRegularOICOvertime?: Maybe<Scalars['BigDecimal']['output']>;
  hoursRegularOvertime?: Maybe<Scalars['BigDecimal']['output']>;
  hoursRestDay?: Maybe<Scalars['BigDecimal']['output']>;
  hoursRestDayNSD?: Maybe<Scalars['BigDecimal']['output']>;
  hoursRestOvertime?: Maybe<Scalars['BigDecimal']['output']>;
  hoursSpecialHoliday?: Maybe<Scalars['BigDecimal']['output']>;
  hoursSpecialHolidayAndRestDay?: Maybe<Scalars['BigDecimal']['output']>;
  hoursSpecialHolidayAndRestDayNSD?: Maybe<Scalars['BigDecimal']['output']>;
  hoursSpecialHolidayAndRestDayOvertime?: Maybe<Scalars['BigDecimal']['output']>;
  hoursSpecialHolidayNSD?: Maybe<Scalars['BigDecimal']['output']>;
  hoursSpecialHolidayOIC?: Maybe<Scalars['BigDecimal']['output']>;
  hoursSpecialHolidayOICNSD?: Maybe<Scalars['BigDecimal']['output']>;
  hoursSpecialHolidayOICOvertime?: Maybe<Scalars['BigDecimal']['output']>;
  hoursSpecialHolidayOvertime?: Maybe<Scalars['BigDecimal']['output']>;
  hoursTotalDoubleHoliday?: Maybe<Scalars['BigDecimal']['output']>;
  hoursTotalDoubleHolidayAndRestDay?: Maybe<Scalars['BigDecimal']['output']>;
  hoursTotalNSD?: Maybe<Scalars['BigDecimal']['output']>;
  hoursTotalRegularHoliday?: Maybe<Scalars['BigDecimal']['output']>;
  hoursTotalRegularHolidayAndRestDay?: Maybe<Scalars['BigDecimal']['output']>;
  hoursTotalRestDay?: Maybe<Scalars['BigDecimal']['output']>;
  hoursTotalSpecialHoliday?: Maybe<Scalars['BigDecimal']['output']>;
  hoursTotalSpecialHolidayAndRestDay?: Maybe<Scalars['BigDecimal']['output']>;
  hoursTotalWorked?: Maybe<Scalars['BigDecimal']['output']>;
  hoursWorkedNSD?: Maybe<Scalars['BigDecimal']['output']>;
  hoursWorkedOICNSD?: Maybe<Scalars['BigDecimal']['output']>;
  inTime?: Maybe<Scalars['Instant']['output']>;
  isAbsentOnly?: Maybe<Scalars['Boolean']['output']>;
  isEmpty?: Maybe<Scalars['Boolean']['output']>;
  isError: Scalars['Boolean']['output'];
  isLeave?: Maybe<Scalars['Boolean']['output']>;
  isOvertimeOnly?: Maybe<Scalars['Boolean']['output']>;
  isRestDay?: Maybe<Scalars['Boolean']['output']>;
  isRestDayOnly?: Maybe<Scalars['Boolean']['output']>;
  late?: Maybe<Scalars['BigDecimal']['output']>;
  message?: Maybe<Scalars['String']['output']>;
  outTime?: Maybe<Scalars['Instant']['output']>;
  scheduleEnd?: Maybe<Scalars['Instant']['output']>;
  scheduleStart?: Maybe<Scalars['Instant']['output']>;
  scheduleTitle?: Maybe<Scalars['String']['output']>;
  totalOICHours?: Maybe<Scalars['BigDecimal']['output']>;
  totalOvertimeHours?: Maybe<Scalars['BigDecimal']['output']>;
  totalRestDayDutyHours?: Maybe<Scalars['BigDecimal']['output']>;
  totalWorkingHours?: Maybe<Scalars['BigDecimal']['output']>;
  undertime?: Maybe<Scalars['BigDecimal']['output']>;
  withNSD?: Maybe<Scalars['Boolean']['output']>;
  worked?: Maybe<Scalars['BigDecimal']['output']>;
  workedOIC?: Maybe<Scalars['BigDecimal']['output']>;
};

export type EmployeeAllowance = {
  __typename?: 'EmployeeAllowance';
  amount?: Maybe<Scalars['Float']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  employee?: Maybe<Employee>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  notes?: Maybe<Scalars['String']['output']>;
  taxable?: Maybe<Scalars['Boolean']['output']>;
};

export type EmployeeAllowanceInput = {
  amount?: InputMaybe<Scalars['Float']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  notes?: InputMaybe<Scalars['String']['input']>;
  taxable?: InputMaybe<Scalars['Boolean']['input']>;
};

export type EmployeeAttendance = {
  __typename?: 'EmployeeAttendance';
  additionalNote?: Maybe<Scalars['String']['output']>;
  attendance_time?: Maybe<Scalars['Instant']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  employee?: Maybe<Employee>;
  id?: Maybe<Scalars['UUID']['output']>;
  isIgnored?: Maybe<Scalars['Boolean']['output']>;
  isManual?: Maybe<Scalars['Boolean']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  method?: Maybe<EmployeeAttendanceMethod>;
  originalType?: Maybe<Scalars['String']['output']>;
  original_attendance_time?: Maybe<Scalars['Instant']['output']>;
  source?: Maybe<Scalars['String']['output']>;
  type?: Maybe<Scalars['String']['output']>;
};

export enum EmployeeAttendanceMethod {
  Finger = 'FINGER',
  Manual = 'MANUAL'
}

export type EmployeeBiometricConfig = {
  __typename?: 'EmployeeBiometricConfig';
  biometricDevice?: Maybe<BiometricDevice>;
  biometricNo?: Maybe<Scalars['Int']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  employee?: Maybe<Employee>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
};

export type EmployeeDepartmentSalaryDto = {
  __typename?: 'EmployeeDepartmentSalaryDto';
  basicSalary?: Maybe<Scalars['BigDecimal']['output']>;
  contributionPagIbig?: Maybe<Scalars['Float']['output']>;
  department?: Maybe<Scalars['String']['output']>;
  employeeNo?: Maybe<Scalars['String']['output']>;
  fullName?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  payFreq?: Maybe<Scalars['String']['output']>;
  scheduleType?: Maybe<Scalars['String']['output']>;
};

export type EmployeeDto = {
  __typename?: 'EmployeeDto';
  DEPARTMENT_ALIAS?: Maybe<Scalars['String']['output']>;
  DEPARTMENT_NAME_ALIAS?: Maybe<Scalars['String']['output']>;
  DEPARTMENT_OF_DUTY_ALIAS?: Maybe<Scalars['String']['output']>;
  DEPARTMENT_OF_DUTY_NAME_ALIAS?: Maybe<Scalars['String']['output']>;
  FULL_NAME_ALIAS?: Maybe<Scalars['String']['output']>;
  ID_ALIAS?: Maybe<Scalars['String']['output']>;
  department?: Maybe<Scalars['UUID']['output']>;
  departmentName?: Maybe<Scalars['String']['output']>;
  departmentOfDuty?: Maybe<Scalars['UUID']['output']>;
  departmentOfDutyName?: Maybe<Scalars['String']['output']>;
  employeeSchedule?: Maybe<Scalars['LinkedHashMap_String_EmployeeScheduleDtoScalar']['output']>;
  fullName?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  overtimeSchedule?: Maybe<Scalars['LinkedHashMap_String_EmployeeScheduleDtoScalar']['output']>;
  schedule?: Maybe<Array<Maybe<DepartmentSchedule>>>;
};

export type EmployeeInput = {
  address?: InputMaybe<Scalars['String']['input']>;
  address2?: InputMaybe<Scalars['String']['input']>;
  bankAccntName?: InputMaybe<Scalars['String']['input']>;
  bankAccountName?: InputMaybe<Scalars['String']['input']>;
  bankAccountNo?: InputMaybe<Scalars['String']['input']>;
  bankAcnntNo?: InputMaybe<Scalars['String']['input']>;
  barangay?: InputMaybe<Scalars['String']['input']>;
  basicSalary?: InputMaybe<Scalars['BigDecimal']['input']>;
  biometricNo?: InputMaybe<Scalars['Int']['input']>;
  birthplace?: InputMaybe<Scalars['String']['input']>;
  bloodType?: InputMaybe<Scalars['String']['input']>;
  careProvider?: InputMaybe<Scalars['String']['input']>;
  cityMunicipality?: InputMaybe<Scalars['String']['input']>;
  civilStatus?: InputMaybe<Scalars['String']['input']>;
  contributionPagIbig?: InputMaybe<Scalars['Float']['input']>;
  country?: InputMaybe<Scalars['String']['input']>;
  department?: InputMaybe<DepartmentInput>;
  departmentOfDuty?: InputMaybe<DepartmentInput>;
  dob?: InputMaybe<Scalars['LocalDateTime']['input']>;
  educationalBackgroundList?: InputMaybe<EducationalBackgroundListInput>;
  emailAddress?: InputMaybe<Scalars['String']['input']>;
  emergencyContactAddress?: InputMaybe<Scalars['String']['input']>;
  emergencyContactName?: InputMaybe<Scalars['String']['input']>;
  emergencyContactNo?: InputMaybe<Scalars['String']['input']>;
  emergencyContactRelationship?: InputMaybe<Scalars['String']['input']>;
  employeeAllowance?: InputMaybe<Array<InputMaybe<EmployeeAllowanceInput>>>;
  employeeCelNo?: InputMaybe<Scalars['String']['input']>;
  employeeId?: InputMaybe<Scalars['String']['input']>;
  employeeNo?: InputMaybe<Scalars['String']['input']>;
  employeeSchedule?: InputMaybe<Array<InputMaybe<EmployeeScheduleInput>>>;
  employeeTelNo?: InputMaybe<Scalars['String']['input']>;
  employeeType?: InputMaybe<Scalars['String']['input']>;
  excludePayroll?: InputMaybe<Scalars['Boolean']['input']>;
  expandedVatRate?: InputMaybe<Scalars['BigDecimal']['input']>;
  firstName?: InputMaybe<Scalars['String']['input']>;
  fullInitialName?: InputMaybe<Scalars['String']['input']>;
  fullName?: InputMaybe<Scalars['String']['input']>;
  fullnameMiddleInitialWithTitle?: InputMaybe<Scalars['String']['input']>;
  fullnameWithTitle?: InputMaybe<Scalars['String']['input']>;
  gender?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  isActive?: InputMaybe<Scalars['Boolean']['input']>;
  isAllowedCoManage?: InputMaybe<Scalars['Boolean']['input']>;
  isSpecialtyBoardCertified?: InputMaybe<Scalars['Boolean']['input']>;
  lastName?: InputMaybe<Scalars['String']['input']>;
  middleName?: InputMaybe<Scalars['String']['input']>;
  nameSuffix?: InputMaybe<Scalars['String']['input']>;
  nationality?: InputMaybe<Scalars['String']['input']>;
  notificationType?: InputMaybe<Scalars['String']['input']>;
  otherDeductions?: InputMaybe<Array<InputMaybe<OtherDeductionInput>>>;
  pagIbigId?: InputMaybe<Scalars['String']['input']>;
  payFreq?: InputMaybe<Scalars['String']['input']>;
  pfVatRate?: InputMaybe<Scalars['BigDecimal']['input']>;
  phicExpiryDate?: InputMaybe<Scalars['Instant']['input']>;
  phicGroup?: InputMaybe<Scalars['String']['input']>;
  phicNo?: InputMaybe<Scalars['String']['input']>;
  philhealthNo?: InputMaybe<Scalars['String']['input']>;
  pmmcNo?: InputMaybe<Scalars['String']['input']>;
  position?: InputMaybe<Scalars['UUID']['input']>;
  positionCode?: InputMaybe<Scalars['Int']['input']>;
  positionCodeOthers?: InputMaybe<Scalars['Int']['input']>;
  positionDesignation?: InputMaybe<Scalars['String']['input']>;
  positionType?: InputMaybe<Scalars['String']['input']>;
  prcExpiryDate?: InputMaybe<Scalars['Instant']['input']>;
  prcLicenseNo?: InputMaybe<Scalars['String']['input']>;
  prcLicenseType?: InputMaybe<Scalars['String']['input']>;
  professionDesignation?: InputMaybe<Scalars['String']['input']>;
  ptrNo?: InputMaybe<Scalars['String']['input']>;
  rfVat?: InputMaybe<Scalars['BigDecimal']['input']>;
  s2No?: InputMaybe<Scalars['String']['input']>;
  scheduleType?: InputMaybe<Scalars['String']['input']>;
  serviceClass?: InputMaybe<Scalars['String']['input']>;
  serviceType?: InputMaybe<Scalars['String']['input']>;
  shortName?: InputMaybe<Scalars['String']['input']>;
  signature1?: InputMaybe<Scalars['String']['input']>;
  signature2?: InputMaybe<Scalars['String']['input']>;
  signature3?: InputMaybe<Scalars['String']['input']>;
  specialization?: InputMaybe<Scalars['String']['input']>;
  sssNo?: InputMaybe<Scalars['String']['input']>;
  stateProvince?: InputMaybe<Scalars['String']['input']>;
  supplierId?: InputMaybe<Scalars['UUID']['input']>;
  tinNo?: InputMaybe<Scalars['String']['input']>;
  titleInitials?: InputMaybe<Scalars['String']['input']>;
  totalAllowance?: InputMaybe<Scalars['BigDecimal']['input']>;
  user?: InputMaybe<UserInput>;
  vatable?: InputMaybe<Scalars['Boolean']['input']>;
  witholdTaxRate?: InputMaybe<Scalars['BigDecimal']['input']>;
  zipCode?: InputMaybe<Scalars['String']['input']>;
};

export type EmployeeLoan = {
  __typename?: 'EmployeeLoan';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  employee?: Maybe<Employee>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  loanAmount?: Maybe<Scalars['BigDecimal']['output']>;
  loanMonthlyPayable?: Maybe<Scalars['BigDecimal']['output']>;
  loanTotalPayable?: Maybe<Scalars['BigDecimal']['output']>;
  loanType?: Maybe<Scalars['String']['output']>;
  note?: Maybe<Scalars['String']['output']>;
  status?: Maybe<Scalars['String']['output']>;
};

export type EmployeeRequest = {
  __typename?: 'EmployeeRequest';
  approvals?: Maybe<Array<Maybe<EmployeeRequestApproval>>>;
  approvedDate?: Maybe<Scalars['Instant']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  dates?: Maybe<Array<Maybe<SelectedDate>>>;
  datesType?: Maybe<Scalars['String']['output']>;
  department?: Maybe<Department>;
  hrApprovedBy?: Maybe<Employee>;
  hrApprovedDate?: Maybe<Scalars['Instant']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  reason: Scalars['String']['output'];
  remarks?: Maybe<Scalars['String']['output']>;
  requestedBy?: Maybe<Employee>;
  requestedDate?: Maybe<Scalars['Instant']['output']>;
  revertedBy?: Maybe<Employee>;
  revertedDate?: Maybe<Scalars['Instant']['output']>;
  schedules?: Maybe<Array<Maybe<EmployeeSchedule>>>;
  status?: Maybe<EmployeeRequestStatus>;
  type?: Maybe<EmployeeRequestType>;
  withPay?: Maybe<Scalars['Boolean']['output']>;
};

export type EmployeeRequestApproval = {
  __typename?: 'EmployeeRequestApproval';
  approvedDate?: Maybe<Scalars['Instant']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  employee?: Maybe<Employee>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  remarks?: Maybe<Scalars['String']['output']>;
  request?: Maybe<EmployeeRequest>;
  status?: Maybe<EmployeeRequestApprovalStatus>;
};

export type EmployeeRequestApprovalInput = {
  approvedDate?: InputMaybe<Scalars['Instant']['input']>;
  employee?: InputMaybe<EmployeeInput>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  remarks?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<EmployeeRequestApprovalStatus>;
};

export enum EmployeeRequestApprovalStatus {
  Approved = 'APPROVED',
  Pending = 'PENDING',
  Rejected = 'REJECTED'
}

export type EmployeeRequestInput = {
  approvals?: InputMaybe<Array<InputMaybe<EmployeeRequestApprovalInput>>>;
  approvedDate?: InputMaybe<Scalars['Instant']['input']>;
  dates?: InputMaybe<Array<InputMaybe<SelectedDateInput>>>;
  datesType?: InputMaybe<Scalars['String']['input']>;
  department?: InputMaybe<DepartmentInput>;
  hrApprovedBy?: InputMaybe<EmployeeInput>;
  hrApprovedDate?: InputMaybe<Scalars['Instant']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  reason: Scalars['String']['input'];
  remarks?: InputMaybe<Scalars['String']['input']>;
  requestedBy?: InputMaybe<EmployeeInput>;
  requestedDate?: InputMaybe<Scalars['Instant']['input']>;
  revertedBy?: InputMaybe<EmployeeInput>;
  revertedDate?: InputMaybe<Scalars['Instant']['input']>;
  schedules?: InputMaybe<Array<InputMaybe<EmployeeScheduleInput>>>;
  status?: InputMaybe<EmployeeRequestStatus>;
  type?: InputMaybe<EmployeeRequestType>;
  withPay?: InputMaybe<Scalars['Boolean']['input']>;
};

export enum EmployeeRequestStatus {
  Approved = 'APPROVED',
  Cancelled = 'CANCELLED',
  Draft = 'DRAFT',
  Pending = 'PENDING',
  PendingSupervisor = 'PENDING_SUPERVISOR',
  Rejected = 'REJECTED',
  RejectedSupervisor = 'REJECTED_SUPERVISOR',
  Reverted = 'REVERTED'
}

export enum EmployeeRequestType {
  Leave = 'LEAVE',
  Overtime = 'OVERTIME'
}

export type EmployeeSchedule = {
  __typename?: 'EmployeeSchedule';
  assignedDate?: Maybe<Scalars['Instant']['output']>;
  color?: Maybe<Scalars['String']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  dateTimeEnd?: Maybe<Scalars['String']['output']>;
  dateTimeEndRaw?: Maybe<Scalars['Instant']['output']>;
  dateTimeStart?: Maybe<Scalars['String']['output']>;
  dateTimeStartRaw?: Maybe<Scalars['Instant']['output']>;
  department?: Maybe<Department>;
  employee?: Maybe<Employee>;
  id?: Maybe<Scalars['UUID']['output']>;
  isCustom?: Maybe<Scalars['Boolean']['output']>;
  isLeave?: Maybe<Scalars['Boolean']['output']>;
  isMultiDay?: Maybe<Scalars['Boolean']['output']>;
  isOIC?: Maybe<Scalars['Boolean']['output']>;
  isOvertime?: Maybe<Scalars['Boolean']['output']>;
  isRestDay?: Maybe<Scalars['Boolean']['output']>;
  label?: Maybe<Scalars['String']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  locked?: Maybe<Scalars['Boolean']['output']>;
  mealBreakEnd?: Maybe<Scalars['Instant']['output']>;
  mealBreakStart?: Maybe<Scalars['Instant']['output']>;
  request?: Maybe<EmployeeRequest>;
  timeEnd?: Maybe<Scalars['String']['output']>;
  timeStart?: Maybe<Scalars['String']['output']>;
  title?: Maybe<Scalars['String']['output']>;
  withHoliday?: Maybe<Scalars['Boolean']['output']>;
  withNSD?: Maybe<Scalars['Boolean']['output']>;
  withPay?: Maybe<Scalars['Boolean']['output']>;
};

export type EmployeeScheduleDto = {
  __typename?: 'EmployeeScheduleDto';
  ASSIGNED_DATE_ALIAS?: Maybe<Scalars['String']['output']>;
  COLOR_ALIAS?: Maybe<Scalars['String']['output']>;
  DATE_TIME_END_ALIAS?: Maybe<Scalars['String']['output']>;
  DATE_TIME_END_RAW_ALIAS?: Maybe<Scalars['String']['output']>;
  DATE_TIME_START_ALIAS?: Maybe<Scalars['String']['output']>;
  DATE_TIME_START_RAW_ALIAS?: Maybe<Scalars['String']['output']>;
  DEPARTMENT_ALIAS?: Maybe<Scalars['String']['output']>;
  DEPARTMENT_NAME_ALIAS?: Maybe<Scalars['String']['output']>;
  ID_ALIAS?: Maybe<Scalars['String']['output']>;
  IS_CUSTOM_ALIAS?: Maybe<Scalars['String']['output']>;
  IS_LEAVE_ALIAS?: Maybe<Scalars['String']['output']>;
  IS_MULTI_DAY_ALIAS?: Maybe<Scalars['String']['output']>;
  IS_OIC_ALIAS?: Maybe<Scalars['String']['output']>;
  IS_OVERTIME_ALIAS?: Maybe<Scalars['String']['output']>;
  IS_REST_DAY_ALIAS?: Maybe<Scalars['String']['output']>;
  LABEL_ALIAS?: Maybe<Scalars['String']['output']>;
  LOCKED_ALIAS?: Maybe<Scalars['String']['output']>;
  MEAL_BREAK_END_ALIAS?: Maybe<Scalars['String']['output']>;
  MEAL_BREAK_START_ALIAS?: Maybe<Scalars['String']['output']>;
  REQUEST_ID_ALIAS?: Maybe<Scalars['String']['output']>;
  TIME_END_ALIAS?: Maybe<Scalars['String']['output']>;
  TIME_START_ALIAS?: Maybe<Scalars['String']['output']>;
  TITLE_ALIAS?: Maybe<Scalars['String']['output']>;
  WITH_HOLIDAY_ALIAS?: Maybe<Scalars['String']['output']>;
  WITH_NSD_ALIAS?: Maybe<Scalars['String']['output']>;
  WITH_PAY_ALIAS?: Maybe<Scalars['String']['output']>;
  assignedDate?: Maybe<Scalars['Instant']['output']>;
  color?: Maybe<Scalars['String']['output']>;
  dateTimeEnd?: Maybe<Scalars['String']['output']>;
  dateTimeEndRaw?: Maybe<Scalars['Instant']['output']>;
  dateTimeStart?: Maybe<Scalars['String']['output']>;
  dateTimeStartRaw?: Maybe<Scalars['Instant']['output']>;
  department?: Maybe<Scalars['UUID']['output']>;
  departmentName?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  isContinuation?: Maybe<Scalars['Boolean']['output']>;
  isCustom?: Maybe<Scalars['Boolean']['output']>;
  isLeave?: Maybe<Scalars['Boolean']['output']>;
  isMultiDay?: Maybe<Scalars['Boolean']['output']>;
  isOIC?: Maybe<Scalars['Boolean']['output']>;
  isOvertime?: Maybe<Scalars['Boolean']['output']>;
  isRestDay?: Maybe<Scalars['Boolean']['output']>;
  isStart?: Maybe<Scalars['Boolean']['output']>;
  label?: Maybe<Scalars['String']['output']>;
  locked?: Maybe<Scalars['String']['output']>;
  mealBreakEnd?: Maybe<Scalars['Instant']['output']>;
  mealBreakStart?: Maybe<Scalars['Instant']['output']>;
  requestId?: Maybe<Scalars['UUID']['output']>;
  timeEnd?: Maybe<Scalars['String']['output']>;
  timeStart?: Maybe<Scalars['String']['output']>;
  title?: Maybe<Scalars['String']['output']>;
  withHoliday?: Maybe<Scalars['Boolean']['output']>;
  withNSD?: Maybe<Scalars['Boolean']['output']>;
  withPay?: Maybe<Scalars['Boolean']['output']>;
};

export type EmployeeScheduleInput = {
  assignedDate?: InputMaybe<Scalars['Instant']['input']>;
  color?: InputMaybe<Scalars['String']['input']>;
  dateTimeEnd?: InputMaybe<Scalars['String']['input']>;
  dateTimeEndRaw?: InputMaybe<Scalars['Instant']['input']>;
  dateTimeStart?: InputMaybe<Scalars['String']['input']>;
  dateTimeStartRaw?: InputMaybe<Scalars['Instant']['input']>;
  department?: InputMaybe<DepartmentInput>;
  employee?: InputMaybe<EmployeeInput>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  isCustom?: InputMaybe<Scalars['Boolean']['input']>;
  isLeave?: InputMaybe<Scalars['Boolean']['input']>;
  isMultiDay?: InputMaybe<Scalars['Boolean']['input']>;
  isOIC?: InputMaybe<Scalars['Boolean']['input']>;
  isOvertime?: InputMaybe<Scalars['Boolean']['input']>;
  isRestDay?: InputMaybe<Scalars['Boolean']['input']>;
  label?: InputMaybe<Scalars['String']['input']>;
  locked?: InputMaybe<Scalars['Boolean']['input']>;
  mealBreakEnd?: InputMaybe<Scalars['Instant']['input']>;
  mealBreakStart?: InputMaybe<Scalars['Instant']['input']>;
  request?: InputMaybe<EmployeeRequestInput>;
  timeEnd?: InputMaybe<Scalars['String']['input']>;
  timeStart?: InputMaybe<Scalars['String']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
  withHoliday?: InputMaybe<Scalars['Boolean']['input']>;
  withNSD?: InputMaybe<Scalars['Boolean']['input']>;
  withPay?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ErConsultationDto = {
  __typename?: 'ErConsultationDto';
  icd10Cat?: Maybe<Scalars['String']['output']>;
  icdCode?: Maybe<Scalars['String']['output']>;
  longName?: Maybe<Scalars['String']['output']>;
  reportingYear?: Maybe<Scalars['Float']['output']>;
  total?: Maybe<Scalars['Float']['output']>;
};

export type ErdConsultation2Dto = {
  __typename?: 'ErdConsultation2Dto';
  description?: Maybe<Scalars['String']['output']>;
  icdCategory?: Maybe<Scalars['String']['output']>;
  icdCode?: Maybe<Scalars['String']['output']>;
  number?: Maybe<Scalars['Int']['output']>;
};

export type EventCalendar = {
  __typename?: 'EventCalendar';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  endDate?: Maybe<Scalars['Instant']['output']>;
  fixed?: Maybe<Scalars['String']['output']>;
  holidayType?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  startDate?: Maybe<Scalars['Instant']['output']>;
};

export type ExpenseTransaction = {
  __typename?: 'ExpenseTransaction';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  isReverse?: Maybe<Scalars['Boolean']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  remarks?: Maybe<Scalars['String']['output']>;
  source?: Maybe<Scalars['String']['output']>;
  status?: Maybe<Scalars['Boolean']['output']>;
  type?: Maybe<Scalars['String']['output']>;
};

export type ExpenseTransactionInput = {
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  isReverse?: InputMaybe<Scalars['Boolean']['input']>;
  remarks?: InputMaybe<Scalars['String']['input']>;
  source?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['Boolean']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};

export type Expenses = {
  __typename?: 'Expenses';
  expenses?: Maybe<ExpensesDoh>;
};

export type ExpensesDoh = {
  __typename?: 'ExpensesDOH';
  insert?: Maybe<Scalars['String']['output']>;
  report?: Maybe<DefaultDohResponseDetails>;
  update?: Maybe<Scalars['String']['output']>;
};

export type ExpensesDto = {
  __typename?: 'ExpensesDTO';
  response_code?: Maybe<Scalars['String']['output']>;
  response_datetime?: Maybe<Scalars['String']['output']>;
  response_desc?: Maybe<Scalars['String']['output']>;
  response_value?: Maybe<Expenses>;
};

export type FileAttachment = {
  __typename?: 'FileAttachment';
  created?: Maybe<Scalars['Instant']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  deleted?: Maybe<Scalars['Boolean']['output']>;
  desc?: Maybe<Scalars['String']['output']>;
  fileName?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  mimetype?: Maybe<Scalars['String']['output']>;
  patient?: Maybe<Patient>;
  patientCase?: Maybe<Case>;
  urlPath?: Maybe<Scalars['String']['output']>;
};

export type FinalAccumulatedLogs = {
  __typename?: 'FinalAccumulatedLogs';
  hoursAbsent?: Maybe<Scalars['BigDecimal']['output']>;
  hoursDoubleHoliday?: Maybe<Scalars['BigDecimal']['output']>;
  hoursDoubleHolidayAndRestDay?: Maybe<Scalars['BigDecimal']['output']>;
  hoursDoubleHolidayAndRestDayNSD?: Maybe<Scalars['BigDecimal']['output']>;
  hoursDoubleHolidayAndRestDayOvertime?: Maybe<Scalars['BigDecimal']['output']>;
  hoursDoubleHolidayNSD?: Maybe<Scalars['BigDecimal']['output']>;
  hoursDoubleHolidayOIC?: Maybe<Scalars['BigDecimal']['output']>;
  hoursDoubleHolidayOICNSD?: Maybe<Scalars['BigDecimal']['output']>;
  hoursDoubleHolidayOICOvertime?: Maybe<Scalars['BigDecimal']['output']>;
  hoursDoubleHolidayOvertime?: Maybe<Scalars['BigDecimal']['output']>;
  hoursRegularHoliday?: Maybe<Scalars['BigDecimal']['output']>;
  hoursRegularHolidayAndRestDay?: Maybe<Scalars['BigDecimal']['output']>;
  hoursRegularHolidayAndRestDayNSD?: Maybe<Scalars['BigDecimal']['output']>;
  hoursRegularHolidayAndRestDayOvertime?: Maybe<Scalars['BigDecimal']['output']>;
  hoursRegularHolidayNSD?: Maybe<Scalars['BigDecimal']['output']>;
  hoursRegularHolidayOIC?: Maybe<Scalars['BigDecimal']['output']>;
  hoursRegularHolidayOICNSD?: Maybe<Scalars['BigDecimal']['output']>;
  hoursRegularHolidayOICOvertime?: Maybe<Scalars['BigDecimal']['output']>;
  hoursRegularHolidayOvertime?: Maybe<Scalars['BigDecimal']['output']>;
  hoursRegularOICOvertime?: Maybe<Scalars['BigDecimal']['output']>;
  hoursRegularOvertime?: Maybe<Scalars['BigDecimal']['output']>;
  hoursRestDay?: Maybe<Scalars['BigDecimal']['output']>;
  hoursRestDayNSD?: Maybe<Scalars['BigDecimal']['output']>;
  hoursRestOvertime?: Maybe<Scalars['BigDecimal']['output']>;
  hoursSpecialHoliday?: Maybe<Scalars['BigDecimal']['output']>;
  hoursSpecialHolidayAndRestDay?: Maybe<Scalars['BigDecimal']['output']>;
  hoursSpecialHolidayAndRestDayNSD?: Maybe<Scalars['BigDecimal']['output']>;
  hoursSpecialHolidayAndRestDayOvertime?: Maybe<Scalars['BigDecimal']['output']>;
  hoursSpecialHolidayNSD?: Maybe<Scalars['BigDecimal']['output']>;
  hoursSpecialHolidayOIC?: Maybe<Scalars['BigDecimal']['output']>;
  hoursSpecialHolidayOICNSD?: Maybe<Scalars['BigDecimal']['output']>;
  hoursSpecialHolidayOICOvertime?: Maybe<Scalars['BigDecimal']['output']>;
  hoursSpecialHolidayOvertime?: Maybe<Scalars['BigDecimal']['output']>;
  hoursWorkedNSD?: Maybe<Scalars['BigDecimal']['output']>;
  hoursWorkedOICNSD?: Maybe<Scalars['BigDecimal']['output']>;
  late?: Maybe<Scalars['BigDecimal']['output']>;
  undertime?: Maybe<Scalars['BigDecimal']['output']>;
  worked?: Maybe<Scalars['BigDecimal']['output']>;
  workedOIC?: Maybe<Scalars['BigDecimal']['output']>;
};

export type FinancialReport = {
  __typename?: 'FinancialReport';
  canSelectDepartment?: Maybe<Scalars['Boolean']['output']>;
  code?: Maybe<Scalars['String']['output']>;
  comparePrevMonth?: Maybe<Scalars['Boolean']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  lineTypes?: Maybe<Array<Maybe<LineType>>>;
  periodic?: Maybe<Scalars['Boolean']['output']>;
  showAll?: Maybe<Scalars['Boolean']['output']>;
  showZeroAmount?: Maybe<Scalars['Boolean']['output']>;
  title?: Maybe<Scalars['String']['output']>;
};

export enum FinancialStatementType {
  BalanceSheet = 'BALANCE_SHEET',
  Income = 'INCOME'
}

export type Fiscal = {
  __typename?: 'Fiscal';
  active?: Maybe<Scalars['Boolean']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  fiscalId?: Maybe<Scalars['String']['output']>;
  fromDate?: Maybe<Scalars['LocalDate']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  lockApril?: Maybe<Scalars['Boolean']['output']>;
  lockAugust?: Maybe<Scalars['Boolean']['output']>;
  lockDecember?: Maybe<Scalars['Boolean']['output']>;
  lockFebruary?: Maybe<Scalars['Boolean']['output']>;
  lockJanuary?: Maybe<Scalars['Boolean']['output']>;
  lockJuly?: Maybe<Scalars['Boolean']['output']>;
  lockJune?: Maybe<Scalars['Boolean']['output']>;
  lockMarch?: Maybe<Scalars['Boolean']['output']>;
  lockMay?: Maybe<Scalars['Boolean']['output']>;
  lockNovember?: Maybe<Scalars['Boolean']['output']>;
  lockOctober?: Maybe<Scalars['Boolean']['output']>;
  lockSeptember?: Maybe<Scalars['Boolean']['output']>;
  remarks?: Maybe<Scalars['String']['output']>;
  toDate?: Maybe<Scalars['LocalDate']['output']>;
};

export type FiscalInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  fiscalId?: InputMaybe<Scalars['String']['input']>;
  fromDate?: InputMaybe<Scalars['LocalDate']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  lockApril?: InputMaybe<Scalars['Boolean']['input']>;
  lockAugust?: InputMaybe<Scalars['Boolean']['input']>;
  lockDecember?: InputMaybe<Scalars['Boolean']['input']>;
  lockFebruary?: InputMaybe<Scalars['Boolean']['input']>;
  lockJanuary?: InputMaybe<Scalars['Boolean']['input']>;
  lockJuly?: InputMaybe<Scalars['Boolean']['input']>;
  lockJune?: InputMaybe<Scalars['Boolean']['input']>;
  lockMarch?: InputMaybe<Scalars['Boolean']['input']>;
  lockMay?: InputMaybe<Scalars['Boolean']['input']>;
  lockNovember?: InputMaybe<Scalars['Boolean']['input']>;
  lockOctober?: InputMaybe<Scalars['Boolean']['input']>;
  lockSeptember?: InputMaybe<Scalars['Boolean']['input']>;
  remarks?: InputMaybe<Scalars['String']['input']>;
  toDate?: InputMaybe<Scalars['LocalDate']['input']>;
};

export type FixedAssetCategory = {
  __typename?: 'FixedAssetCategory';
  categoryCode?: Maybe<Scalars['String']['output']>;
  categoryDescription?: Maybe<Scalars['String']['output']>;
  code?: Maybe<Scalars['String']['output']>;
  config?: Maybe<CoaConfig>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  department?: Maybe<Array<Maybe<Scalars['UUID']['output']>>>;
  description?: Maybe<Scalars['String']['output']>;
  domain?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  isActive?: Maybe<Scalars['Boolean']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
};

export type FixedAssetCategoryInput = {
  categoryCode?: InputMaybe<Scalars['String']['input']>;
  categoryDescription?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  isActive?: InputMaybe<Scalars['Boolean']['input']>;
};

export type FixedAssetDepreciation = {
  __typename?: 'FixedAssetDepreciation';
  cost?: Maybe<Scalars['Float']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  depreciationDateStart?: Maybe<Scalars['Instant']['output']>;
  estSalvageValue?: Maybe<Scalars['Float']['output']>;
  estUsefulLife?: Maybe<Scalars['String']['output']>;
  fixedAssetItem?: Maybe<FixedAssetItem>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  unitOfTime?: Maybe<Scalars['String']['output']>;
};

export type FixedAssetItem = {
  __typename?: 'FixedAssetItem';
  accountingCategory?: Maybe<AccountingCategory>;
  category?: Maybe<Scalars['UUID']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  department?: Maybe<Department>;
  depreciable?: Maybe<Scalars['Boolean']['output']>;
  depreciationDateStart?: Maybe<Scalars['Instant']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  fixedAssets?: Maybe<FixedAssets>;
  id?: Maybe<Scalars['UUID']['output']>;
  item?: Maybe<Item>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  latestCost?: Maybe<Scalars['BigDecimal']['output']>;
  latestEstSalvageValue?: Maybe<Scalars['BigDecimal']['output']>;
  latestEstUsefulLife?: Maybe<Scalars['String']['output']>;
  notes?: Maybe<Scalars['String']['output']>;
  serialNo?: Maybe<Scalars['String']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  unitOfTime?: Maybe<Scalars['String']['output']>;
};

export type FixedAssetTransfer = {
  __typename?: 'FixedAssetTransfer';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  destinationDept?: Maybe<Department>;
  fixedAssetItem?: Maybe<FixedAssetItem>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  sourceDept?: Maybe<Department>;
};

export type FixedAssets = {
  __typename?: 'FixedAssets';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  receivingReport?: Maybe<ReceivingReport>;
};

export type FlowRate = {
  __typename?: 'FlowRate';
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  literPerMinute?: Maybe<Scalars['BigDecimal']['output']>;
  pricePerHour?: Maybe<Scalars['BigDecimal']['output']>;
};

export type GenInfoBedCapacity = {
  __typename?: 'GenInfoBedCapacity';
  genInfoBedCapacity?: Maybe<GenInfoBedCapacityReport>;
};

export type GenInfoBedCapacityReport = {
  __typename?: 'GenInfoBedCapacityReport';
  insert?: Maybe<Scalars['String']['output']>;
  report?: Maybe<DefaultDohResponseDetails>;
  update?: Maybe<Scalars['String']['output']>;
};

export type GenInfoBedCapacityResponseDto = {
  __typename?: 'GenInfoBedCapacityResponseDto';
  response_code?: Maybe<Scalars['String']['output']>;
  response_datetime?: Maybe<Scalars['String']['output']>;
  response_desc?: Maybe<Scalars['String']['output']>;
  response_value?: Maybe<GenInfoBedCapacity>;
};

export type GenInfoClassificationDoh = {
  __typename?: 'GenInfoClassificationDOH';
  insert?: Maybe<Scalars['String']['output']>;
  report?: Maybe<DefaultDohResponseDetails>;
  update?: Maybe<Scalars['String']['output']>;
};

export type GenInfoClassificationDto = {
  __typename?: 'GenInfoClassificationDTO';
  response_code?: Maybe<Scalars['String']['output']>;
  response_datetime?: Maybe<Scalars['String']['output']>;
  response_desc?: Maybe<Scalars['String']['output']>;
  response_value?: Maybe<GenInfoClassificationObj>;
  serviceDescription?: Maybe<Scalars['String']['output']>;
};

export type GenInfoClassificationObj = {
  __typename?: 'GenInfoClassificationObj';
  genInfoClassification?: Maybe<GenInfoClassificationDoh>;
};

export type GenInfoQualityManagementDoh = {
  __typename?: 'GenInfoQualityManagementDOH';
  insert?: Maybe<Scalars['String']['output']>;
  report?: Maybe<DefaultDohResponseDetails>;
  update?: Maybe<Scalars['String']['output']>;
};

export type GenInfoQualityManagementDto = {
  __typename?: 'GenInfoQualityManagementDTO';
  qualityManagementType?: Maybe<Scalars['String']['output']>;
  response_code?: Maybe<Scalars['String']['output']>;
  response_datetime?: Maybe<Scalars['String']['output']>;
  response_desc?: Maybe<Scalars['String']['output']>;
  response_value?: Maybe<GenInfoQualityManagementObj>;
};

export type GenInfoQualityManagementObj = {
  __typename?: 'GenInfoQualityManagementObj';
  genInfoQualityManagement?: Maybe<GenInfoQualityManagementDoh>;
};

export type GenInfoQualityManagements = {
  __typename?: 'GenInfoQualityManagements';
  certifyingBody?: Maybe<Scalars['String']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  dohResponse?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  philHealthAccredition?: Maybe<Scalars['Int']['output']>;
  qualityMgmttype?: Maybe<Scalars['Int']['output']>;
  reportingYear?: Maybe<Scalars['Int']['output']>;
  submittedDateTime?: Maybe<Scalars['Instant']['output']>;
  validityFrom?: Maybe<Scalars['Instant']['output']>;
  validityTo?: Maybe<Scalars['Instant']['output']>;
};

export type GeneralLedgerDto = {
  __typename?: 'GeneralLedgerDto';
  accountType?: Maybe<Scalars['String']['output']>;
  beginningCredit?: Maybe<Scalars['BigDecimal']['output']>;
  beginningDebit?: Maybe<Scalars['BigDecimal']['output']>;
  code?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  endingCredit?: Maybe<Scalars['BigDecimal']['output']>;
  endingDebit?: Maybe<Scalars['BigDecimal']['output']>;
  normalSide?: Maybe<Scalars['String']['output']>;
  periodicCredit?: Maybe<Scalars['BigDecimal']['output']>;
  periodicDebit?: Maybe<Scalars['BigDecimal']['output']>;
};

export type GeneralLedgerDtoContainer = {
  __typename?: 'GeneralLedgerDtoContainer';
  payload?: Maybe<Array<Maybe<GeneralLedgerDto>>>;
  totalbeginningCredit?: Maybe<Scalars['BigDecimal']['output']>;
  totalbeginningDebit?: Maybe<Scalars['BigDecimal']['output']>;
  totalendingCredit?: Maybe<Scalars['BigDecimal']['output']>;
  totalendingDebit?: Maybe<Scalars['BigDecimal']['output']>;
  totalperiodicCredit?: Maybe<Scalars['BigDecimal']['output']>;
  totalperiodicDebit?: Maybe<Scalars['BigDecimal']['output']>;
};

export type Generic = {
  __typename?: 'Generic';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  genericCode?: Maybe<Scalars['String']['output']>;
  genericDescription?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  isActive?: Maybe<Scalars['Boolean']['output']>;
  /** List of Item Generic items */
  items?: Maybe<Array<Maybe<Item>>>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  phicCode?: Maybe<Scalars['String']['output']>;
  phicDescription?: Maybe<Scalars['String']['output']>;
};

export type GenericInput = {
  genericCode?: InputMaybe<Scalars['String']['input']>;
  genericDescription?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  isActive?: InputMaybe<Scalars['Boolean']['input']>;
  phicCode?: InputMaybe<Scalars['String']['input']>;
  phicDescription?: InputMaybe<Scalars['String']['input']>;
};

export type GraphQlResVal_AccountBalances = {
  __typename?: 'GraphQLResVal_AccountBalances';
  message?: Maybe<Scalars['String']['output']>;
  response?: Maybe<AccountBalances>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlResVal_Allowance = {
  __typename?: 'GraphQLResVal_Allowance';
  message?: Maybe<Scalars['String']['output']>;
  response?: Maybe<Allowance>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlResVal_AllowanceTemplate = {
  __typename?: 'GraphQLResVal_AllowanceTemplate';
  message?: Maybe<Scalars['String']['output']>;
  response?: Maybe<AllowanceTemplate>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlResVal_ArCreditNote = {
  __typename?: 'GraphQLResVal_ArCreditNote';
  message?: Maybe<Scalars['String']['output']>;
  response?: Maybe<ArCreditNote>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlResVal_ArCreditNoteItems = {
  __typename?: 'GraphQLResVal_ArCreditNoteItems';
  message?: Maybe<Scalars['String']['output']>;
  response?: Maybe<ArCreditNoteItems>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlResVal_ArCustomers = {
  __typename?: 'GraphQLResVal_ArCustomers';
  message?: Maybe<Scalars['String']['output']>;
  response?: Maybe<ArCustomers>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlResVal_ArInvoice = {
  __typename?: 'GraphQLResVal_ArInvoice';
  message?: Maybe<Scalars['String']['output']>;
  response?: Maybe<ArInvoice>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlResVal_ArInvoiceItems = {
  __typename?: 'GraphQLResVal_ArInvoiceItems';
  message?: Maybe<Scalars['String']['output']>;
  response?: Maybe<ArInvoiceItems>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlResVal_Boolean = {
  __typename?: 'GraphQLResVal_Boolean';
  message?: Maybe<Scalars['String']['output']>;
  response?: Maybe<Scalars['Boolean']['output']>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlResVal_EmployeeAllowance = {
  __typename?: 'GraphQLResVal_EmployeeAllowance';
  message?: Maybe<Scalars['String']['output']>;
  response?: Maybe<EmployeeAllowance>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlResVal_FixedAssetDepreciation = {
  __typename?: 'GraphQLResVal_FixedAssetDepreciation';
  message?: Maybe<Scalars['String']['output']>;
  response?: Maybe<FixedAssetDepreciation>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlResVal_OtherDeduction = {
  __typename?: 'GraphQLResVal_OtherDeduction';
  message?: Maybe<Scalars['String']['output']>;
  response?: Maybe<OtherDeduction>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlResVal_OtherDeductionEmployee = {
  __typename?: 'GraphQLResVal_OtherDeductionEmployee';
  message?: Maybe<Scalars['String']['output']>;
  response?: Maybe<OtherDeductionEmployee>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlResVal_PatientVaccination = {
  __typename?: 'GraphQLResVal_PatientVaccination';
  message?: Maybe<Scalars['String']['output']>;
  response?: Maybe<PatientVaccination>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlResVal_PaymentTransactionType = {
  __typename?: 'GraphQLResVal_PaymentTransactionType';
  message?: Maybe<Scalars['String']['output']>;
  response?: Maybe<PaymentTransactionType>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlResVal_PayrollEmployeeAllowance = {
  __typename?: 'GraphQLResVal_PayrollEmployeeAllowance';
  message?: Maybe<Scalars['String']['output']>;
  response?: Maybe<PayrollEmployeeAllowance>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlResVal_PayrollEmployeeContribution = {
  __typename?: 'GraphQLResVal_PayrollEmployeeContribution';
  message?: Maybe<Scalars['String']['output']>;
  response?: Maybe<PayrollEmployeeContribution>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlResVal_PurchaseOrder = {
  __typename?: 'GraphQLResVal_PurchaseOrder';
  message?: Maybe<Scalars['String']['output']>;
  response?: Maybe<PurchaseOrder>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlResVal_String = {
  __typename?: 'GraphQLResVal_String';
  message?: Maybe<Scalars['String']['output']>;
  response?: Maybe<Scalars['String']['output']>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlResVal_TimekeepingEmployee = {
  __typename?: 'GraphQLResVal_TimekeepingEmployee';
  message?: Maybe<Scalars['String']['output']>;
  response?: Maybe<TimekeepingEmployee>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlRetValAppointment_Boolean = {
  __typename?: 'GraphQLRetValAppointment_Boolean';
  header?: Maybe<Scalars['String']['output']>;
  message?: Maybe<Scalars['String']['output']>;
  payload?: Maybe<Scalars['Boolean']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlRetVal_AllowanceTemplate = {
  __typename?: 'GraphQLRetVal_AllowanceTemplate';
  message?: Maybe<Scalars['String']['output']>;
  payload?: Maybe<AllowanceTemplate>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlRetVal_ArTransaction = {
  __typename?: 'GraphQLRetVal_ArTransaction';
  message?: Maybe<Scalars['String']['output']>;
  payload?: Maybe<ArTransaction>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlRetVal_AuthenticationTestResponseDto = {
  __typename?: 'GraphQLRetVal_AuthenticationTestResponseDto';
  message?: Maybe<Scalars['String']['output']>;
  payload?: Maybe<AuthenticationTestResponseDto>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlRetVal_BigDecimal = {
  __typename?: 'GraphQLRetVal_BigDecimal';
  message?: Maybe<Scalars['String']['output']>;
  payload?: Maybe<Scalars['BigDecimal']['output']>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlRetVal_Billing = {
  __typename?: 'GraphQLRetVal_Billing';
  message?: Maybe<Scalars['String']['output']>;
  payload?: Maybe<Billing>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlRetVal_BiometricDevice = {
  __typename?: 'GraphQLRetVal_BiometricDevice';
  message?: Maybe<Scalars['String']['output']>;
  payload?: Maybe<BiometricDevice>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlRetVal_BiometricServiceConfig = {
  __typename?: 'GraphQLRetVal_BiometricServiceConfig';
  message?: Maybe<Scalars['String']['output']>;
  payload?: Maybe<BiometricServiceConfig>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlRetVal_Boolean = {
  __typename?: 'GraphQLRetVal_Boolean';
  message?: Maybe<Scalars['String']['output']>;
  payload?: Maybe<Scalars['Boolean']['output']>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlRetVal_BundyUserDtoArray = {
  __typename?: 'GraphQLRetVal_BundyUserDtoArray';
  message?: Maybe<Scalars['String']['output']>;
  payload?: Maybe<Array<Maybe<BundyUserDto>>>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlRetVal_Claim = {
  __typename?: 'GraphQLRetVal_Claim';
  message?: Maybe<Scalars['String']['output']>;
  payload?: Maybe<Claim>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlRetVal_ClaimItem = {
  __typename?: 'GraphQLRetVal_ClaimItem';
  message?: Maybe<Scalars['String']['output']>;
  payload?: Maybe<ClaimItem>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlRetVal_DepartmentSchedule = {
  __typename?: 'GraphQLRetVal_DepartmentSchedule';
  message?: Maybe<Scalars['String']['output']>;
  payload?: Maybe<DepartmentSchedule>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlRetVal_DietNotes = {
  __typename?: 'GraphQLRetVal_DietNotes';
  message?: Maybe<Scalars['String']['output']>;
  payload?: Maybe<DietNotes>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlRetVal_DischargeNumberDeliveries = {
  __typename?: 'GraphQLRetVal_DischargeNumberDeliveries';
  message?: Maybe<Scalars['String']['output']>;
  payload?: Maybe<DischargeNumberDeliveries>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlRetVal_DohConfiguration = {
  __typename?: 'GraphQLRetVal_DohConfiguration';
  message?: Maybe<Scalars['String']['output']>;
  payload?: Maybe<DohConfiguration>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlRetVal_DohPosition = {
  __typename?: 'GraphQLRetVal_DohPosition';
  message?: Maybe<Scalars['String']['output']>;
  payload?: Maybe<DohPosition>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlRetVal_Employee = {
  __typename?: 'GraphQLRetVal_Employee';
  message?: Maybe<Scalars['String']['output']>;
  payload?: Maybe<Employee>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlRetVal_EmployeeAttendance = {
  __typename?: 'GraphQLRetVal_EmployeeAttendance';
  message?: Maybe<Scalars['String']['output']>;
  payload?: Maybe<EmployeeAttendance>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlRetVal_EmployeeRequest = {
  __typename?: 'GraphQLRetVal_EmployeeRequest';
  message?: Maybe<Scalars['String']['output']>;
  payload?: Maybe<EmployeeRequest>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlRetVal_EmployeeRequestApproval = {
  __typename?: 'GraphQLRetVal_EmployeeRequestApproval';
  message?: Maybe<Scalars['String']['output']>;
  payload?: Maybe<EmployeeRequestApproval>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlRetVal_EventCalendar = {
  __typename?: 'GraphQLRetVal_EventCalendar';
  message?: Maybe<Scalars['String']['output']>;
  payload?: Maybe<EventCalendar>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlRetVal_ExpensesDto = {
  __typename?: 'GraphQLRetVal_ExpensesDTO';
  message?: Maybe<Scalars['String']['output']>;
  payload?: Maybe<ExpensesDto>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlRetVal_FixedAssetItem = {
  __typename?: 'GraphQLRetVal_FixedAssetItem';
  message?: Maybe<Scalars['String']['output']>;
  payload?: Maybe<FixedAssetItem>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlRetVal_FixedAssetTransfer = {
  __typename?: 'GraphQLRetVal_FixedAssetTransfer';
  message?: Maybe<Scalars['String']['output']>;
  payload?: Maybe<FixedAssetTransfer>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlRetVal_FixedAssets = {
  __typename?: 'GraphQLRetVal_FixedAssets';
  message?: Maybe<Scalars['String']['output']>;
  payload?: Maybe<FixedAssets>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlRetVal_GenInfoBedCapacityResponseDto = {
  __typename?: 'GraphQLRetVal_GenInfoBedCapacityResponseDto';
  message?: Maybe<Scalars['String']['output']>;
  payload?: Maybe<GenInfoBedCapacityResponseDto>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlRetVal_GenInfoClassificationDto = {
  __typename?: 'GraphQLRetVal_GenInfoClassificationDTO';
  message?: Maybe<Scalars['String']['output']>;
  payload?: Maybe<GenInfoClassificationDto>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlRetVal_Generic = {
  __typename?: 'GraphQLRetVal_Generic';
  message?: Maybe<Scalars['String']['output']>;
  payload?: Maybe<Generic>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlRetVal_HospOptDischargesErdto = {
  __typename?: 'GraphQLRetVal_HospOptDischargesERDTO';
  message?: Maybe<Scalars['String']['output']>;
  payload?: Maybe<HospOptDischargesErdto>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlRetVal_HospOptDischargesEvdto = {
  __typename?: 'GraphQLRetVal_HospOptDischargesEVDTO';
  message?: Maybe<Scalars['String']['output']>;
  payload?: Maybe<HospOptDischargesEvdto>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlRetVal_HospOptDischargesNumberDeliveriesDto = {
  __typename?: 'GraphQLRetVal_HospOptDischargesNumberDeliveriesDto';
  message?: Maybe<Scalars['String']['output']>;
  payload?: Maybe<HospOptDischargesNumberDeliveriesDto>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlRetVal_HospOptDischargesOpddto = {
  __typename?: 'GraphQLRetVal_HospOptDischargesOPDDTO';
  message?: Maybe<Scalars['String']['output']>;
  payload?: Maybe<HospOptDischargesOpddto>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlRetVal_HospOptDischargesOpvdto = {
  __typename?: 'GraphQLRetVal_HospOptDischargesOPVDTO';
  message?: Maybe<Scalars['String']['output']>;
  payload?: Maybe<HospOptDischargesOpvdto>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlRetVal_HospitalInfo = {
  __typename?: 'GraphQLRetVal_HospitalInfo';
  message?: Maybe<Scalars['String']['output']>;
  payload?: Maybe<HospitalInfo>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlRetVal_HospitalOperationsDeathsDto = {
  __typename?: 'GraphQLRetVal_HospitalOperationsDeathsDTO';
  message?: Maybe<Scalars['String']['output']>;
  payload?: Maybe<HospitalOperationsDeathsDto>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlRetVal_HospitalOperationsHaidto = {
  __typename?: 'GraphQLRetVal_HospitalOperationsHAIDTO';
  message?: Maybe<Scalars['String']['output']>;
  payload?: Maybe<HospitalOperationsHaidto>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlRetVal_InvestorAttachment = {
  __typename?: 'GraphQLRetVal_InvestorAttachment';
  message?: Maybe<Scalars['String']['output']>;
  payload?: Maybe<InvestorAttachment>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlRetVal_Item = {
  __typename?: 'GraphQLRetVal_Item';
  message?: Maybe<Scalars['String']['output']>;
  payload?: Maybe<Item>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlRetVal_List_AttLogDto = {
  __typename?: 'GraphQLRetVal_List_AttLogDto';
  message?: Maybe<Scalars['String']['output']>;
  payload?: Maybe<Array<Maybe<AttLogDto>>>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlRetVal_List_Billing = {
  __typename?: 'GraphQLRetVal_List_Billing';
  message?: Maybe<Scalars['String']['output']>;
  payload?: Maybe<Array<Maybe<Billing>>>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlRetVal_List_FixedAssetDepreciation = {
  __typename?: 'GraphQLRetVal_List_FixedAssetDepreciation';
  message?: Maybe<Scalars['String']['output']>;
  payload?: Maybe<Array<Maybe<FixedAssetDepreciation>>>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlRetVal_List_FixedAssetItem = {
  __typename?: 'GraphQLRetVal_List_FixedAssetItem';
  message?: Maybe<Scalars['String']['output']>;
  payload?: Maybe<Array<Maybe<FixedAssetItem>>>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlRetVal_List_FixedAssetTransfer = {
  __typename?: 'GraphQLRetVal_List_FixedAssetTransfer';
  message?: Maybe<Scalars['String']['output']>;
  payload?: Maybe<Array<Maybe<FixedAssetTransfer>>>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlRetVal_List_GenInfoQualityManagementDto = {
  __typename?: 'GraphQLRetVal_List_GenInfoQualityManagementDTO';
  message?: Maybe<Scalars['String']['output']>;
  payload?: Maybe<Array<Maybe<GenInfoQualityManagementDto>>>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlRetVal_List_HospOptDischargesErdto = {
  __typename?: 'GraphQLRetVal_List_HospOptDischargesERDTO';
  message?: Maybe<Scalars['String']['output']>;
  payload?: Maybe<Array<Maybe<HospOptDischargesErdto>>>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlRetVal_List_HospOptDischargesEvdto = {
  __typename?: 'GraphQLRetVal_List_HospOptDischargesEVDTO';
  message?: Maybe<Scalars['String']['output']>;
  payload?: Maybe<Array<Maybe<HospOptDischargesEvdto>>>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlRetVal_List_HospOptDischargesMorbidityDto = {
  __typename?: 'GraphQLRetVal_List_HospOptDischargesMorbidityDTO';
  message?: Maybe<Scalars['String']['output']>;
  payload?: Maybe<Array<Maybe<HospOptDischargesMorbidityDto>>>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlRetVal_List_HospOptDischargesOpddto = {
  __typename?: 'GraphQLRetVal_List_HospOptDischargesOPDDTO';
  message?: Maybe<Scalars['String']['output']>;
  payload?: Maybe<Array<Maybe<HospOptDischargesOpddto>>>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlRetVal_List_HospOptDischargesOpvdto = {
  __typename?: 'GraphQLRetVal_List_HospOptDischargesOPVDTO';
  message?: Maybe<Scalars['String']['output']>;
  payload?: Maybe<Array<Maybe<HospOptDischargesOpvdto>>>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlRetVal_List_HospOptDischargesSpecialtyDto = {
  __typename?: 'GraphQLRetVal_List_HospOptDischargesSpecialtyDTO';
  message?: Maybe<Scalars['String']['output']>;
  payload?: Maybe<Array<Maybe<HospOptDischargesSpecialtyDto>>>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlRetVal_List_HospOptDischargesTestingDto = {
  __typename?: 'GraphQLRetVal_List_HospOptDischargesTestingDTO';
  message?: Maybe<Scalars['String']['output']>;
  payload?: Maybe<Array<Maybe<HospOptDischargesTestingDto>>>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlRetVal_List_HospOptMortalityDeathsDto = {
  __typename?: 'GraphQLRetVal_List_HospOptMortalityDeathsDTO';
  message?: Maybe<Scalars['String']['output']>;
  payload?: Maybe<Array<Maybe<HospOptMortalityDeathsDto>>>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlRetVal_List_HospitalOperationsMajorOptDto = {
  __typename?: 'GraphQLRetVal_List_HospitalOperationsMajorOptDTO';
  message?: Maybe<Scalars['String']['output']>;
  payload?: Maybe<Array<Maybe<HospitalOperationsMajorOptDto>>>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlRetVal_List_HospitalOperationsMinorOptDto = {
  __typename?: 'GraphQLRetVal_List_HospitalOperationsMinorOptDTO';
  message?: Maybe<Scalars['String']['output']>;
  payload?: Maybe<Array<Maybe<HospitalOperationsMinorOptDto>>>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlRetVal_List_MajorOpDto = {
  __typename?: 'GraphQLRetVal_List_MajorOpDto';
  message?: Maybe<Scalars['String']['output']>;
  payload?: Maybe<Array<Maybe<MajorOpDto>>>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlRetVal_List_Map_String_Object = {
  __typename?: 'GraphQLRetVal_List_Map_String_Object';
  message?: Maybe<Scalars['String']['output']>;
  payload?: Maybe<Array<Maybe<Scalars['Map_String_ObjectScalar']['output']>>>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlRetVal_List_MatchPatientResultDto = {
  __typename?: 'GraphQLRetVal_List_MatchPatientResultDto';
  message?: Maybe<Scalars['String']['output']>;
  payload?: Maybe<Array<Maybe<MatchPatientResultDto>>>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlRetVal_List_OpdMinorOpDto = {
  __typename?: 'GraphQLRetVal_List_OpdMinorOpDto';
  message?: Maybe<Scalars['String']['output']>;
  payload?: Maybe<Array<Maybe<OpdMinorOpDto>>>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlRetVal_List_StaffingPatternDto = {
  __typename?: 'GraphQLRetVal_List_StaffingPatternDTO';
  message?: Maybe<Scalars['String']['output']>;
  payload?: Maybe<Array<Maybe<StaffingPatternDto>>>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlRetVal_List_SummaryOfPatientDto = {
  __typename?: 'GraphQLRetVal_List_SummaryOfPatientDTO';
  message?: Maybe<Scalars['String']['output']>;
  payload?: Maybe<Array<Maybe<SummaryOfPatientDto>>>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlRetVal_Loan = {
  __typename?: 'GraphQLRetVal_Loan';
  message?: Maybe<Scalars['String']['output']>;
  payload?: Maybe<Loan>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlRetVal_LoanAccounts = {
  __typename?: 'GraphQLRetVal_LoanAccounts';
  message?: Maybe<Scalars['String']['output']>;
  payload?: Maybe<LoanAccounts>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlRetVal_Long = {
  __typename?: 'GraphQLRetVal_Long';
  message?: Maybe<Scalars['String']['output']>;
  payload?: Maybe<Scalars['Long']['output']>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlRetVal_Object = {
  __typename?: 'GraphQLRetVal_Object';
  message?: Maybe<Scalars['String']['output']>;
  payload?: Maybe<Scalars['ObjectScalar']['output']>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlRetVal_OrderSlipItem = {
  __typename?: 'GraphQLRetVal_OrderSlipItem';
  message?: Maybe<Scalars['String']['output']>;
  payload?: Maybe<OrderSlipItem>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlRetVal_Page_Case = {
  __typename?: 'GraphQLRetVal_Page_Case';
  message?: Maybe<Scalars['String']['output']>;
  payload?: Maybe<Page_Case>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlRetVal_Page_FixedAssetItem = {
  __typename?: 'GraphQLRetVal_Page_FixedAssetItem';
  message?: Maybe<Scalars['String']['output']>;
  payload?: Maybe<Page_FixedAssetItem>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlRetVal_Page_Map_String_Object = {
  __typename?: 'GraphQLRetVal_Page_Map_String_Object';
  message?: Maybe<Scalars['String']['output']>;
  payload?: Maybe<Page_Map_String_Object>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlRetVal_PaymentTracker = {
  __typename?: 'GraphQLRetVal_PaymentTracker';
  message?: Maybe<Scalars['String']['output']>;
  payload?: Maybe<PaymentTracker>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlRetVal_Payroll = {
  __typename?: 'GraphQLRetVal_Payroll';
  message?: Maybe<Scalars['String']['output']>;
  payload?: Maybe<Payroll>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlRetVal_PriceTierDetail = {
  __typename?: 'GraphQLRetVal_PriceTierDetail';
  message?: Maybe<Scalars['String']['output']>;
  payload?: Maybe<PriceTierDetail>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlRetVal_RevenuesDto = {
  __typename?: 'GraphQLRetVal_RevenuesDTO';
  message?: Maybe<Scalars['String']['output']>;
  payload?: Maybe<RevenuesDto>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlRetVal_SalaryRateMultiplier = {
  __typename?: 'GraphQLRetVal_SalaryRateMultiplier';
  message?: Maybe<Scalars['String']['output']>;
  payload?: Maybe<SalaryRateMultiplier>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlRetVal_ScheduleLock = {
  __typename?: 'GraphQLRetVal_ScheduleLock';
  message?: Maybe<Scalars['String']['output']>;
  payload?: Maybe<ScheduleLock>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlRetVal_String = {
  __typename?: 'GraphQLRetVal_String';
  message?: Maybe<Scalars['String']['output']>;
  payload?: Maybe<Scalars['String']['output']>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlRetVal_Subscription = {
  __typename?: 'GraphQLRetVal_Subscription';
  message?: Maybe<Scalars['String']['output']>;
  payload?: Maybe<Subscription>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlRetVal_SummaryOfPatientDto = {
  __typename?: 'GraphQLRetVal_SummaryOfPatientDTO';
  message?: Maybe<Scalars['String']['output']>;
  payload?: Maybe<SummaryOfPatientDto>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlRetVal_Timekeeping = {
  __typename?: 'GraphQLRetVal_Timekeeping';
  message?: Maybe<Scalars['String']['output']>;
  payload?: Maybe<Timekeeping>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GraphQlRetVal_TrialBalanceDto2Array = {
  __typename?: 'GraphQLRetVal_TrialBalanceDto2Array';
  message?: Maybe<Scalars['String']['output']>;
  payload?: Maybe<Array<Maybe<TrialBalanceDto2>>>;
  returnId?: Maybe<Scalars['UUID']['output']>;
  success: Scalars['Boolean']['output'];
};

export type GroupPolicy = {
  __typename?: 'GroupPolicy';
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  name: Scalars['String']['output'];
  permissions?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  permissionsList?: Maybe<Array<Maybe<Permission>>>;
};

export type GroupedIntakes = {
  __typename?: 'GroupedIntakes';
  date?: Maybe<Scalars['LocalDate']['output']>;
  groupedList?: Maybe<Array<Maybe<GroupedShiftIntake>>>;
  totalIntakes?: Maybe<Scalars['BigDecimal']['output']>;
};

export type GroupedOutputs = {
  __typename?: 'GroupedOutputs';
  date?: Maybe<Scalars['LocalDate']['output']>;
  groupedList?: Maybe<Array<Maybe<GroupedShiftOutput>>>;
  totalOutputs?: Maybe<Scalars['BigDecimal']['output']>;
};

export type GroupedShiftIntake = {
  __typename?: 'GroupedShiftIntake';
  fromTime?: Maybe<Scalars['Instant']['output']>;
  list?: Maybe<Array<Maybe<Intake>>>;
  shiftName?: Maybe<Scalars['String']['output']>;
  shiftTotalIntakes?: Maybe<Scalars['BigDecimal']['output']>;
  toTime?: Maybe<Scalars['Instant']['output']>;
};

export type GroupedShiftOutput = {
  __typename?: 'GroupedShiftOutput';
  fromTime?: Maybe<Scalars['Instant']['output']>;
  list?: Maybe<Array<Maybe<Output>>>;
  shiftName?: Maybe<Scalars['String']['output']>;
  shiftTotalOutputs?: Maybe<Scalars['BigDecimal']['output']>;
  toTime?: Maybe<Scalars['Instant']['output']>;
};

export type GuaranteedContentDto = {
  __typename?: 'GuaranteedContentDto';
  approvalCode?: Maybe<Scalars['String']['output']>;
  billingId?: Maybe<Scalars['String']['output']>;
  billingItemId?: Maybe<Scalars['String']['output']>;
  billingNo?: Maybe<Scalars['String']['output']>;
  billingSchedAmount?: Maybe<Scalars['String']['output']>;
  billingSchedItemId?: Maybe<Scalars['String']['output']>;
  billingSchedType?: Maybe<Scalars['String']['output']>;
  caseId?: Maybe<Scalars['String']['output']>;
  case_no?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  dischargeDate?: Maybe<Scalars['String']['output']>;
  finalSoa?: Maybe<Scalars['String']['output']>;
  hci?: Maybe<Scalars['BigDecimal']['output']>;
  no?: Maybe<Scalars['String']['output']>;
  patient?: Maybe<Scalars['String']['output']>;
  patientId?: Maybe<Scalars['String']['output']>;
  pf?: Maybe<Scalars['BigDecimal']['output']>;
  recordNo?: Maybe<Scalars['String']['output']>;
};

export type GuaranteedDto = {
  __typename?: 'GuaranteedDto';
  content?: Maybe<Array<Maybe<GuaranteedContentDto>>>;
  totalPage?: Maybe<Scalars['Int']['output']>;
  totalRows?: Maybe<Scalars['Int']['output']>;
};

export type HeaderLedger = {
  __typename?: 'HeaderLedger';
  approvedBy?: Maybe<Scalars['String']['output']>;
  approvedDatetime?: Maybe<Scalars['Instant']['output']>;
  beginningBalance?: Maybe<Scalars['Boolean']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  custom?: Maybe<Scalars['Boolean']['output']>;
  details?: Maybe<Scalars['Map_String_StringScalar']['output']>;
  docType?: Maybe<LedgerDocType>;
  docnum?: Maybe<Scalars['String']['output']>;
  entityName?: Maybe<Scalars['String']['output']>;
  fiscal?: Maybe<Fiscal>;
  id?: Maybe<Scalars['UUID']['output']>;
  invoiceSoaReference?: Maybe<Scalars['String']['output']>;
  journalType?: Maybe<JournalType>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  ledger?: Maybe<Array<Maybe<Ledger>>>;
  ledgerValue?: Maybe<Scalars['BigDecimal']['output']>;
  parentLedger?: Maybe<Scalars['UUID']['output']>;
  particulars?: Maybe<Scalars['String']['output']>;
  reapplyPaymentTracker?: Maybe<Scalars['UUID']['output']>;
  reversal?: Maybe<Scalars['Boolean']['output']>;
  transactionDate?: Maybe<Scalars['Instant']['output']>;
  transactionDateOnly?: Maybe<Scalars['LocalDate']['output']>;
};

export type HeaderLedgerInput = {
  approvedBy?: InputMaybe<Scalars['String']['input']>;
  approvedDatetime?: InputMaybe<Scalars['Instant']['input']>;
  beginningBalance?: InputMaybe<Scalars['Boolean']['input']>;
  custom?: InputMaybe<Scalars['Boolean']['input']>;
  details?: InputMaybe<Scalars['Map_String_StringScalar']['input']>;
  docType?: InputMaybe<LedgerDocType>;
  docnum?: InputMaybe<Scalars['String']['input']>;
  entityName?: InputMaybe<Scalars['String']['input']>;
  fiscal?: InputMaybe<FiscalInput>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  invoiceSoaReference?: InputMaybe<Scalars['String']['input']>;
  journalType?: InputMaybe<JournalType>;
  ledger?: InputMaybe<Array<InputMaybe<LedgerInput>>>;
  parentLedger?: InputMaybe<Scalars['UUID']['input']>;
  particulars?: InputMaybe<Scalars['String']['input']>;
  reapplyPaymentTracker?: InputMaybe<Scalars['UUID']['input']>;
  reversal?: InputMaybe<Scalars['Boolean']['input']>;
  transactionDate?: InputMaybe<Scalars['Instant']['input']>;
  transactionDateOnly?: InputMaybe<Scalars['LocalDate']['input']>;
};

export type Hisd3EntityVersionInfoDetail = {
  __typename?: 'Hisd3EntityVersionInfoDetail';
  newValue?: Maybe<Scalars['ObjectScalar']['output']>;
  property?: Maybe<Scalars['String']['output']>;
};

export type Hisd3EntityVersionInfoHistory = {
  __typename?: 'Hisd3EntityVersionInfoHistory';
  author?: Maybe<Scalars['String']['output']>;
  details?: Maybe<Array<Maybe<Hisd3EntityVersionInfoDetail>>>;
  modifiedDateTime?: Maybe<Scalars['Instant']['output']>;
  version?: Maybe<Scalars['Long']['output']>;
};

export type HospOptDischargeSpecialty = {
  __typename?: 'HospOptDischargeSpecialty';
  absconded?: Maybe<Scalars['Int']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  deathsBelow48Hours?: Maybe<Scalars['Int']['output']>;
  deathsOver48?: Maybe<Scalars['Int']['output']>;
  hama?: Maybe<Scalars['Int']['output']>;
  hmo?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  nhpServiceCharity?: Maybe<Scalars['Int']['output']>;
  noPatient?: Maybe<Scalars['Int']['output']>;
  nonPhilHealthStay?: Maybe<Scalars['Int']['output']>;
  owwa?: Maybe<Scalars['Int']['output']>;
  philHealthPay?: Maybe<Scalars['Int']['output']>;
  philHealthService?: Maybe<Scalars['Int']['output']>;
  recoveredImproved?: Maybe<Scalars['Int']['output']>;
  remarks?: Maybe<Scalars['String']['output']>;
  reportingYear?: Maybe<Scalars['Int']['output']>;
  submittedDateTime?: Maybe<Scalars['Instant']['output']>;
  totalDeaths?: Maybe<Scalars['Int']['output']>;
  totalDischarge?: Maybe<Scalars['Int']['output']>;
  totalLengthStay?: Maybe<Scalars['Int']['output']>;
  totalNonPhilHealth?: Maybe<Scalars['Int']['output']>;
  totalPhilHealth?: Maybe<Scalars['Int']['output']>;
  transferred?: Maybe<Scalars['Int']['output']>;
  typeOfService?: Maybe<Scalars['Int']['output']>;
  unImproved?: Maybe<Scalars['Int']['output']>;
};

export type HospOptDischargeSpecialtyOthers = {
  __typename?: 'HospOptDischargeSpecialtyOthers';
  absconded?: Maybe<Scalars['Int']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  deathBelow48Hours?: Maybe<Scalars['Int']['output']>;
  deathOver48?: Maybe<Scalars['Int']['output']>;
  hama?: Maybe<Scalars['Int']['output']>;
  hmo?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  noPatients?: Maybe<Scalars['Int']['output']>;
  nonPhilHealthPay?: Maybe<Scalars['Int']['output']>;
  nphServiceCharity?: Maybe<Scalars['Int']['output']>;
  otherTypeServicesSpecify?: Maybe<Scalars['String']['output']>;
  owwa?: Maybe<Scalars['Int']['output']>;
  philHealthPay?: Maybe<Scalars['Int']['output']>;
  philHealthServices?: Maybe<Scalars['Int']['output']>;
  recoveredImproved?: Maybe<Scalars['Int']['output']>;
  remarks?: Maybe<Scalars['String']['output']>;
  reportingYear?: Maybe<Scalars['Int']['output']>;
  submittedDateTime?: Maybe<Scalars['Instant']['output']>;
  totalDeaths?: Maybe<Scalars['Int']['output']>;
  totalDischarge?: Maybe<Scalars['Int']['output']>;
  totalLengthStay?: Maybe<Scalars['Int']['output']>;
  totalNonPhilHealth?: Maybe<Scalars['Int']['output']>;
  totalPhilHealth?: Maybe<Scalars['Int']['output']>;
  transferred?: Maybe<Scalars['Int']['output']>;
  unImproved?: Maybe<Scalars['Int']['output']>;
};

export type HospOptDischargesEr = {
  __typename?: 'HospOptDischargesER';
  hospOptDischargesER?: Maybe<HospOptDischargesErdoh>;
};

export type HospOptDischargesErdoh = {
  __typename?: 'HospOptDischargesERDOH';
  insert?: Maybe<Scalars['String']['output']>;
  report?: Maybe<DefaultDohResponseDetails>;
  update?: Maybe<Scalars['String']['output']>;
};

export type HospOptDischargesErdto = {
  __typename?: 'HospOptDischargesERDTO';
  response_code?: Maybe<Scalars['String']['output']>;
  response_datetime?: Maybe<Scalars['String']['output']>;
  response_desc?: Maybe<Scalars['String']['output']>;
  response_value?: Maybe<HospOptDischargesEr>;
};

export type HospOptDischargesEv = {
  __typename?: 'HospOptDischargesEV';
  hospOptDischargesEV?: Maybe<HospitalDischargeEVisit>;
};

export type HospOptDischargesEvdto = {
  __typename?: 'HospOptDischargesEVDTO';
  response_code?: Maybe<Scalars['String']['output']>;
  response_datetime?: Maybe<Scalars['String']['output']>;
  response_desc?: Maybe<Scalars['String']['output']>;
  response_value?: Maybe<HospOptDischargesEv>;
};

export type HospOptDischargesMorbidityDoh = {
  __typename?: 'HospOptDischargesMorbidityDOH';
  insert?: Maybe<Scalars['String']['output']>;
  report?: Maybe<DefaultDohResponseDetails>;
  update?: Maybe<Scalars['String']['output']>;
};

export type HospOptDischargesMorbidityDto = {
  __typename?: 'HospOptDischargesMorbidityDTO';
  icd10code?: Maybe<Scalars['String']['output']>;
  icd10desc?: Maybe<Scalars['String']['output']>;
  response_code?: Maybe<Scalars['String']['output']>;
  response_datetime?: Maybe<Scalars['String']['output']>;
  response_desc?: Maybe<Scalars['String']['output']>;
  response_value?: Maybe<HospOptDischargesMorbidityObj>;
};

export type HospOptDischargesMorbidityObj = {
  __typename?: 'HospOptDischargesMorbidityObj';
  hospOptDischargesMorbidity?: Maybe<HospOptDischargesMorbidityDoh>;
};

export type HospOptDischargesNumberDeliveries = {
  __typename?: 'HospOptDischargesNumberDeliveries';
  hospOptDischargesNumberDeliveries?: Maybe<HospOptDischargesNumberDeliveriesReport>;
};

export type HospOptDischargesNumberDeliveriesDto = {
  __typename?: 'HospOptDischargesNumberDeliveriesDto';
  response_code?: Maybe<Scalars['String']['output']>;
  response_datetime?: Maybe<Scalars['String']['output']>;
  response_desc?: Maybe<Scalars['String']['output']>;
  response_value?: Maybe<HospOptDischargesNumberDeliveries>;
};

export type HospOptDischargesNumberDeliveriesReport = {
  __typename?: 'HospOptDischargesNumberDeliveriesReport';
  insert?: Maybe<Scalars['String']['output']>;
  report?: Maybe<DefaultDohResponseDetails>;
  update?: Maybe<Scalars['String']['output']>;
};

export type HospOptDischargesOpd = {
  __typename?: 'HospOptDischargesOPD';
  hospOptDischargesOPD?: Maybe<HospOptDischargesOpddoh>;
};

export type HospOptDischargesOpddoh = {
  __typename?: 'HospOptDischargesOPDDOH';
  insert?: Maybe<Scalars['String']['output']>;
  report?: Maybe<DefaultDohResponseDetails>;
  update?: Maybe<Scalars['String']['output']>;
};

export type HospOptDischargesOpddto = {
  __typename?: 'HospOptDischargesOPDDTO';
  response_code?: Maybe<Scalars['String']['output']>;
  response_datetime?: Maybe<Scalars['String']['output']>;
  response_desc?: Maybe<Scalars['String']['output']>;
  response_value?: Maybe<HospOptDischargesOpd>;
};

export type HospOptDischargesOpv = {
  __typename?: 'HospOptDischargesOPV';
  hospOptDischargesOPV?: Maybe<HospOptDischargesOpvDoh>;
};

export type HospOptDischargesOpvdto = {
  __typename?: 'HospOptDischargesOPVDTO';
  response_code?: Maybe<Scalars['String']['output']>;
  response_datetime?: Maybe<Scalars['String']['output']>;
  response_desc?: Maybe<Scalars['String']['output']>;
  response_value?: Maybe<HospOptDischargesOpv>;
};

export type HospOptDischargesOpvDoh = {
  __typename?: 'HospOptDischargesOPVDoh';
  insert?: Maybe<Scalars['String']['output']>;
  report?: Maybe<DefaultDohResponseDetails>;
};

export type HospOptDischargesSpecialty = {
  __typename?: 'HospOptDischargesSpecialty';
  absconded?: Maybe<Scalars['Int']['output']>;
  deathsbelow48?: Maybe<Scalars['Int']['output']>;
  deathsover48?: Maybe<Scalars['Int']['output']>;
  hama?: Maybe<Scalars['Int']['output']>;
  hfhudcode?: Maybe<Scalars['String']['output']>;
  hmo?: Maybe<Scalars['Int']['output']>;
  nopatients?: Maybe<Scalars['Int']['output']>;
  nphservicecharity?: Maybe<Scalars['Int']['output']>;
  nphtotal?: Maybe<Scalars['Int']['output']>;
  nppay?: Maybe<Scalars['Int']['output']>;
  owwa?: Maybe<Scalars['Int']['output']>;
  phpay?: Maybe<Scalars['Int']['output']>;
  phservice?: Maybe<Scalars['Int']['output']>;
  phtotal?: Maybe<Scalars['Int']['output']>;
  recoveredimproved?: Maybe<Scalars['Int']['output']>;
  remarks?: Maybe<Scalars['Int']['output']>;
  reportingyear?: Maybe<Scalars['Int']['output']>;
  totaldeaths?: Maybe<Scalars['Int']['output']>;
  totaldischarges?: Maybe<Scalars['Int']['output']>;
  totallengthstay?: Maybe<Scalars['Int']['output']>;
  transferred?: Maybe<Scalars['Int']['output']>;
  typeofservice?: Maybe<Scalars['Int']['output']>;
  unimproved?: Maybe<Scalars['Int']['output']>;
};

export type HospOptDischargesSpecialtyDoh = {
  __typename?: 'HospOptDischargesSpecialtyDOH';
  insert?: Maybe<Scalars['String']['output']>;
  report?: Maybe<DefaultDohResponseDetails>;
  update?: Maybe<Scalars['String']['output']>;
};

export type HospOptDischargesSpecialtyDto = {
  __typename?: 'HospOptDischargesSpecialtyDTO';
  response_code?: Maybe<Scalars['String']['output']>;
  response_datetime?: Maybe<Scalars['String']['output']>;
  response_desc?: Maybe<Scalars['String']['output']>;
  response_value?: Maybe<HospOptDischargesSpecialtyObj>;
  serviceDescription?: Maybe<Scalars['String']['output']>;
};

export type HospOptDischargesSpecialtyObj = {
  __typename?: 'HospOptDischargesSpecialtyObj';
  hospOptDischargesSpecialty?: Maybe<HospOptDischargesSpecialtyDoh>;
  hospOptDischargesSpecialtyOthers?: Maybe<HospOptDischargesSpecialtyDoh>;
};

export type HospOptDischargesSpecialtyOthers = {
  __typename?: 'HospOptDischargesSpecialtyOthers';
  absconded?: Maybe<Scalars['Int']['output']>;
  deathsbelow48?: Maybe<Scalars['Int']['output']>;
  deathsover48?: Maybe<Scalars['Int']['output']>;
  hama?: Maybe<Scalars['Int']['output']>;
  hfhudcode?: Maybe<Scalars['String']['output']>;
  hmo?: Maybe<Scalars['Int']['output']>;
  nopatients?: Maybe<Scalars['Int']['output']>;
  nphservicecharity?: Maybe<Scalars['Int']['output']>;
  nphtotal?: Maybe<Scalars['Int']['output']>;
  nppay?: Maybe<Scalars['Int']['output']>;
  othertypeofservicespecify?: Maybe<Scalars['Int']['output']>;
  owwa?: Maybe<Scalars['Int']['output']>;
  phpay?: Maybe<Scalars['Int']['output']>;
  phservice?: Maybe<Scalars['Int']['output']>;
  phtotal?: Maybe<Scalars['Int']['output']>;
  recoveredimproved?: Maybe<Scalars['Int']['output']>;
  remarks?: Maybe<Scalars['Int']['output']>;
  reportingyear?: Maybe<Scalars['Int']['output']>;
  totaldeaths?: Maybe<Scalars['Int']['output']>;
  totaldischarges?: Maybe<Scalars['Int']['output']>;
  totallengthstay?: Maybe<Scalars['Int']['output']>;
  transferred?: Maybe<Scalars['Int']['output']>;
  unimproved?: Maybe<Scalars['Int']['output']>;
};

export type HospOptDischargesTestingDoh = {
  __typename?: 'HospOptDischargesTestingDOH';
  insert?: Maybe<Scalars['String']['output']>;
  report?: Maybe<DefaultDohResponseDetails>;
  update?: Maybe<Scalars['String']['output']>;
};

export type HospOptDischargesTestingDto = {
  __typename?: 'HospOptDischargesTestingDTO';
  description?: Maybe<Scalars['String']['output']>;
  number?: Maybe<Scalars['String']['output']>;
  response_code?: Maybe<Scalars['String']['output']>;
  response_datetime?: Maybe<Scalars['String']['output']>;
  response_desc?: Maybe<Scalars['String']['output']>;
  response_value?: Maybe<HospOptDischargesTestingObj>;
  testinggroup?: Maybe<Scalars['String']['output']>;
};

export type HospOptDischargesTestingObj = {
  __typename?: 'HospOptDischargesTestingObj';
  hospOptDischargesTesting?: Maybe<HospOptDischargesTestingDoh>;
};

export type HospOptMortalityDeathsDoh = {
  __typename?: 'HospOptMortalityDeathsDOH';
  insert?: Maybe<Scalars['String']['output']>;
  report?: Maybe<DefaultDohResponseDetails>;
  update?: Maybe<Scalars['String']['output']>;
};

export type HospOptMortalityDeathsDto = {
  __typename?: 'HospOptMortalityDeathsDTO';
  icd10code?: Maybe<Scalars['String']['output']>;
  icd10desc?: Maybe<Scalars['String']['output']>;
  response_code?: Maybe<Scalars['String']['output']>;
  response_datetime?: Maybe<Scalars['String']['output']>;
  response_desc?: Maybe<Scalars['String']['output']>;
  response_value?: Maybe<HospOptMortalityDeathsObj>;
};

export type HospOptMortalityDeathsObj = {
  __typename?: 'HospOptMortalityDeathsObj';
  hospitalOperationsMortalityDeaths?: Maybe<HospOptMortalityDeathsDoh>;
};

export type HospOptSummaryOfPatients = {
  __typename?: 'HospOptSummaryOfPatients';
  hfhudcode?: Maybe<Scalars['String']['output']>;
  reportingyear?: Maybe<Scalars['Int']['output']>;
  totaldischarges?: Maybe<Scalars['Int']['output']>;
  totalibd?: Maybe<Scalars['Int']['output']>;
  totalinpatients?: Maybe<Scalars['Int']['output']>;
  totalinpatienttransfrom?: Maybe<Scalars['Int']['output']>;
  totalinpatienttransto?: Maybe<Scalars['Int']['output']>;
  totalnewborn?: Maybe<Scalars['Int']['output']>;
  totalpad?: Maybe<Scalars['Int']['output']>;
  totalpatientsremaining?: Maybe<Scalars['Int']['output']>;
};

export type HospitalDischargeEVisit = {
  __typename?: 'HospitalDischargeEVisit';
  insert?: Maybe<Scalars['String']['output']>;
  report?: Maybe<DefaultDohResponseDetails>;
};

export type HospitalDischargeMorbidityDto = {
  __typename?: 'HospitalDischargeMorbidityDto';
  diagnosisCategory?: Maybe<Scalars['String']['output']>;
  female14?: Maybe<Scalars['Int']['output']>;
  female59?: Maybe<Scalars['Int']['output']>;
  female70Over?: Maybe<Scalars['Int']['output']>;
  female1014?: Maybe<Scalars['Int']['output']>;
  female1519?: Maybe<Scalars['Int']['output']>;
  female2024?: Maybe<Scalars['Int']['output']>;
  female2529?: Maybe<Scalars['Int']['output']>;
  female3034?: Maybe<Scalars['Int']['output']>;
  female3539?: Maybe<Scalars['Int']['output']>;
  female4044?: Maybe<Scalars['Int']['output']>;
  female4549?: Maybe<Scalars['Int']['output']>;
  female5054?: Maybe<Scalars['Int']['output']>;
  female5559?: Maybe<Scalars['Int']['output']>;
  female6064?: Maybe<Scalars['Int']['output']>;
  female6569?: Maybe<Scalars['Int']['output']>;
  femaleSubtotal?: Maybe<Scalars['Int']['output']>;
  femaleUnder1?: Maybe<Scalars['Int']['output']>;
  grandTotal?: Maybe<Scalars['Int']['output']>;
  hfhudcode?: Maybe<Scalars['String']['output']>;
  icd10Code?: Maybe<Scalars['String']['output']>;
  icd10Desc?: Maybe<Scalars['String']['output']>;
  male14?: Maybe<Scalars['Int']['output']>;
  male59?: Maybe<Scalars['Int']['output']>;
  male70Over?: Maybe<Scalars['Int']['output']>;
  male1014?: Maybe<Scalars['Int']['output']>;
  male1519?: Maybe<Scalars['Int']['output']>;
  male2024?: Maybe<Scalars['Int']['output']>;
  male2529?: Maybe<Scalars['Int']['output']>;
  male3034?: Maybe<Scalars['Int']['output']>;
  male3539?: Maybe<Scalars['Int']['output']>;
  male4044?: Maybe<Scalars['Int']['output']>;
  male4549?: Maybe<Scalars['Int']['output']>;
  male5054?: Maybe<Scalars['Int']['output']>;
  male5559?: Maybe<Scalars['Int']['output']>;
  male6064?: Maybe<Scalars['Int']['output']>;
  male6569?: Maybe<Scalars['Int']['output']>;
  maleSubtotal?: Maybe<Scalars['Int']['output']>;
  maleUnder1?: Maybe<Scalars['Int']['output']>;
  reportingYear?: Maybe<Scalars['Int']['output']>;
};

export type HospitalInfo = {
  __typename?: 'HospitalInfo';
  abc?: Maybe<Scalars['Int']['output']>;
  address?: Maybe<Scalars['String']['output']>;
  addressLine2?: Maybe<Scalars['String']['output']>;
  bedCapacity?: Maybe<Scalars['Int']['output']>;
  bor?: Maybe<Scalars['Int']['output']>;
  certifyingBody?: Maybe<Scalars['String']['output']>;
  city?: Maybe<Scalars['String']['output']>;
  country?: Maybe<Scalars['String']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  dohClassification?: Maybe<DohClassification>;
  dohQualityManagement?: Maybe<Scalars['Map_String_DohQualityManagementScalar']['output']>;
  email?: Maybe<Scalars['String']['output']>;
  fax?: Maybe<Scalars['String']['output']>;
  government?: Maybe<Scalars['Int']['output']>;
  hfhudcode?: Maybe<Scalars['String']['output']>;
  hospitalName?: Maybe<Scalars['String']['output']>;
  icGeneral?: Maybe<Scalars['Int']['output']>;
  icPrivate?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  implementedBed?: Maybe<Scalars['Int']['output']>;
  implementingBeds?: Maybe<Scalars['Int']['output']>;
  internationalAccreditation?: Maybe<Scalars['String']['output']>;
  isoValidity?: Maybe<Scalars['String']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  local?: Maybe<Scalars['Int']['output']>;
  mobile?: Maybe<Scalars['String']['output']>;
  national?: Maybe<Scalars['Int']['output']>;
  natureOfOwnership?: Maybe<Scalars['Int']['output']>;
  otherNo?: Maybe<Scalars['String']['output']>;
  philhealthAccreditation?: Maybe<Scalars['String']['output']>;
  philhealthAccreditationValidity?: Maybe<Scalars['String']['output']>;
  qmDescription?: Maybe<Scalars['String']['output']>;
  qmPhilhealthAccreditation?: Maybe<Scalars['Int']['output']>;
  qualityMgmtType?: Maybe<Scalars['Int']['output']>;
  serviceCapability?: Maybe<Scalars['Int']['output']>;
  serviceLevel?: Maybe<Scalars['String']['output']>;
  specialty?: Maybe<Scalars['Int']['output']>;
  specialtySpecify?: Maybe<Scalars['Int']['output']>;
  street?: Maybe<Scalars['String']['output']>;
  telNo?: Maybe<Scalars['String']['output']>;
  traumaCapability?: Maybe<Scalars['Int']['output']>;
  traumaCapable?: Maybe<Scalars['Boolean']['output']>;
  traumaReceiving?: Maybe<Scalars['Boolean']['output']>;
  validityFrom?: Maybe<Scalars['Date']['output']>;
  validityTo?: Maybe<Scalars['Date']['output']>;
  zip?: Maybe<Scalars['String']['output']>;
};

export type HospitalOperationsDeathsDoh = {
  __typename?: 'HospitalOperationsDeathsDOH';
  insert?: Maybe<Scalars['String']['output']>;
  report?: Maybe<DefaultDohResponseDetails>;
  update?: Maybe<Scalars['String']['output']>;
};

export type HospitalOperationsDeathsDto = {
  __typename?: 'HospitalOperationsDeathsDTO';
  response_code?: Maybe<Scalars['String']['output']>;
  response_datetime?: Maybe<Scalars['String']['output']>;
  response_desc?: Maybe<Scalars['String']['output']>;
  response_value?: Maybe<HospitalOperationsDeathsObj>;
};

export type HospitalOperationsDeathsObj = {
  __typename?: 'HospitalOperationsDeathsObj';
  hospitalOperationsDeaths?: Maybe<HospitalOperationsDeathsDoh>;
};

export type HospitalOperationsHaidoh = {
  __typename?: 'HospitalOperationsHAIDOH';
  insert?: Maybe<Scalars['String']['output']>;
  report?: Maybe<DefaultDohResponseDetails>;
  update?: Maybe<Scalars['String']['output']>;
};

export type HospitalOperationsHaidto = {
  __typename?: 'HospitalOperationsHAIDTO';
  response_code?: Maybe<Scalars['String']['output']>;
  response_datetime?: Maybe<Scalars['String']['output']>;
  response_desc?: Maybe<Scalars['String']['output']>;
  response_value?: Maybe<HospitalOperationsHaiObj>;
};

export type HospitalOperationsHaiObj = {
  __typename?: 'HospitalOperationsHAIObj';
  hospitalOperationsHAI?: Maybe<HospitalOperationsHaidoh>;
};

export type HospitalOperationsMajorOptDoh = {
  __typename?: 'HospitalOperationsMajorOptDOH';
  insert?: Maybe<Scalars['String']['output']>;
  report?: Maybe<DefaultDohResponseDetails>;
  update?: Maybe<Scalars['String']['output']>;
};

export type HospitalOperationsMajorOptDto = {
  __typename?: 'HospitalOperationsMajorOptDTO';
  number?: Maybe<Scalars['String']['output']>;
  operationcode?: Maybe<Scalars['String']['output']>;
  response_code?: Maybe<Scalars['String']['output']>;
  response_datetime?: Maybe<Scalars['String']['output']>;
  response_desc?: Maybe<Scalars['String']['output']>;
  response_value?: Maybe<HospitalOperationsMajorOptObj>;
  surgicaloperation?: Maybe<Scalars['String']['output']>;
};

export type HospitalOperationsMajorOptObj = {
  __typename?: 'HospitalOperationsMajorOptObj';
  hospitalOperationsMajorOpt?: Maybe<HospitalOperationsMajorOptDoh>;
};

export type HospitalOperationsMinorOptDoh = {
  __typename?: 'HospitalOperationsMinorOptDOH';
  insert?: Maybe<Scalars['String']['output']>;
  report?: Maybe<DefaultDohResponseDetails>;
  update?: Maybe<Scalars['String']['output']>;
};

export type HospitalOperationsMinorOptDto = {
  __typename?: 'HospitalOperationsMinorOptDTO';
  number?: Maybe<Scalars['String']['output']>;
  operationcode?: Maybe<Scalars['String']['output']>;
  response_code?: Maybe<Scalars['String']['output']>;
  response_datetime?: Maybe<Scalars['String']['output']>;
  response_desc?: Maybe<Scalars['String']['output']>;
  response_value?: Maybe<HospitalOperationsMinorOptObj>;
  surgicaloperation?: Maybe<Scalars['String']['output']>;
};

export type HospitalOperationsMinorOptObj = {
  __typename?: 'HospitalOperationsMinorOptObj';
  hospitalOperationsMinorOpt?: Maybe<HospitalOperationsMinorOptDoh>;
};

export type IcdCode = {
  __typename?: 'ICDCode';
  acrGroupId?: Maybe<Scalars['String']['output']>;
  checkFacilityH1?: Maybe<Scalars['String']['output']>;
  checkFacilityH2?: Maybe<Scalars['String']['output']>;
  diagnosisCode?: Maybe<Scalars['String']['output']>;
  effDate?: Maybe<Scalars['String']['output']>;
  effEndDate?: Maybe<Scalars['String']['output']>;
  longName?: Maybe<Scalars['String']['output']>;
  primaryAmount1?: Maybe<Scalars['BigDecimal']['output']>;
  primaryHospShare1?: Maybe<Scalars['BigDecimal']['output']>;
  primaryProfShare1?: Maybe<Scalars['BigDecimal']['output']>;
  secondaryHospShare?: Maybe<Scalars['BigDecimal']['output']>;
  secondaryProfShare?: Maybe<Scalars['BigDecimal']['output']>;
  shortName?: Maybe<Scalars['String']['output']>;
};

export type IsListOfAccounts = {
  __typename?: 'ISListOfAccounts';
  amount?: Maybe<Scalars['Map_String_BigDecimalScalar']['output']>;
  code?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  header?: Maybe<Scalars['String']['output']>;
};

export type IsListOfAccountsInput = {
  amount?: InputMaybe<Scalars['Map_String_BigDecimalScalar']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  header?: InputMaybe<Scalars['String']['input']>;
};

export type IsPeriodDateRangeChild = {
  __typename?: 'ISPeriodDateRangeChild';
  end?: Maybe<Scalars['LocalDate']['output']>;
  key?: Maybe<Scalars['Int']['output']>;
  label?: Maybe<Scalars['String']['output']>;
  start?: Maybe<Scalars['LocalDate']['output']>;
};

export type IncomeStatementAccount = {
  __typename?: 'IncomeStatementAccount';
  account?: Maybe<Scalars['String']['output']>;
  code?: Maybe<Scalars['String']['output']>;
};

export type IncomeStatementFormat = {
  __typename?: 'IncomeStatementFormat';
  header?: Maybe<Scalars['String']['output']>;
  listOfAccounts?: Maybe<Array<Maybe<IsListOfAccounts>>>;
  order?: Maybe<Scalars['Int']['output']>;
  total?: Maybe<Scalars['BigDecimal']['output']>;
};

export type IncomeStatementFormatInput = {
  header?: InputMaybe<Scalars['String']['input']>;
  listOfAccounts?: InputMaybe<Array<InputMaybe<IsListOfAccountsInput>>>;
  order?: InputMaybe<Scalars['Int']['input']>;
  total?: InputMaybe<Scalars['BigDecimal']['input']>;
};

export type IncomeStatementPage = {
  __typename?: 'IncomeStatementPage';
  costOfSales?: Maybe<Array<Maybe<IncomeStatementAccount>>>;
  discounts?: Maybe<Array<Maybe<IncomeStatementAccount>>>;
  expenses?: Maybe<Array<Maybe<IncomeStatementAccount>>>;
  financeCost?: Maybe<Array<Maybe<IncomeStatementAccount>>>;
  grossIncome?: Maybe<Scalars['Map_String_BigDecimalScalar']['output']>;
  grossProfit?: Maybe<Scalars['Map_String_BigDecimalScalar']['output']>;
  isPeriodDateRangeChildList?: Maybe<Array<Maybe<IsPeriodDateRangeChild>>>;
  mapCostOfSales?: Maybe<Scalars['Map_String_Map_String_BigDecimalScalar']['output']>;
  mapDiscounts?: Maybe<Scalars['Map_String_Map_String_BigDecimalScalar']['output']>;
  mapExpenses?: Maybe<Scalars['Map_String_Map_String_BigDecimalScalar']['output']>;
  mapFinanceCost?: Maybe<Scalars['Map_String_Map_String_BigDecimalScalar']['output']>;
  mapOtherIncome?: Maybe<Scalars['Map_String_Map_String_BigDecimalScalar']['output']>;
  mapRevenue?: Maybe<Scalars['Map_String_Map_String_BigDecimalScalar']['output']>;
  mapTotalRevenue?: Maybe<Scalars['Map_String_Map_String_ObjectScalar']['output']>;
  netOpIncome?: Maybe<Scalars['Map_String_BigDecimalScalar']['output']>;
  netProfit?: Maybe<Scalars['Map_String_BigDecimalScalar']['output']>;
  netRevenue?: Maybe<Scalars['Map_String_BigDecimalScalar']['output']>;
  otherIncome?: Maybe<Array<Maybe<IncomeStatementAccount>>>;
  period?: Maybe<Scalars['String']['output']>;
  revenue?: Maybe<Array<Maybe<IncomeStatementAccount>>>;
  totalCostOfSales?: Maybe<Scalars['Map_String_BigDecimalScalar']['output']>;
  totalDiscounts?: Maybe<Scalars['Map_String_BigDecimalScalar']['output']>;
  totalExpenses?: Maybe<Scalars['Map_String_BigDecimalScalar']['output']>;
  totalFinanceCost?: Maybe<Scalars['Map_String_BigDecimalScalar']['output']>;
  totalOtherIncome?: Maybe<Scalars['Map_String_BigDecimalScalar']['output']>;
  totalRevenue?: Maybe<Scalars['Map_String_BigDecimalScalar']['output']>;
};

export type InsuranceCompany = {
  __typename?: 'InsuranceCompany';
  companyAddress?: Maybe<Scalars['String']['output']>;
  companyContactName?: Maybe<Scalars['String']['output']>;
  companyContactNo?: Maybe<Scalars['String']['output']>;
  companyEmail?: Maybe<Scalars['String']['output']>;
  companyName?: Maybe<Scalars['String']['output']>;
  companyType?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  isActive?: Maybe<Scalars['Boolean']['output']>;
};

export type InsuranceCompanyInput = {
  companyAddress?: InputMaybe<Scalars['String']['input']>;
  companyContactName?: InputMaybe<Scalars['String']['input']>;
  companyContactNo?: InputMaybe<Scalars['String']['input']>;
  companyEmail?: InputMaybe<Scalars['String']['input']>;
  companyName?: InputMaybe<Scalars['String']['input']>;
  companyType?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  isActive?: InputMaybe<Scalars['Boolean']['input']>;
};

export type Intake = {
  __typename?: 'Intake';
  bloodIntake?: Maybe<Scalars['Float']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  employee?: Maybe<Employee>;
  entryDateTime?: Maybe<Scalars['Instant']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  ivfIntake?: Maybe<Scalars['Float']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  medicationIntake?: Maybe<Scalars['Float']['output']>;
  multiIVF?: Maybe<Scalars['String']['output']>;
  multiMedication?: Maybe<Scalars['String']['output']>;
  others?: Maybe<Scalars['String']['output']>;
  parentCase?: Maybe<Case>;
  pbIntake?: Maybe<Scalars['Float']['output']>;
  poIntake?: Maybe<Scalars['Float']['output']>;
  remarks?: Maybe<Scalars['String']['output']>;
  total?: Maybe<Scalars['Float']['output']>;
  tpnIntake?: Maybe<Scalars['Float']['output']>;
  tubeIntake?: Maybe<Scalars['Float']['output']>;
};

export type IntakeOutputDto = {
  __typename?: 'IntakeOutputDTO';
  intakeTotal?: Maybe<Scalars['Float']['output']>;
  outputTotal?: Maybe<Scalars['Float']['output']>;
  title?: Maybe<Scalars['String']['output']>;
};

export type Integration = {
  __typename?: 'Integration';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  domain?: Maybe<Scalars['String']['output']>;
  flagValue?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  integrationGroup?: Maybe<IntegrationGroup>;
  integrationItems?: Maybe<Array<Maybe<IntegrationItem>>>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  orderPriority?: Maybe<Scalars['Int']['output']>;
};

export type IntegrationConfig = {
  __typename?: 'IntegrationConfig';
  adminDn?: Maybe<Scalars['String']['output']>;
  enableIntegrtion?: Maybe<Scalars['Boolean']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  ldapUrl?: Maybe<Scalars['String']['output']>;
  middlewateIp?: Maybe<Scalars['String']['output']>;
  nasLocation?: Maybe<Scalars['String']['output']>;
  password?: Maybe<Scalars['String']['output']>;
  port?: Maybe<Scalars['BigDecimal']['output']>;
  smbPass?: Maybe<Scalars['String']['output']>;
  smbUser?: Maybe<Scalars['String']['output']>;
};

export type IntegrationGroup = {
  __typename?: 'IntegrationGroup';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
};

export type IntegrationGroupInput = {
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};

export type IntegrationInput = {
  description?: InputMaybe<Scalars['String']['input']>;
  domain?: InputMaybe<Scalars['String']['input']>;
  flagValue?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  integrationGroup?: InputMaybe<IntegrationGroupInput>;
  integrationItems?: InputMaybe<Array<InputMaybe<IntegrationItemInput>>>;
  orderPriority?: InputMaybe<Scalars['Int']['input']>;
};

export type IntegrationItem = {
  __typename?: 'IntegrationItem';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  details?: Maybe<Scalars['Map_String_StringScalar']['output']>;
  disabledProperty?: Maybe<Scalars['String']['output']>;
  disabledValue?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  integration?: Maybe<Integration>;
  journalAccount?: Maybe<CoaPattern>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  multiple?: Maybe<Scalars['Boolean']['output']>;
  sourceColumn?: Maybe<Scalars['String']['output']>;
  valueProperty?: Maybe<Scalars['String']['output']>;
};

export type IntegrationItemInput = {
  details?: InputMaybe<Scalars['Map_String_StringScalar']['input']>;
  disabledProperty?: InputMaybe<Scalars['String']['input']>;
  disabledValue?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  integration?: InputMaybe<IntegrationInput>;
  journalAccount?: InputMaybe<CoaPatternInput>;
  multiple?: InputMaybe<Scalars['Boolean']['input']>;
  sourceColumn?: InputMaybe<Scalars['String']['input']>;
  valueProperty?: InputMaybe<Scalars['String']['input']>;
};

export type Inventory = {
  __typename?: 'Inventory';
  active?: Maybe<Scalars['Boolean']['output']>;
  allowTrade?: Maybe<Scalars['Boolean']['output']>;
  brand?: Maybe<Scalars['String']['output']>;
  calculatedAmount?: Maybe<Scalars['BigDecimal']['output']>;
  consignment?: Maybe<Scalars['Boolean']['output']>;
  depId?: Maybe<Scalars['UUID']['output']>;
  department?: Maybe<Department>;
  descLong?: Maybe<Scalars['String']['output']>;
  expiration_date?: Maybe<Scalars['Instant']['output']>;
  fixAsset?: Maybe<Scalars['Boolean']['output']>;
  fluid?: Maybe<Scalars['Boolean']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  isMedicine?: Maybe<Scalars['Boolean']['output']>;
  item?: Maybe<Item>;
  itemCategory?: Maybe<Scalars['String']['output']>;
  itemCode?: Maybe<Scalars['String']['output']>;
  itemId?: Maybe<Scalars['UUID']['output']>;
  item_category?: Maybe<Scalars['UUID']['output']>;
  item_group?: Maybe<Scalars['UUID']['output']>;
  lastUnitCost?: Maybe<Scalars['BigDecimal']['output']>;
  last_wcost?: Maybe<Scalars['BigDecimal']['output']>;
  onHand?: Maybe<Scalars['Int']['output']>;
  production?: Maybe<Scalars['Boolean']['output']>;
  reOrderQty?: Maybe<Scalars['Int']['output']>;
  sku?: Maybe<Scalars['String']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  unitMeasurement?: Maybe<Scalars['String']['output']>;
};

export type InventoryDto = {
  __typename?: 'InventoryDto';
  last_wcost?: Maybe<Scalars['BigDecimal']['output']>;
  monthly_count?: Maybe<Scalars['Int']['output']>;
  onhand?: Maybe<Scalars['Int']['output']>;
};

export type InventoryItem = {
  __typename?: 'InventoryItem';
  allowTrade?: Maybe<Scalars['Boolean']['output']>;
  brand?: Maybe<Scalars['String']['output']>;
  calculatedAmount?: Maybe<Scalars['BigDecimal']['output']>;
  descLong?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  itemCode?: Maybe<Scalars['String']['output']>;
  itemId?: Maybe<Scalars['UUID']['output']>;
  lastUnitCost?: Maybe<Scalars['BigDecimal']['output']>;
  onHand?: Maybe<Scalars['Long']['output']>;
  reorderQty?: Maybe<Scalars['BigDecimal']['output']>;
  sku?: Maybe<Scalars['String']['output']>;
};

export type InventoryLedger = {
  __typename?: 'InventoryLedger';
  billing?: Maybe<Scalars['UUID']['output']>;
  billingItem?: Maybe<Scalars['UUID']['output']>;
  canceledref?: Maybe<Scalars['UUID']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  destinationDep?: Maybe<Department>;
  details?: Maybe<Scalars['Map_String_StringScalar']['output']>;
  documentTypes?: Maybe<DocumentTypes>;
  domain?: Maybe<Scalars['String']['output']>;
  flagValue?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  isInclude?: Maybe<Scalars['Boolean']['output']>;
  item?: Maybe<Item>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  ledgerDate?: Maybe<Scalars['Instant']['output']>;
  ledgerPhysical?: Maybe<Scalars['Int']['output']>;
  ledgerQtyIn?: Maybe<Scalars['Int']['output']>;
  ledgerQtyOut?: Maybe<Scalars['Int']['output']>;
  ledgerUnitCost?: Maybe<Scalars['BigDecimal']['output']>;
  postedLedger?: Maybe<Scalars['UUID']['output']>;
  referenceNo?: Maybe<Scalars['String']['output']>;
  sourceDep?: Maybe<Department>;
};

export type Investor = {
  __typename?: 'Investor';
  active?: Maybe<Scalars['Boolean']['output']>;
  address?: Maybe<Scalars['String']['output']>;
  arno?: Maybe<Scalars['String']['output']>;
  /** Get all Investor Payment Ledgers */
  balance?: Maybe<Scalars['BigDecimal']['output']>;
  barangay?: Maybe<Scalars['String']['output']>;
  city?: Maybe<Scalars['String']['output']>;
  civilStatus?: Maybe<Scalars['String']['output']>;
  contactNumbers?: Maybe<Array<Maybe<MoreInformation>>>;
  country?: Maybe<Scalars['String']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  dateOfFullPayment?: Maybe<Scalars['Instant']['output']>;
  datepaid?: Maybe<Scalars['Instant']['output']>;
  dependents?: Maybe<Array<Maybe<InvestorDependent>>>;
  dob?: Maybe<Scalars['Instant']['output']>;
  educationalAttainment?: Maybe<Scalars['String']['output']>;
  emailAddress?: Maybe<Scalars['String']['output']>;
  firstname?: Maybe<Scalars['String']['output']>;
  fullName?: Maybe<Scalars['String']['output']>;
  gender?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  identifications?: Maybe<Array<Maybe<MoreInformation>>>;
  investorNo?: Maybe<Scalars['String']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  lastname?: Maybe<Scalars['String']['output']>;
  middlename?: Maybe<Scalars['String']['output']>;
  noofdaysleft?: Maybe<Scalars['BigDecimal']['output']>;
  officeAddress?: Maybe<Scalars['String']['output']>;
  /** Get all Investor Payment Ledgers */
  paymentLedgers?: Maybe<Array<Maybe<InvestorPaymentLedgerDto>>>;
  /** Get all Investor Payment Ledgers with Running Balance */
  paymentLedgersRunningBalance?: Maybe<Array<Maybe<InvestorPaymentLedgerRunningBalanceDto>>>;
  placeOfBirth?: Maybe<Scalars['String']['output']>;
  presentEmployer?: Maybe<Scalars['String']['output']>;
  profession?: Maybe<Scalars['String']['output']>;
  province?: Maybe<Scalars['String']['output']>;
  referredBy?: Maybe<Employee>;
  stockCertNo?: Maybe<Scalars['String']['output']>;
  subscriptions?: Maybe<Array<Maybe<Subscription>>>;
  suffix?: Maybe<Scalars['String']['output']>;
  tinNo?: Maybe<Scalars['String']['output']>;
  totalPaidInSubscription?: Maybe<Scalars['BigDecimal']['output']>;
  totalPaidSubscriptions?: Maybe<Scalars['BigDecimal']['output']>;
  totalSubscription?: Maybe<Scalars['BigDecimal']['output']>;
  totalUnpaidSubscriptions?: Maybe<Scalars['BigDecimal']['output']>;
  unpaidSubscriptions?: Maybe<Array<Maybe<Subscription>>>;
  version?: Maybe<Scalars['String']['output']>;
  zipCode?: Maybe<Scalars['String']['output']>;
};

export type InvestorAttachment = {
  __typename?: 'InvestorAttachment';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  dependent?: Maybe<InvestorDependent>;
  description?: Maybe<Scalars['String']['output']>;
  filename?: Maybe<Scalars['String']['output']>;
  hide?: Maybe<Scalars['Boolean']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  investor?: Maybe<Investor>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  mimetype?: Maybe<Scalars['String']['output']>;
  title?: Maybe<Scalars['String']['output']>;
  urlPath?: Maybe<Scalars['String']['output']>;
};

export type InvestorConfig = {
  __typename?: 'InvestorConfig';
  parValue?: Maybe<Constant>;
  subscriptionRebate?: Maybe<Constant>;
  subscriptionRebateType?: Maybe<Constant>;
};

export type InvestorDependent = {
  __typename?: 'InvestorDependent';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  dob?: Maybe<Scalars['Instant']['output']>;
  firstname?: Maybe<Scalars['String']['output']>;
  fullName?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  investor?: Maybe<Investor>;
  investorId?: Maybe<Scalars['String']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  lastname?: Maybe<Scalars['String']['output']>;
  middlename?: Maybe<Scalars['String']['output']>;
  relationToInvestor?: Maybe<Scalars['String']['output']>;
  suffix?: Maybe<Scalars['String']['output']>;
  type?: Maybe<DependentType>;
  useInvestorId?: Maybe<Scalars['Boolean']['output']>;
};

export type InvestorIdFullNameDto = {
  __typename?: 'InvestorIdFullNameDto';
  dependentId?: Maybe<Scalars['String']['output']>;
  fullName?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['String']['output']>;
};

export enum InvestorLedgerTransactionType {
  InvestorDiscount = 'INVESTOR_DISCOUNT',
  InvestorPayment = 'INVESTOR_PAYMENT',
  InvestorPaymentVoid = 'INVESTOR_PAYMENT_VOID',
  InvestorSubscription = 'INVESTOR_SUBSCRIPTION'
}

export type InvestorPaymentLedger = {
  __typename?: 'InvestorPaymentLedger';
  additionalPaidInCapital?: Maybe<Scalars['BigDecimal']['output']>;
  advancesFromInvestors?: Maybe<Scalars['BigDecimal']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  credit?: Maybe<Scalars['BigDecimal']['output']>;
  debit?: Maybe<Scalars['BigDecimal']['output']>;
  details?: Maybe<Scalars['Map_String_StringScalar']['output']>;
  discountOnShareCapital?: Maybe<Scalars['BigDecimal']['output']>;
  domain?: Maybe<Scalars['String']['output']>;
  flagValue?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  investor?: Maybe<Investor>;
  isVoided?: Maybe<Scalars['Boolean']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  ledgerHeader?: Maybe<Scalars['UUID']['output']>;
  particular?: Maybe<Scalars['String']['output']>;
  paymentLedgerRefId?: Maybe<InvestorPaymentLedger>;
  paymentTracker?: Maybe<PaymentTracker>;
  remarks?: Maybe<Scalars['String']['output']>;
  shareCapital?: Maybe<Scalars['BigDecimal']['output']>;
  shareCapitalCommonShare?: Maybe<Scalars['BigDecimal']['output']>;
  shareCapitalPremium?: Maybe<Scalars['BigDecimal']['output']>;
  subscribedShareCapital?: Maybe<Scalars['BigDecimal']['output']>;
  subscribedShareCapitalPremium?: Maybe<Scalars['BigDecimal']['output']>;
  subscription?: Maybe<Subscription>;
  subscriptionReceivable?: Maybe<Scalars['BigDecimal']['output']>;
  total?: Maybe<Scalars['BigDecimal']['output']>;
  type?: Maybe<InvestorLedgerTransactionType>;
};

export type InvestorPaymentLedgerDto = {
  __typename?: 'InvestorPaymentLedgerDto';
  acquiringBank?: Maybe<Scalars['String']['output']>;
  checkDate?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['String']['output']>;
  credit?: Maybe<Scalars['BigDecimal']['output']>;
  debit?: Maybe<Scalars['BigDecimal']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  investorId?: Maybe<Scalars['String']['output']>;
  isVoided?: Maybe<Scalars['Boolean']['output']>;
  modeOfPayment?: Maybe<Scalars['String']['output']>;
  particular?: Maybe<Scalars['String']['output']>;
  ptdCreatedDate?: Maybe<Scalars['String']['output']>;
  receiptNumber?: Maybe<Scalars['String']['output']>;
  receiptType?: Maybe<Scalars['String']['output']>;
  referenceNumber?: Maybe<Scalars['String']['output']>;
  shiftId?: Maybe<Scalars['String']['output']>;
  shiftNumber?: Maybe<Scalars['String']['output']>;
  subscriptionCode?: Maybe<Scalars['String']['output']>;
  subscriptionCreatedDate?: Maybe<Scalars['String']['output']>;
  subscriptionId?: Maybe<Scalars['String']['output']>;
  subscriptionNumber?: Maybe<Scalars['String']['output']>;
  type?: Maybe<Scalars['String']['output']>;
};

export type InvestorPaymentLedgerRunningBalanceDto = {
  __typename?: 'InvestorPaymentLedgerRunningBalanceDto';
  balance?: Maybe<Scalars['BigDecimal']['output']>;
  createdDate?: Maybe<Scalars['String']['output']>;
  credit?: Maybe<Scalars['BigDecimal']['output']>;
  debit?: Maybe<Scalars['BigDecimal']['output']>;
  modeOfPayment?: Maybe<Scalars['String']['output']>;
  particular?: Maybe<Scalars['String']['output']>;
  remarks?: Maybe<Scalars['String']['output']>;
  type?: Maybe<Scalars['String']['output']>;
};

export type IssuanceBarcodeItemDto = {
  __typename?: 'IssuanceBarcodeItemDto';
  id?: Maybe<Scalars['UUID']['output']>;
  item?: Maybe<Item>;
  itemCategory?: Maybe<Scalars['String']['output']>;
  wcost?: Maybe<Scalars['BigDecimal']['output']>;
};

export type Item = {
  __typename?: 'Item';
  accountingCategory?: Maybe<AccountingCategory>;
  accountingExpenseCategory?: Maybe<AccountingCategory>;
  active?: Maybe<Scalars['Boolean']['output']>;
  actualUnitCost?: Maybe<Scalars['BigDecimal']['output']>;
  barcode?: Maybe<Scalars['String']['output']>;
  brand?: Maybe<Scalars['String']['output']>;
  comlogicMedicineCode?: Maybe<Scalars['String']['output']>;
  comlogicMedicineGenericCode?: Maybe<Scalars['String']['output']>;
  consignment?: Maybe<Scalars['Boolean']['output']>;
  consignor?: Maybe<Scalars['UUID']['output']>;
  consignorName?: Maybe<Scalars['String']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  descLong?: Maybe<Scalars['String']['output']>;
  dimensions?: Maybe<Scalars['String']['output']>;
  discountable?: Maybe<Scalars['Boolean']['output']>;
  fixAsset?: Maybe<Scalars['Boolean']['output']>;
  fixedAssetCategory?: Maybe<FixedAssetCategory>;
  flagValue?: Maybe<Scalars['String']['output']>;
  fluid?: Maybe<Scalars['Boolean']['output']>;
  gas?: Maybe<Scalars['Boolean']['output']>;
  genericName?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  isEdpms?: Maybe<Scalars['Boolean']['output']>;
  isLifeSupport?: Maybe<Scalars['Boolean']['output']>;
  isMedicine?: Maybe<Scalars['Boolean']['output']>;
  itemCode?: Maybe<Scalars['String']['output']>;
  item_category?: Maybe<ItemCategory>;
  item_conversion?: Maybe<Scalars['Int']['output']>;
  item_demand_qty?: Maybe<Scalars['BigDecimal']['output']>;
  item_dfs?: Maybe<Scalars['String']['output']>;
  item_generics?: Maybe<Generic>;
  item_group?: Maybe<ItemGroup>;
  item_markup?: Maybe<Scalars['BigDecimal']['output']>;
  item_maximum?: Maybe<Scalars['BigDecimal']['output']>;
  item_minimum?: Maybe<Scalars['BigDecimal']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  markupLock?: Maybe<Scalars['Boolean']['output']>;
  nonpnf?: Maybe<Scalars['Boolean']['output']>;
  otcPrice?: Maybe<Scalars['BigDecimal']['output']>;
  pnf?: Maybe<Scalars['Boolean']['output']>;
  production?: Maybe<Scalars['Boolean']['output']>;
  reagent?: Maybe<Scalars['Boolean']['output']>;
  sellingPrice?: Maybe<Scalars['BigDecimal']['output']>;
  sku?: Maybe<Scalars['String']['output']>;
  stockCode?: Maybe<Scalars['String']['output']>;
  unitMeasure?: Maybe<Scalars['String']['output']>;
  unitMeasurement?: Maybe<Scalars['String']['output']>;
  unit_of_purchase?: Maybe<UnitMeasurement>;
  unit_of_usage?: Maybe<UnitMeasurement>;
  vatable?: Maybe<Scalars['Boolean']['output']>;
};

export type ItemCategory = {
  __typename?: 'ItemCategory';
  categoryCode?: Maybe<Scalars['String']['output']>;
  categoryDescription?: Maybe<Scalars['String']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  isActive?: Maybe<Scalars['Boolean']['output']>;
  itemGroup?: Maybe<ItemGroup>;
  /** List of Item Group items */
  items?: Maybe<Array<Maybe<Item>>>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
};

export type ItemCategoryInput = {
  categoryCode?: InputMaybe<Scalars['String']['input']>;
  categoryDescription?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  isActive?: InputMaybe<Scalars['Boolean']['input']>;
  itemGroup?: InputMaybe<ItemGroupInput>;
};

export type ItemCheckDto = {
  __typename?: 'ItemCheckDTO';
  item?: Maybe<Item>;
  withPrice?: Maybe<Scalars['Boolean']['output']>;
};

export type ItemGroup = {
  __typename?: 'ItemGroup';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  groupCategories?: Maybe<Array<Maybe<ItemCategory>>>;
  id?: Maybe<Scalars['UUID']['output']>;
  isActive?: Maybe<Scalars['Boolean']['output']>;
  itemCode?: Maybe<Scalars['String']['output']>;
  itemDescription?: Maybe<Scalars['String']['output']>;
  /** List of Item Category items */
  items?: Maybe<Array<Maybe<Item>>>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
};

export type ItemGroupInput = {
  groupCategories?: InputMaybe<Array<InputMaybe<ItemCategoryInput>>>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  isActive?: InputMaybe<Scalars['Boolean']['input']>;
  itemCode?: InputMaybe<Scalars['String']['input']>;
  itemDescription?: InputMaybe<Scalars['String']['input']>;
};

export type ItemInput = {
  accountingCategory?: InputMaybe<AccountingCategoryInput>;
  accountingExpenseCategory?: InputMaybe<AccountingCategoryInput>;
  active?: InputMaybe<Scalars['Boolean']['input']>;
  actualUnitCost?: InputMaybe<Scalars['BigDecimal']['input']>;
  barcode?: InputMaybe<Scalars['String']['input']>;
  brand?: InputMaybe<Scalars['String']['input']>;
  comlogicMedicineCode?: InputMaybe<Scalars['String']['input']>;
  comlogicMedicineGenericCode?: InputMaybe<Scalars['String']['input']>;
  consignment?: InputMaybe<Scalars['Boolean']['input']>;
  consignor?: InputMaybe<Scalars['UUID']['input']>;
  consignorName?: InputMaybe<Scalars['String']['input']>;
  descLong?: InputMaybe<Scalars['String']['input']>;
  dimensions?: InputMaybe<Scalars['String']['input']>;
  discountable?: InputMaybe<Scalars['Boolean']['input']>;
  fixAsset?: InputMaybe<Scalars['Boolean']['input']>;
  fixedAssetCategory?: InputMaybe<FixedAssetCategoryInput>;
  flagValue?: InputMaybe<Scalars['String']['input']>;
  fluid?: InputMaybe<Scalars['Boolean']['input']>;
  gas?: InputMaybe<Scalars['Boolean']['input']>;
  genericName?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  isEdpms?: InputMaybe<Scalars['Boolean']['input']>;
  isLifeSupport?: InputMaybe<Scalars['Boolean']['input']>;
  isMedicine?: InputMaybe<Scalars['Boolean']['input']>;
  itemCode?: InputMaybe<Scalars['String']['input']>;
  item_category?: InputMaybe<ItemCategoryInput>;
  item_conversion?: InputMaybe<Scalars['Int']['input']>;
  item_demand_qty?: InputMaybe<Scalars['BigDecimal']['input']>;
  item_dfs?: InputMaybe<Scalars['String']['input']>;
  item_generics?: InputMaybe<GenericInput>;
  item_group?: InputMaybe<ItemGroupInput>;
  item_markup?: InputMaybe<Scalars['BigDecimal']['input']>;
  item_maximum?: InputMaybe<Scalars['BigDecimal']['input']>;
  item_minimum?: InputMaybe<Scalars['BigDecimal']['input']>;
  markupLock?: InputMaybe<Scalars['Boolean']['input']>;
  nonpnf?: InputMaybe<Scalars['Boolean']['input']>;
  otcPrice?: InputMaybe<Scalars['BigDecimal']['input']>;
  pnf?: InputMaybe<Scalars['Boolean']['input']>;
  production?: InputMaybe<Scalars['Boolean']['input']>;
  reagent?: InputMaybe<Scalars['Boolean']['input']>;
  sellingPrice?: InputMaybe<Scalars['BigDecimal']['input']>;
  sku?: InputMaybe<Scalars['String']['input']>;
  stockCode?: InputMaybe<Scalars['String']['input']>;
  unitMeasure?: InputMaybe<Scalars['String']['input']>;
  unit_of_purchase?: InputMaybe<UnitMeasurementInput>;
  unit_of_usage?: InputMaybe<UnitMeasurementInput>;
  vatable?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ItemPriceControl = {
  __typename?: 'ItemPriceControl';
  amountValue?: Maybe<Scalars['BigDecimal']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  item?: Maybe<Item>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  locked?: Maybe<Scalars['Boolean']['output']>;
  percentageValue?: Maybe<Scalars['BigDecimal']['output']>;
  priceTierDetail?: Maybe<PriceTierDetail>;
};

export type ItemPriceControlDto = {
  __typename?: 'ItemPriceControlDto';
  addon?: Maybe<Scalars['BigDecimal']['output']>;
  amountValue?: Maybe<Scalars['BigDecimal']['output']>;
  basePrice?: Maybe<Scalars['BigDecimal']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  item?: Maybe<Item>;
  locked?: Maybe<Scalars['Boolean']['output']>;
  margin?: Maybe<Scalars['BigDecimal']['output']>;
  percentageValue?: Maybe<Scalars['BigDecimal']['output']>;
  tierDetail?: Maybe<PriceTierDetail>;
  totalMarkup?: Maybe<Scalars['BigDecimal']['output']>;
};

export type ItemPriceList = {
  __typename?: 'ItemPriceList';
  markup?: Maybe<Markup>;
  sellingPrice?: Maybe<Scalars['BigDecimal']['output']>;
  vat?: Maybe<Scalars['BigDecimal']['output']>;
};

export type ItemServiceDto = {
  __typename?: 'ItemServiceDto';
  desc?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  proccessCode?: Maybe<Scalars['String']['output']>;
};

export enum ItemTypes {
  Diagnostics = 'DIAGNOSTICS',
  Medicines = 'MEDICINES',
  Supplies = 'SUPPLIES'
}

export type JsonObject = {
  __typename?: 'JSONObject';
  NULL?: Maybe<Scalars['ObjectScalar']['output']>;
  null: Scalars['Boolean']['output'];
};


export type JsonObjectNullArgs = {
  arg0?: InputMaybe<Scalars['String']['input']>;
};

export type JobTitle = {
  __typename?: 'JobTitle';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  status?: Maybe<JobTitleStatus>;
  value?: Maybe<Scalars['String']['output']>;
};

export enum JobTitleStatus {
  Active = 'ACTIVE',
  Inactive = 'INACTIVE'
}

export type JournalEntryViewDto = {
  __typename?: 'JournalEntryViewDto';
  code?: Maybe<Scalars['String']['output']>;
  credit?: Maybe<Scalars['BigDecimal']['output']>;
  debit?: Maybe<Scalars['BigDecimal']['output']>;
  desc?: Maybe<Scalars['String']['output']>;
};

export enum JournalPlacement {
  Credit = 'CREDIT',
  Debit = 'DEBIT'
}

export enum JournalType {
  All = 'ALL',
  Disbursement = 'DISBURSEMENT',
  General = 'GENERAL',
  PurchasesPayables = 'PURCHASES_PAYABLES',
  Receipts = 'RECEIPTS',
  Sales = 'SALES',
  Xxxx = 'XXXX'
}

export type LeadingErConsult = {
  __typename?: 'LeadingErConsult';
  erconsultaions?: Maybe<Scalars['String']['output']>;
  hfhucode?: Maybe<Scalars['String']['output']>;
  icdCategory?: Maybe<Scalars['String']['output']>;
  icdCode?: Maybe<Scalars['String']['output']>;
  number?: Maybe<Scalars['String']['output']>;
  reportingyear?: Maybe<Scalars['Instant']['output']>;
};

export type Ledger = {
  __typename?: 'Ledger';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  credit?: Maybe<Scalars['BigDecimal']['output']>;
  debit?: Maybe<Scalars['BigDecimal']['output']>;
  header?: Maybe<HeaderLedger>;
  id?: Maybe<Scalars['UUID']['output']>;
  journalAccount?: Maybe<ChartOfAccountGenerate>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  particulars?: Maybe<Scalars['String']['output']>;
  totalAppliedOr?: Maybe<Scalars['BigDecimal']['output']>;
};

export enum LedgerDocType {
  Aj = 'AJ',
  Am = 'AM',
  Ap = 'AP',
  Ar = 'AR',
  Bb = 'BB',
  Ca = 'CA',
  Ch = 'CH',
  Ck = 'CK',
  Cm = 'CM',
  Cn = 'CN',
  Cs = 'CS',
  Dm = 'DM',
  Ds = 'DS',
  Ei = 'EI',
  Inv = 'INV',
  Jv = 'JV',
  Or = 'OR',
  Pa = 'PA',
  Pc = 'PC',
  Qa = 'QA',
  Rm = 'RM',
  Rr = 'RR',
  Rt = 'RT',
  Si = 'SI',
  Xx = 'XX'
}

export type LedgerDtoInput = {
  destinationDep?: InputMaybe<DepartmentInput>;
  documentTypes?: InputMaybe<Scalars['UUID']['input']>;
  isInclude?: InputMaybe<Scalars['Boolean']['input']>;
  item?: InputMaybe<Scalars['UUID']['input']>;
  ledgerDate?: InputMaybe<Scalars['Instant']['input']>;
  ledgerPhysical?: InputMaybe<Scalars['Int']['input']>;
  ledgerQtyIn?: InputMaybe<Scalars['Int']['input']>;
  ledgerQtyOut?: InputMaybe<Scalars['Int']['input']>;
  ledgerUnitCost?: InputMaybe<Scalars['BigDecimal']['input']>;
  referenceNo?: InputMaybe<Scalars['String']['input']>;
  sourceDep?: InputMaybe<DepartmentInput>;
};

export type LedgerInput = {
  credit?: InputMaybe<Scalars['BigDecimal']['input']>;
  debit?: InputMaybe<Scalars['BigDecimal']['input']>;
  header?: InputMaybe<HeaderLedgerInput>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  journalAccount?: InputMaybe<ChartOfAccountGenerateInput>;
  particulars?: InputMaybe<Scalars['String']['input']>;
  totalAppliedOr?: InputMaybe<Scalars['BigDecimal']['input']>;
};

export type LedgerView = {
  __typename?: 'LedgerView';
  ledgerPage?: Maybe<Array<Maybe<Scalars['Map_String_ObjectScalar']['output']>>>;
  totalCredit?: Maybe<Scalars['BigDecimal']['output']>;
  totalDebit?: Maybe<Scalars['BigDecimal']['output']>;
};

export type LedgerViewContainer = {
  __typename?: 'LedgerViewContainer';
  ledgerPage?: Maybe<Page_Ledger>;
  totalCredit?: Maybe<Scalars['BigDecimal']['output']>;
  totalDebit?: Maybe<Scalars['BigDecimal']['output']>;
};

export type LineType = {
  __typename?: 'LineType';
  bold?: Maybe<Scalars['Boolean']['output']>;
  boldUnderlined?: Maybe<Scalars['Boolean']['output']>;
  caption?: Maybe<Scalars['String']['output']>;
  children?: Maybe<Array<Maybe<LineType>>>;
  code?: Maybe<Scalars['String']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  fixedValue?: Maybe<Scalars['BigDecimal']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  orderLine?: Maybe<Scalars['String']['output']>;
  parentLineType?: Maybe<LineType>;
  report?: Maybe<FinancialReport>;
  showDepartment?: Maybe<Scalars['Boolean']['output']>;
  showMotherAccount?: Maybe<Scalars['Boolean']['output']>;
  showSubSub?: Maybe<Scalars['Boolean']['output']>;
  sourceLineTypes?: Maybe<Array<Maybe<SourceLineType>>>;
  sourceMotherAccounts?: Maybe<Array<Maybe<SourceMotherAccount>>>;
  sourceSubAccountList?: Maybe<Array<Maybe<SourceSubAccount>>>;
  sourceType?: Maybe<SourceType>;
};

export enum LineTypeOperationType {
  Add = 'ADD',
  Division = 'DIVISION',
  Multiplication = 'MULTIPLICATION',
  Subtract = 'SUBTRACT'
}

export type Loan = {
  __typename?: 'Loan';
  bank?: Maybe<Bank>;
  bankAccount?: Maybe<LoanAccounts>;
  compoundType?: Maybe<Scalars['String']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  details?: Maybe<Scalars['Map_String_StringScalar']['output']>;
  domain?: Maybe<Scalars['String']['output']>;
  flagValue?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  interestRate?: Maybe<Scalars['BigDecimal']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  loanAmount?: Maybe<Scalars['BigDecimal']['output']>;
  loanNo?: Maybe<Scalars['String']['output']>;
  loanPayment?: Maybe<Scalars['BigDecimal']['output']>;
  loanPeriod?: Maybe<Scalars['Int']['output']>;
  negativeInterestRate?: Maybe<Scalars['BigDecimal']['output']>;
  negativeLoanAmount?: Maybe<Scalars['BigDecimal']['output']>;
  negativeLoanPayment?: Maybe<Scalars['BigDecimal']['output']>;
  numberOfPayments?: Maybe<Scalars['Int']['output']>;
  paidPayments?: Maybe<Scalars['BigDecimal']['output']>;
  postedLedger?: Maybe<Scalars['UUID']['output']>;
  referenceNo?: Maybe<Scalars['String']['output']>;
  remainingBalance?: Maybe<Scalars['BigDecimal']['output']>;
  startDate?: Maybe<Scalars['Date']['output']>;
  totalCostOfLoan?: Maybe<Scalars['BigDecimal']['output']>;
  totalInterest?: Maybe<Scalars['BigDecimal']['output']>;
};

export type LoanAccounts = {
  __typename?: 'LoanAccounts';
  accountName?: Maybe<Scalars['String']['output']>;
  accountNo?: Maybe<Scalars['String']['output']>;
  bank?: Maybe<Bank>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
};

export type LoanAmortization = {
  __typename?: 'LoanAmortization';
  bank?: Maybe<Bank>;
  beginningBalance?: Maybe<Scalars['BigDecimal']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  details?: Maybe<Scalars['Map_String_StringScalar']['output']>;
  domain?: Maybe<Scalars['String']['output']>;
  endingBalance?: Maybe<Scalars['BigDecimal']['output']>;
  flagValue?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  interest?: Maybe<Scalars['BigDecimal']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  loan?: Maybe<Loan>;
  negativeInterest?: Maybe<Scalars['BigDecimal']['output']>;
  negativePayment?: Maybe<Scalars['BigDecimal']['output']>;
  negativePrincipal?: Maybe<Scalars['BigDecimal']['output']>;
  orderNo?: Maybe<Scalars['Int']['output']>;
  payment?: Maybe<Scalars['BigDecimal']['output']>;
  paymentDate?: Maybe<Scalars['Date']['output']>;
  postedLedger?: Maybe<Scalars['UUID']['output']>;
  principal?: Maybe<Scalars['BigDecimal']['output']>;
  recordNo?: Maybe<Scalars['String']['output']>;
  referenceNo?: Maybe<Scalars['String']['output']>;
};

export type LoginConfiguration = {
  __typename?: 'LoginConfiguration';
  id?: Maybe<Scalars['UUID']['output']>;
  login_inactive_duration?: Maybe<Scalars['BigDecimal']['output']>;
};

export type LogsCount = {
  __typename?: 'LogsCount';
  count?: Maybe<Scalars['Int']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  physicalCount?: Maybe<PhysicalCount>;
  user?: Maybe<Scalars['String']['output']>;
};

export type MajorOpDto = {
  __typename?: 'MajorOpDto';
  longName?: Maybe<Scalars['String']['output']>;
  proccode?: Maybe<Scalars['String']['output']>;
  total?: Maybe<Scalars['Int']['output']>;
};

export type ManagingPhysician = {
  __typename?: 'ManagingPhysician';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  employee?: Maybe<Employee>;
  id?: Maybe<Scalars['UUID']['output']>;
  isMain?: Maybe<Scalars['Boolean']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  parentCase?: Maybe<Case>;
  position?: Maybe<Scalars['String']['output']>;
  professionalFee?: Maybe<Scalars['BigDecimal']['output']>;
};

export type Markup = {
  __typename?: 'Markup';
  accountingCategory?: Maybe<AccountingCategory>;
  active?: Maybe<Scalars['Boolean']['output']>;
  actualUnitCost?: Maybe<Scalars['BigDecimal']['output']>;
  barcode?: Maybe<Scalars['String']['output']>;
  brand?: Maybe<Scalars['String']['output']>;
  comlogicMedicineCode?: Maybe<Scalars['String']['output']>;
  comlogicMedicineGenericCode?: Maybe<Scalars['String']['output']>;
  consignment?: Maybe<Scalars['Boolean']['output']>;
  consignor?: Maybe<Scalars['UUID']['output']>;
  consignorName?: Maybe<Scalars['String']['output']>;
  descLong?: Maybe<Scalars['String']['output']>;
  discountable?: Maybe<Scalars['Boolean']['output']>;
  fixAsset?: Maybe<Scalars['Boolean']['output']>;
  flagValue?: Maybe<Scalars['String']['output']>;
  fluid?: Maybe<Scalars['Boolean']['output']>;
  gas?: Maybe<Scalars['Boolean']['output']>;
  genericName?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  isEdpms?: Maybe<Scalars['Boolean']['output']>;
  isLifeSupport?: Maybe<Scalars['Boolean']['output']>;
  isMedicine?: Maybe<Scalars['Boolean']['output']>;
  itemCode?: Maybe<Scalars['String']['output']>;
  item_category?: Maybe<ItemCategory>;
  item_conversion?: Maybe<Scalars['Int']['output']>;
  item_demand_qty?: Maybe<Scalars['BigDecimal']['output']>;
  item_dfs?: Maybe<Scalars['String']['output']>;
  item_generics?: Maybe<Generic>;
  item_group?: Maybe<ItemGroup>;
  item_markup?: Maybe<Scalars['BigDecimal']['output']>;
  item_maximum?: Maybe<Scalars['BigDecimal']['output']>;
  item_minimum?: Maybe<Scalars['BigDecimal']['output']>;
  lastUnitCost?: Maybe<Scalars['BigDecimal']['output']>;
  markupLock?: Maybe<Scalars['Boolean']['output']>;
  otcPrice?: Maybe<Scalars['BigDecimal']['output']>;
  production?: Maybe<Scalars['Boolean']['output']>;
  reagent?: Maybe<Scalars['Boolean']['output']>;
  sellingPrice?: Maybe<Scalars['BigDecimal']['output']>;
  sku?: Maybe<Scalars['String']['output']>;
  stockCode?: Maybe<Scalars['String']['output']>;
  unitMeasure?: Maybe<Scalars['String']['output']>;
  unit_of_purchase?: Maybe<UnitMeasurement>;
  unit_of_usage?: Maybe<UnitMeasurement>;
  vatable?: Maybe<Scalars['Boolean']['output']>;
};

export type MatchPatientResultDto = {
  __typename?: 'MatchPatientResultDto';
  dob?: Maybe<Scalars['String']['output']>;
  firstName?: Maybe<Scalars['String']['output']>;
  fullName?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  lastName?: Maybe<Scalars['String']['output']>;
  middleName?: Maybe<Scalars['String']['output']>;
  threshold?: Maybe<Scalars['Float']['output']>;
};

export type MaterialProduction = {
  __typename?: 'MaterialProduction';
  accType?: Maybe<Scalars['UUID']['output']>;
  accountingCategory?: Maybe<AccountingCategory>;
  asset_a?: Maybe<Scalars['BigDecimal']['output']>;
  asset_b?: Maybe<Scalars['BigDecimal']['output']>;
  asset_c?: Maybe<Scalars['BigDecimal']['output']>;
  asset_d?: Maybe<Scalars['BigDecimal']['output']>;
  asset_e?: Maybe<Scalars['BigDecimal']['output']>;
  asset_f?: Maybe<Scalars['BigDecimal']['output']>;
  asset_g?: Maybe<Scalars['BigDecimal']['output']>;
  asset_h?: Maybe<Scalars['BigDecimal']['output']>;
  asset_i?: Maybe<Scalars['BigDecimal']['output']>;
  asset_j?: Maybe<Scalars['BigDecimal']['output']>;
  asset_k?: Maybe<Scalars['BigDecimal']['output']>;
  asset_l?: Maybe<Scalars['BigDecimal']['output']>;
  asset_m?: Maybe<Scalars['BigDecimal']['output']>;
  asset_n?: Maybe<Scalars['BigDecimal']['output']>;
  asset_o?: Maybe<Scalars['BigDecimal']['output']>;
  asset_p?: Maybe<Scalars['BigDecimal']['output']>;
  asset_q?: Maybe<Scalars['BigDecimal']['output']>;
  asset_r?: Maybe<Scalars['BigDecimal']['output']>;
  asset_s?: Maybe<Scalars['BigDecimal']['output']>;
  asset_t?: Maybe<Scalars['BigDecimal']['output']>;
  asset_u?: Maybe<Scalars['BigDecimal']['output']>;
  asset_v?: Maybe<Scalars['BigDecimal']['output']>;
  asset_w?: Maybe<Scalars['BigDecimal']['output']>;
  asset_x?: Maybe<Scalars['BigDecimal']['output']>;
  asset_y?: Maybe<Scalars['BigDecimal']['output']>;
  asset_z?: Maybe<Scalars['BigDecimal']['output']>;
  assignDepartment?: Maybe<Department>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  dateTransaction?: Maybe<Scalars['Instant']['output']>;
  department?: Maybe<Department>;
  description?: Maybe<Scalars['String']['output']>;
  details?: Maybe<Scalars['Map_String_StringScalar']['output']>;
  diff_value?: Maybe<Scalars['BigDecimal']['output']>;
  domain?: Maybe<Scalars['String']['output']>;
  flagValue?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  isPosted?: Maybe<Scalars['Boolean']['output']>;
  item?: Maybe<Item>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  mpNo?: Maybe<Scalars['String']['output']>;
  negative_asset_a?: Maybe<Scalars['BigDecimal']['output']>;
  negative_asset_b?: Maybe<Scalars['BigDecimal']['output']>;
  negative_asset_c?: Maybe<Scalars['BigDecimal']['output']>;
  negative_asset_d?: Maybe<Scalars['BigDecimal']['output']>;
  negative_asset_e?: Maybe<Scalars['BigDecimal']['output']>;
  negative_asset_f?: Maybe<Scalars['BigDecimal']['output']>;
  negative_asset_g?: Maybe<Scalars['BigDecimal']['output']>;
  negative_asset_h?: Maybe<Scalars['BigDecimal']['output']>;
  negative_asset_i?: Maybe<Scalars['BigDecimal']['output']>;
  negative_asset_j?: Maybe<Scalars['BigDecimal']['output']>;
  negative_asset_k?: Maybe<Scalars['BigDecimal']['output']>;
  negative_asset_l?: Maybe<Scalars['BigDecimal']['output']>;
  negative_asset_m?: Maybe<Scalars['BigDecimal']['output']>;
  negative_asset_n?: Maybe<Scalars['BigDecimal']['output']>;
  negative_asset_o?: Maybe<Scalars['BigDecimal']['output']>;
  negative_asset_p?: Maybe<Scalars['BigDecimal']['output']>;
  negative_asset_q?: Maybe<Scalars['BigDecimal']['output']>;
  negative_asset_r?: Maybe<Scalars['BigDecimal']['output']>;
  negative_asset_s?: Maybe<Scalars['BigDecimal']['output']>;
  negative_asset_t?: Maybe<Scalars['BigDecimal']['output']>;
  negative_asset_u?: Maybe<Scalars['BigDecimal']['output']>;
  negative_asset_v?: Maybe<Scalars['BigDecimal']['output']>;
  negative_asset_w?: Maybe<Scalars['BigDecimal']['output']>;
  negative_asset_x?: Maybe<Scalars['BigDecimal']['output']>;
  negative_asset_y?: Maybe<Scalars['BigDecimal']['output']>;
  negative_asset_z?: Maybe<Scalars['BigDecimal']['output']>;
  output_value?: Maybe<Scalars['BigDecimal']['output']>;
  postedLedger?: Maybe<Scalars['UUID']['output']>;
  producedBy?: Maybe<Employee>;
  quantity?: Maybe<Scalars['Int']['output']>;
  source_value?: Maybe<Scalars['BigDecimal']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  unitCost?: Maybe<Scalars['BigDecimal']['output']>;
};

export type MaterialProductionItem = {
  __typename?: 'MaterialProductionItem';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  isPosted?: Maybe<Scalars['Boolean']['output']>;
  item?: Maybe<Item>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  materialProduction?: Maybe<MaterialProduction>;
  qty?: Maybe<Scalars['Int']['output']>;
  type?: Maybe<Scalars['String']['output']>;
  unitCost?: Maybe<Scalars['BigDecimal']['output']>;
  uou?: Maybe<Scalars['String']['output']>;
};

export type Medication = {
  __typename?: 'Medication';
  additive?: Maybe<Item>;
  claimable?: Maybe<Scalars['BigDecimal']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  discontinuedDatetime?: Maybe<Scalars['Instant']['output']>;
  doctorsOrderItemId?: Maybe<Scalars['UUID']['output']>;
  dose?: Maybe<Scalars['String']['output']>;
  entryDateTime?: Maybe<Scalars['Instant']['output']>;
  flowRate?: Maybe<Scalars['String']['output']>;
  frequency?: Maybe<Scalars['String']['output']>;
  hasStockInPharma?: Maybe<Scalars['Boolean']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  /** Get all Medication Administrations */
  medicationAdministrations?: Maybe<Array<Maybe<Administration>>>;
  medicine?: Maybe<Item>;
  noStockOrCancel?: Maybe<Scalars['BigDecimal']['output']>;
  onhand?: Maybe<Scalars['BigDecimal']['output']>;
  orderingPhysician?: Maybe<Employee>;
  parentCase?: Maybe<Case>;
  pending?: Maybe<Scalars['BigDecimal']['output']>;
  remarks?: Maybe<Scalars['String']['output']>;
  route?: Maybe<Scalars['String']['output']>;
  shiftHold?: Maybe<Scalars['String']['output']>;
  type?: Maybe<Scalars['String']['output']>;
  volume?: Maybe<Scalars['String']['output']>;
};

export enum MemberTypes {
  Bundle = 'BUNDLE',
  Package = 'PACKAGE',
  Regular = 'REGULAR'
}

export type MergeReceivableAccount = {
  __typename?: 'MergeReceivableAccount';
  accountName?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
};

export type Message = {
  __typename?: 'Message';
  from?: Maybe<Scalars['String']['output']>;
  message?: Maybe<Scalars['String']['output']>;
  topic?: Maybe<Scalars['String']['output']>;
};

export enum MiscType {
  Ar = 'AR',
  Or = 'OR'
}

export type MoreInformation = {
  __typename?: 'MoreInformation';
  title?: Maybe<Scalars['Map_String_StringScalar']['output']>;
  value?: Maybe<Scalars['String']['output']>;
};

export type MotherAccount = {
  __typename?: 'MotherAccount';
  chartOfAccount?: Maybe<ChartOfAccount>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  subAccount?: Maybe<SubAccountSetup>;
};

export type Municipality = {
  __typename?: 'Municipality';
  id?: Maybe<Scalars['UUID']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  province?: Maybe<ProvinceState>;
};

/** Mutation root */
export type Mutation = {
  __typename?: 'Mutation';
  add2307?: Maybe<Wtx2307Consolidated>;
  addARTransaction?: Maybe<ArTransaction>;
  addBillingItem?: Maybe<GraphQlRetVal_String>;
  addBillingItemCashBasis?: Maybe<GraphQlRetVal_String>;
  addBillingItemFromOrderSlipItems?: Maybe<GraphQlRetVal_String>;
  addChequeEncashmentCollectionDetail?: Maybe<Scalars['Boolean']['output']>;
  addChequeEncashmentSuppDoc?: Maybe<ChequeEncashmentSupportingDoc>;
  addChequeEncashmentTransaction?: Maybe<GraphQlRetVal_String>;
  addCollectionDetail?: Maybe<Scalars['Boolean']['output']>;
  addCompanionMeal?: Maybe<Scalars['Boolean']['output']>;
  addCreditNoteClaimsItem?: Maybe<GraphQlResVal_ArCreditNoteItems>;
  addCustomJV?: Maybe<GraphQlRetVal_Boolean>;
  addDefaultAdmission?: Maybe<GraphQlRetVal_Boolean>;
  addDiscount?: Maybe<Scalars['Boolean']['output']>;
  addDoctorOrder?: Maybe<DoctorOrder>;
  addDoctorOrderForFlutter?: Maybe<DoctorOrder>;
  addEmployeeMeal?: Maybe<Scalars['Boolean']['output']>;
  addEntityDeduction?: Maybe<Scalars['Boolean']['output']>;
  addInitialVitals?: Maybe<Scalars['ObjectScalar']['output']>;
  addIntakesForFlutter?: Maybe<Intake>;
  addInvestorAttachment?: Maybe<GraphQlRetVal_InvestorAttachment>;
  addInvestorPayment?: Maybe<PaymentTracker>;
  addInvoiceClaimsItem?: Maybe<GraphQlResVal_ArInvoiceItems>;
  addInvoiceItem?: Maybe<GraphQlResVal_ArInvoiceItems>;
  addManualJVDynamic?: Maybe<GraphQlRetVal_Boolean>;
  addMedicationForFlutter?: Maybe<Medication>;
  addMultipleBillingScheduleItem?: Maybe<GraphQlRetVal_String>;
  addNeuroVitalSignsForFlutter?: Maybe<NeuroVitalSign>;
  addOrderslip?: Maybe<Array<Maybe<OrderSlipItem>>>;
  addOrderslipFromOrder?: Maybe<Array<Maybe<OrderSlipItem>>>;
  addOtherVitalSignsForFlutter?: Maybe<OtherVitalSign>;
  addOtherVitals?: Maybe<Scalars['ObjectScalar']['output']>;
  addOutputsForFlutter?: Maybe<Output>;
  addPFBillingItem?: Maybe<GraphQlRetVal_String>;
  addPackage?: Maybe<Scalars['Boolean']['output']>;
  addPackageItem?: Maybe<Package>;
  addPanelComponents?: Maybe<Array<Maybe<PanelContent>>>;
  addPayment?: Maybe<PaymentTracker>;
  addPaymentMisc?: Maybe<PaymentTracker>;
  addPhysicianToClinic?: Maybe<GraphQlRetVal_Boolean>;
  addPriceControl?: Maybe<Scalars['ObjectScalar']['output']>;
  addRequest?: Maybe<StockRequest>;
  addSaleTransaction?: Maybe<SalesTransaction>;
  addServicePriceControl?: Maybe<Scalars['ObjectScalar']['output']>;
  addShiftingRecord?: Maybe<Shifting>;
  addSoaGroup?: Maybe<Scalars['Boolean']['output']>;
  addSoaGroupItem?: Maybe<Scalars['Boolean']['output']>;
  addSubAccountToIntegration?: Maybe<Scalars['Boolean']['output']>;
  addSupportingDoc?: Maybe<SupportingDoc>;
  addToCdctr?: Maybe<Scalars['Boolean']['output']>;
  addToCollectionDeposit?: Maybe<CollectionDeposit>;
  addTransferItem?: Maybe<GraphQlResVal_ArInvoiceItems>;
  addVitalSignsForFlutter?: Maybe<VitalSign>;
  add_biometric_device?: Maybe<GraphQlRetVal_BiometricDevice>;
  additionAdmissionKit?: Maybe<GraphQlRetVal_Boolean>;
  adjustJV?: Maybe<GraphQlRetVal_Boolean>;
  agtPatientUpsert?: Maybe<AgtPatient>;
  agtResetPassword?: Maybe<AgtPatient>;
  allowprogress?: Maybe<GraphQlRetVal_Billing>;
  appUpdateStatus?: Maybe<Appointment>;
  appUpdateStatusAdmin?: Maybe<Appointment>;
  applyOr?: Maybe<PaymentTracker>;
  approveAllLedgerByTypeAndDate?: Maybe<GraphQlRetVal_Long>;
  approveAllToLedger?: Maybe<GraphQlRetVal_Long>;
  approveLedger?: Maybe<Scalars['Boolean']['output']>;
  arCreditNotePosting?: Maybe<GraphQlResVal_ArCreditNote>;
  authenticationTest?: Maybe<GraphQlRetVal_AuthenticationTestResponseDto>;
  autoJournalEntry?: Maybe<Scalars['String']['output']>;
  /** insert BEG */
  beginningBalanceInsert?: Maybe<BeginningBalance>;
  calculateAllAccumulatedLogs?: Maybe<GraphQlRetVal_Timekeeping>;
  calculateOneTimekeepingEmployee?: Maybe<GraphQlRetVal_String>;
  cancelBillingItem?: Maybe<BillingOperationResult>;
  cancelPackage?: Maybe<Scalars['ObjectScalar']['output']>;
  changeBillingStatus?: Maybe<GraphQlRetVal_List_Billing>;
  changeCaseActiveTransfer?: Maybe<Case>;
  changeCaseStatus?: Maybe<Case>;
  changePassword?: Maybe<Scalars['String']['output']>;
  /** insert chartsOfAccounts */
  chartsOfAccounts?: Maybe<ChartOfAccount>;
  checkExistingCreditNoteForInvoice?: Maybe<GraphQlResVal_ArCreditNote>;
  clearCards?: Maybe<Scalars['Boolean']['output']>;
  clearChecks?: Maybe<Scalars['Boolean']['output']>;
  clearSchedule?: Maybe<GraphQlRetVal_String>;
  closeFolio?: Maybe<GraphQlRetVal_Billing>;
  closeShiftingRecord?: Maybe<Shifting>;
  comlogik_setting_mutation?: Maybe<ComlogikSetting>;
  /** Copy department schedule from other department */
  copyDepartmentSchedule?: Maybe<GraphQlRetVal_String>;
  copyPriceTier?: Maybe<GraphQlRetVal_String>;
  createARCustomer?: Maybe<GraphQlResVal_ArCustomers>;
  createBilling?: Maybe<Billing>;
  createCreditNote?: Maybe<GraphQlResVal_ArCreditNote>;
  /** Create Eligibility */
  createEligibility?: Maybe<Scalars['ObjectScalar']['output']>;
  /** Create schedule for one employee */
  createEmployeeSchedule?: Maybe<GraphQlRetVal_String>;
  createEmptyInvoice?: Maybe<GraphQlResVal_ArInvoice>;
  createInvoice?: Maybe<GraphQlResVal_ArInvoice>;
  createLogin?: Maybe<GraphQlRetVal_Employee>;
  createNEHEHRSVaccount?: Maybe<GraphQlRetVal_String>;
  createNERvsAccount?: Maybe<GraphQlRetVal_String>;
  createNewAccountBalances?: Maybe<GraphQlResVal_AccountBalances>;
  /** Create New Claim */
  createNewClaim?: Maybe<Scalars['ObjectScalar']['output']>;
  createOrm?: Maybe<Message>;
  createOtcBilling?: Maybe<Billing>;
  delPOMonitoring?: Maybe<PoDeliveryMonitoring>;
  deleteAccountReceivable?: Maybe<AccountReceivable>;
  deleteAddOn?: Maybe<GraphQlRetVal_String>;
  deleteAllowance?: Maybe<GraphQlResVal_Boolean>;
  deleteAllowanceTemplateItem?: Maybe<GraphQlResVal_Boolean>;
  deleteAllowanceTemplates?: Maybe<GraphQlResVal_Boolean>;
  deleteBeginningDetails?: Maybe<Scalars['Boolean']['output']>;
  deleteBiometricAssign?: Maybe<GraphQlRetVal_String>;
  deleteCatheterRecord?: Maybe<CatheterRecord>;
  deleteCentralLineRecord?: Maybe<CentralLineRecord>;
  deleteCollectionDetail?: Maybe<Scalars['Boolean']['output']>;
  deleteDefaultAdmissionItems?: Maybe<DefaultAdmissionItems>;
  /** Delete one department schedule config. */
  deleteDepartmentSchedule?: Maybe<GraphQlRetVal_String>;
  deleteDependents?: Maybe<Scalars['Boolean']['output']>;
  /** Delete DietNote */
  deleteDietNote?: Maybe<GraphQlRetVal_Boolean>;
  deleteEmployeeAllowance?: Maybe<GraphQlResVal_Boolean>;
  deleteEmployeeAttendance?: Maybe<GraphQlRetVal_String>;
  deleteEmployeeBiometric?: Maybe<GraphQlRetVal_String>;
  /** Delete one event calender. */
  deleteEventCalendar?: Maybe<GraphQlRetVal_String>;
  /** insert Integrations */
  deleteIntegration?: Maybe<Scalars['Boolean']['output']>;
  /** insert Integrations */
  deleteIntegrationItem?: Maybe<Scalars['Boolean']['output']>;
  deleteInventoryGlobal?: Maybe<InventoryLedger>;
  deleteInvestorAttachment?: Maybe<GraphQlRetVal_InvestorAttachment>;
  deleteItemFromMasterfile?: Maybe<GraphQlRetVal_Boolean>;
  deleteLineType?: Maybe<Scalars['Boolean']['output']>;
  /** delete Log Count */
  deleteLogCount?: Maybe<LogsCount>;
  deleteMotherAccountSource?: Maybe<Scalars['Boolean']['output']>;
  deleteOtherDeduction?: Maybe<GraphQlResVal_Boolean>;
  deletePackageItem?: Maybe<Package>;
  deletePaymentTransactionType?: Maybe<GraphQlResVal_Boolean>;
  deletePayroll?: Maybe<GraphQlRetVal_String>;
  deletePhysician?: Maybe<Physician>;
  deleteSoaGroup?: Maybe<Scalars['Boolean']['output']>;
  deleteSubAccountSource?: Maybe<Scalars['Boolean']['output']>;
  deleteSupportingDoc?: Maybe<Scalars['Boolean']['output']>;
  deleteSurgicalSiteRecord?: Maybe<SurgicalSiteRecord>;
  deleteVentilatorRecord?: Maybe<VentilatorRecord>;
  deleteVentilatorRecordItem?: Maybe<VentilatorRecordItem>;
  delete_all_courseinthewards?: Maybe<GraphQlRetVal_Object>;
  delete_biometric_device?: Maybe<GraphQlRetVal_BiometricDevice>;
  delete_comlogik_items?: Maybe<Response>;
  deniedItem?: Maybe<PaymentTrackerDetails>;
  depreciateBulkFixedAssets?: Maybe<GraphQlRetVal_List_FixedAssetDepreciation>;
  discontinueOrderItem?: Maybe<Scalars['ObjectScalar']['output']>;
  dohOptDischargeEV?: Maybe<GraphQlRetVal_List_HospOptDischargesEvdto>;
  editBilling?: Maybe<Billing>;
  editedJournalEntry?: Maybe<AccountReceivable>;
  executeMassModifier?: Maybe<GraphQlRetVal_String>;
  expenses?: Maybe<GraphQlRetVal_ExpensesDto>;
  finalizedSoa?: Maybe<GraphQlRetVal_Billing>;
  findPFEmps?: Maybe<Array<Maybe<Employee>>>;
  genInfoBedCapacity?: Maybe<GenInfoBedCapacityResponseDto>;
  genInfoClassification?: Maybe<GenInfoClassificationDto>;
  genInfoQualityManagement?: Maybe<GenInfoQualityManagementDto>;
  /** Generate CF4 */
  generateCf4?: Maybe<Scalars['ObjectScalar']['output']>;
  generateCourseInTheWard?: Maybe<Scalars['String']['output']>;
  generateCreditNoteItemTaxByCreditNoteId?: Maybe<GraphQlResVal_Boolean>;
  generateCreditNoteTax?: Maybe<GraphQlResVal_Boolean>;
  generateCreditNoteVat?: Maybe<GraphQlResVal_Boolean>;
  generateDietTask?: Maybe<Array<Maybe<DietList>>>;
  generateDoctorsRf?: Maybe<Scalars['Boolean']['output']>;
  generateInvoiceTax?: Maybe<GraphQlResVal_Boolean>;
  generateInvoiceVat?: Maybe<GraphQlResVal_Boolean>;
  getEmployeeNo?: Maybe<GraphQlRetVal_String>;
  getTrialBalanceSummary?: Maybe<Array<Maybe<TrialBalanceDto2>>>;
  hideInvestorAttachment?: Maybe<GraphQlRetVal_InvestorAttachment>;
  hospOptDischargesER?: Maybe<GraphQlRetVal_HospOptDischargesErdto>;
  hospOptDischargesEV?: Maybe<GraphQlRetVal_HospOptDischargesEvdto>;
  hospOptDischargesMorbidity?: Maybe<HospOptDischargesMorbidityDto>;
  hospOptDischargesNumberDeliveries?: Maybe<GraphQlRetVal_HospOptDischargesNumberDeliveriesDto>;
  hospOptDischargesOPD?: Maybe<GraphQlRetVal_HospOptDischargesOpddto>;
  hospOptDischargesOPV?: Maybe<GraphQlRetVal_HospOptDischargesOpvdto>;
  hospOptDischargesSpecialty?: Maybe<HospOptDischargesSpecialtyDto>;
  hospOptDischargesSpecialtyOthers?: Maybe<HospOptDischargesSpecialtyDto>;
  hospOptDischargesTesting?: Maybe<HospOptDischargesTestingDto>;
  hospOptSummaryOfPatients?: Maybe<GraphQlRetVal_SummaryOfPatientDto>;
  hospitalOperationsDeaths?: Maybe<HospitalOperationsDeathsDto>;
  hospitalOperationsHAI?: Maybe<HospitalOperationsHaidto>;
  hospitalOperationsMajorOpt?: Maybe<HospitalOperationsMajorOptDto>;
  hospitalOperationsMinorOpt?: Maybe<HospitalOperationsMinorOptDto>;
  hospitalOperationsMortalityDeaths?: Maybe<HospOptMortalityDeathsDto>;
  hospitalOptDischargeER?: Maybe<GraphQlRetVal_List_HospOptDischargesErdto>;
  hrApprovalOrRejectEmployeeRequest?: Maybe<GraphQlRetVal_String>;
  ignoreOrder?: Maybe<DoctorOrder>;
  ignoreOrderItem?: Maybe<Scalars['ObjectScalar']['output']>;
  importInvestorProfile?: Maybe<GraphQlRetVal_String>;
  initiatePhilClaimsUpdate?: Maybe<GraphQlRetVal_String>;
  insertAccRecManualLedger?: Maybe<Scalars['UUID']['output']>;
  insertArTransManualLedger?: Maybe<Scalars['UUID']['output']>;
  insertDepartmentItem?: Maybe<DepartmentItem>;
  insertLedgerMaterialProd?: Maybe<InventoryLedger>;
  insertToInventoryLedger?: Maybe<InventoryLedger>;
  /** Stash Auth */
  integrationAuth?: Maybe<Scalars['ObjectScalar']['output']>;
  invoicePosting?: Maybe<GraphQlResVal_ArInvoice>;
  itemPriceCheck?: Maybe<Array<Maybe<ItemCheckDto>>>;
  /** update insert physical Count */
  loadPhysicalCountItems?: Maybe<GraphQlRetVal_Boolean>;
  loanMAddLoan?: Maybe<GraphQlRetVal_Loan>;
  loanMPaidLoan?: Maybe<GraphQlRetVal_Boolean>;
  loanMStartingEntry?: Maybe<GraphQlRetVal_Boolean>;
  loanMVoidPaidLoan?: Maybe<GraphQlRetVal_Boolean>;
  login?: Maybe<Scalars['String']['output']>;
  /** Mass Post to Ledger */
  massPostInventoryCount?: Maybe<InventoryLedger>;
  massUpdateItemPrices?: Maybe<Array<Maybe<ItemPriceControl>>>;
  /** insert BEG */
  massUpdateMarkup?: Maybe<Item>;
  massUpdateServicePrices?: Maybe<Array<Maybe<ServicePriceControl>>>;
  massUpdateServicesCost?: Maybe<Array<Maybe<Service>>>;
  material_production_mutation?: Maybe<MaterialProduction>;
  migrateEmployee?: Maybe<GraphQlRetVal_String>;
  migrateEmployeeId?: Maybe<GraphQlRetVal_String>;
  mutatePurchaseOrder?: Maybe<PurchaseOrder>;
  mutatePurchaseOrderFixedAsset?: Maybe<GraphQlResVal_PurchaseOrder>;
  /** save diet on case */
  notifyAdmission?: Maybe<Case>;
  overridePriceTier?: Maybe<Billing>;
  overrideRecItems?: Maybe<ReceivingReport>;
  patientMayGoHome?: Maybe<Case>;
  /** insert physical Count */
  physicalCountInsert?: Maybe<PhysicalCount>;
  /** insert physical Count Ledger */
  physicalCountLedger?: Maybe<InventoryLedger>;
  ping_device?: Maybe<GraphQlRetVal_String>;
  /** Add on */
  postAddOn?: Maybe<GraphQlRetVal_String>;
  /** Add Allowance */
  postAllowance?: Maybe<GraphQlRetVal_String>;
  postAp?: Maybe<AccountsPayable>;
  postApManual?: Maybe<GraphQlRetVal_Boolean>;
  postBeginningBalance?: Maybe<GraphQlRetVal_Boolean>;
  postClaim?: Maybe<GraphQlRetVal_Claim>;
  postCreateRsvAccount?: Maybe<Scalars['ObjectScalar']['output']>;
  postDM?: Maybe<DebitMemo>;
  postDManual?: Maybe<GraphQlRetVal_Boolean>;
  postDOHSubmittedReport?: Maybe<GraphQlRetVal_Boolean>;
  postDeleteClaimItem?: Maybe<GraphQlRetVal_ClaimItem>;
  postDietCategory?: Maybe<Scalars['ObjectScalar']['output']>;
  postDisbursement?: Maybe<Disbursement>;
  postDischargeEv?: Maybe<Scalars['ObjectScalar']['output']>;
  postDischargeMobidity?: Maybe<Scalars['ObjectScalar']['output']>;
  postDischargeOpd?: Maybe<GraphQlRetVal_String>;
  postDischargeOpv?: Maybe<Scalars['ObjectScalar']['output']>;
  postDischargeSpecialty?: Maybe<Scalars['ObjectScalar']['output']>;
  postDischargeSpecialtyOthers?: Maybe<Scalars['ObjectScalar']['output']>;
  postDischargeTesting?: Maybe<Scalars['ObjectScalar']['output']>;
  postDischargesEr?: Maybe<Scalars['ObjectScalar']['output']>;
  postDischargesOpd?: Maybe<Scalars['ObjectScalar']['output']>;
  postDohSummaryPatient?: Maybe<GraphQlRetVal_List_SummaryOfPatientDto>;
  postDsManual?: Maybe<GraphQlRetVal_Boolean>;
  postEmployeeAllowance?: Maybe<GraphQlRetVal_String>;
  postEmployeeBiometric?: Maybe<GraphQlRetVal_String>;
  /** Add Allowance */
  postEmployeeLoan?: Maybe<GraphQlRetVal_String>;
  postExpenses?: Maybe<Scalars['ObjectScalar']['output']>;
  postGeneralInfo?: Maybe<Scalars['ObjectScalar']['output']>;
  postGeneralInfoClass?: Maybe<Scalars['ObjectScalar']['output']>;
  postHospOptDischargesOPD?: Maybe<GraphQlRetVal_List_HospOptDischargesOpddto>;
  postHospOptDischargesOPV?: Maybe<GraphQlRetVal_List_HospOptDischargesOpvdto>;
  postHospitalDichargeMorbidity?: Maybe<GraphQlRetVal_String>;
  postHospitalDichargeMortality?: Maybe<GraphQlRetVal_String>;
  postHospitalRevenueDoh?: Maybe<GraphQlRetVal_String>;
  postInventoryGlobal?: Maybe<InventoryLedger>;
  postIssuanceItems?: Maybe<GraphQlRetVal_Boolean>;
  /** insert Material Prod */
  postMaterialProd?: Maybe<InventoryLedger>;
  postMaterialProdTransaction?: Maybe<GraphQlRetVal_Boolean>;
  postMortalityDeaths?: Maybe<Scalars['ObjectScalar']['output']>;
  postNumberDeliveries?: Maybe<Scalars['ObjectScalar']['output']>;
  postNumberDeliverisDoh?: Maybe<GraphQlRetVal_String>;
  postOperationDeaths?: Maybe<Scalars['ObjectScalar']['output']>;
  postOperationHai?: Maybe<Scalars['ObjectScalar']['output']>;
  postOperationHaiDoh?: Maybe<GraphQlRetVal_String>;
  postOperationMajorOptDoh?: Maybe<GraphQlRetVal_String>;
  postOperationMinor?: Maybe<Scalars['ObjectScalar']['output']>;
  postOperationMinorOptDoh?: Maybe<GraphQlRetVal_String>;
  postOptDischargeOpvDoh?: Maybe<GraphQlRetVal_String>;
  postPF?: Maybe<Scalars['ObjectScalar']['output']>;
  postPhysicalCountTransaction?: Maybe<GraphQlRetVal_Boolean>;
  postQtyAdjustment?: Maybe<GraphQlRetVal_Boolean>;
  postQualityManagement?: Maybe<Scalars['ObjectScalar']['output']>;
  postReappManual?: Maybe<GraphQlRetVal_Boolean>;
  postReapplication?: Maybe<Reapplication>;
  postReturnSupplier?: Maybe<GraphQlRetVal_Boolean>;
  postRevenues?: Maybe<Scalars['ObjectScalar']['output']>;
  postStaffingOthers?: Maybe<Scalars['ObjectScalar']['output']>;
  postStaffingPattern?: Maybe<Scalars['ObjectScalar']['output']>;
  postStaffingPatternDoh?: Maybe<GraphQlRetVal_String>;
  postStaffingPatternOthersDoh?: Maybe<GraphQlRetVal_String>;
  postSubmittedReports?: Maybe<Scalars['ObjectScalar']['output']>;
  postSubmittedReportsDoh?: Maybe<GraphQlRetVal_String>;
  postSummaryOfPatient?: Maybe<Scalars['ObjectScalar']['output']>;
  postToLedger?: Maybe<GraphQlRetVal_String>;
  postVoidDepStock?: Maybe<DepartmentStockRequest>;
  post_diet?: Maybe<Diet>;
  postmajoropt?: Maybe<Scalars['ObjectScalar']['output']>;
  processARTransactions?: Maybe<GraphQlRetVal_ArTransaction>;
  processStockTransaction?: Maybe<GraphQlRetVal_String>;
  purchaseOrderMutation?: Maybe<PurchaseOrder>;
  /** insert adj */
  quantityAdjustmentInsert?: Maybe<QuantityAdjustment>;
  reOpenFolio?: Maybe<GraphQlRetVal_Billing>;
  reSyncTransferToBillingSchedule?: Maybe<GraphQlRetVal_String>;
  /** Recalculate Moving Average */
  recalculateMoving?: Maybe<InventoryLedger>;
  recalculateOneSummary?: Maybe<GraphQlRetVal_String>;
  redoIssuance?: Maybe<GraphQlRetVal_Boolean>;
  remove2307?: Maybe<Wtx2307>;
  removeARTransaction?: Maybe<ArTransaction>;
  removeApApp?: Maybe<DisbursementAp>;
  removeApDetails?: Maybe<AccountsPayableDetails>;
  removeApLedger?: Maybe<ApLedger>;
  removeBillScheduleItems?: Maybe<BillingScheduleItems>;
  removeCheck?: Maybe<DisbursementCheck>;
  removeCreditNoteItem?: Maybe<GraphQlResVal_ArCreditNoteItems>;
  removeDMDetails?: Maybe<DisbursementAp>;
  removeEmployeeFromOtherDeduction?: Maybe<GraphQlResVal_String>;
  removeEmployeePermissionOrRole?: Maybe<GraphQlRetVal_String>;
  /** Delete the schedule of employee. */
  removeEmployeeSchedule?: Maybe<GraphQlRetVal_String>;
  removeExpense?: Maybe<DisbursementExpense>;
  /** Delete Fixed Asset Item */
  removeFixedAssetItem?: Maybe<GraphQlRetVal_Boolean>;
  removeFixedDepreciation?: Maybe<GraphQlRetVal_Boolean>;
  /** Delete Fixed Asset Transfer */
  removeFixedTransfer?: Maybe<GraphQlRetVal_Boolean>;
  removeInvoiceItem?: Maybe<GraphQlResVal_ArInvoiceItems>;
  /** Remove */
  removeItemSupplier?: Maybe<SupplierItem>;
  removeMpItem?: Maybe<MaterialProductionItem>;
  removePOItem?: Maybe<PurchaseOrderItems>;
  removePrItem?: Maybe<PurchaseRequestItem>;
  /** insert return supplier */
  removeReturnSupItem?: Maybe<ReturnSupplierItem>;
  removeSRRItem?: Maybe<ReceivingReportItem>;
  removeSoaGroupItem?: Maybe<Scalars['Boolean']['output']>;
  removeUpdatePOItems?: Maybe<GraphQlRetVal_Boolean>;
  removeWtx?: Maybe<DisbursementWtx>;
  resetPassword?: Maybe<User>;
  returnItems?: Maybe<BillingOperationResult>;
  returnMedication?: Maybe<ReturnMedication>;
  /** insert return supplier */
  returnSupplierInsert?: Maybe<ReturnSupplier>;
  revenues?: Maybe<GraphQlRetVal_RevenuesDto>;
  reverseHeader?: Maybe<GraphQlRetVal_Boolean>;
  revertEmployeeRequest?: Maybe<GraphQlRetVal_String>;
  rmDepIssueItem?: Maybe<DepartmentStockIssueItems>;
  rmDepStockItem?: Maybe<DepartmentStockRequestItem>;
  saveAccountBalancesItem?: Maybe<GraphQlResVal_Boolean>;
  saveArPaymentTracker?: Maybe<ArPaymentTracker>;
  saveArPaymentTrackerTrans?: Maybe<ArPaymentTrackerTransaction>;
  saveDeliveriesLogs?: Maybe<GraphQlRetVal_HospOptDischargesNumberDeliveriesDto>;
  /** save diet on case */
  saveDiet?: Maybe<Case>;
  /** save diet on case */
  saveDietv2?: Maybe<Case>;
  saveDohLogs?: Maybe<GraphQlRetVal_String>;
  /** insert Ledger */
  saveInventoryLedger?: Maybe<InventoryLedger>;
  saveObgynHistory?: Maybe<ObgynHistory>;
  savePurchaseRequestItems?: Maybe<Array<Maybe<PurchaseRequestItem>>>;
  save_biometric_attlog?: Maybe<GraphQlRetVal_String>;
  save_philheath_details?: Maybe<PatientPhilhealthData>;
  savecaserates?: Maybe<Scalars['String']['output']>;
  savecf4?: Maybe<Scalars['ObjectScalar']['output']>;
  /** save confinement information to comlogik */
  saveconfinementdetails?: Maybe<Scalars['String']['output']>;
  /** save confinement information to comlogik */
  saveconfinementdetailsv2?: Maybe<Scalars['ObjectScalar']['output']>;
  /** save course in the ward to comlogik */
  savecourseinthewards?: Maybe<Scalars['String']['output']>;
  savedTrialBalance?: Maybe<Array<Maybe<TrialBalanceDto2>>>;
  savediagnosis?: Maybe<Scalars['String']['output']>;
  /** save patient medications to comlogik */
  savemedicines?: Maybe<Scalars['ObjectScalar']['output']>;
  saveothers?: Maybe<Scalars['String']['output']>;
  savepfcharges?: Maybe<Scalars['String']['output']>;
  /** Search Case Rates */
  searchCaseRates?: Maybe<Scalars['ObjectScalar']['output']>;
  sendBedCapacity?: Maybe<GraphQlRetVal_String>;
  sendDischargeEr?: Maybe<GraphQlRetVal_String>;
  sendDischargeEv?: Maybe<GraphQlRetVal_String>;
  sendDischargeSpecialty?: Maybe<GraphQlRetVal_String>;
  sendDischargeTesting?: Maybe<GraphQlRetVal_String>;
  sendExpenses?: Maybe<GraphQlRetVal_String>;
  sendInfoClassification?: Maybe<GraphQlRetVal_String>;
  sendQualityManagement?: Maybe<GraphQlRetVal_String>;
  sendSpecialtyOthers?: Maybe<GraphQlRetVal_String>;
  sendSummaryPatient?: Maybe<GraphQlRetVal_String>;
  servicePriceCheck?: Maybe<Array<Maybe<ServiceCheckDto>>>;
  setCounter?: Maybe<Counter>;
  setEmployeeRolesAndPermissions?: Maybe<GraphQlRetVal_String>;
  setToCompleted?: Maybe<PurchaseOrder>;
  set_phic_drug_code?: Maybe<GraphQlRetVal_Generic>;
  staffingPattern?: Maybe<StaffingPatternDto>;
  staffingPatternOthers?: Maybe<StaffingPatternDto>;
  submitDeathMortalities?: Maybe<GraphQlRetVal_List_HospOptMortalityDeathsDto>;
  submitDischargeMorbidity?: Maybe<GraphQlRetVal_List_HospOptDischargesMorbidityDto>;
  submitEmployeeRequest?: Maybe<GraphQlRetVal_String>;
  submitGenInfoBedCapacity?: Maybe<GraphQlRetVal_GenInfoBedCapacityResponseDto>;
  submitGenInfoClassification?: Maybe<GraphQlRetVal_GenInfoClassificationDto>;
  submitGenInfoQualityManagement?: Maybe<GraphQlRetVal_List_GenInfoQualityManagementDto>;
  submitHospOptDischargesSpecialty?: Maybe<GraphQlRetVal_List_HospOptDischargesSpecialtyDto>;
  submitHospOptDischargesTesting?: Maybe<GraphQlRetVal_List_HospOptDischargesTestingDto>;
  submitHospitalOperationsDeaths?: Maybe<GraphQlRetVal_HospitalOperationsDeathsDto>;
  submitHospitalOperationsHAI?: Maybe<GraphQlRetVal_HospitalOperationsHaidto>;
  submitHospitalOperationsMajorOpt?: Maybe<GraphQlRetVal_List_HospitalOperationsMajorOptDto>;
  submitHospitalOperationsMinorOpt?: Maybe<GraphQlRetVal_List_HospitalOperationsMinorOptDto>;
  submitStaffingPattern?: Maybe<GraphQlRetVal_List_StaffingPatternDto>;
  submitStaffingPatternV2?: Maybe<GraphQlRetVal_List_StaffingPatternDto>;
  submittedReports?: Maybe<GraphQlRetVal_String>;
  syncSRRUnitCost?: Maybe<GraphQlRetVal_BigDecimal>;
  /** insert Integrations from JSON */
  testFromJsonGenerateAutoEntries?: Maybe<HeaderLedger>;
  toggleActiveTransfer?: Maybe<Transfer>;
  toggleBillingItem?: Maybe<BillingItem>;
  toggleLockCase: Scalars['Boolean']['output'];
  toggleLockItemPriceControl?: Maybe<Scalars['ObjectScalar']['output']>;
  toggleLockServicePriceControl?: Maybe<Scalars['ObjectScalar']['output']>;
  toggleVoidTransfer?: Maybe<Transfer>;
  transactionProcess?: Maybe<ArTransaction>;
  transferBulkFixedAssets?: Maybe<GraphQlRetVal_Boolean>;
  transferIntegration?: Maybe<Scalars['Boolean']['output']>;
  transferItem?: Maybe<Scalars['Boolean']['output']>;
  /** upsert po */
  upSertPurchaseOrder?: Maybe<PurchaseOrder>;
  update2307?: Maybe<Wtx2307>;
  updateActive?: Maybe<GraphQlRetVal_String>;
  updateAllowanceTemplateItemStatus?: Maybe<GraphQlResVal_Boolean>;
  updateApProcess?: Maybe<AccountReceivableItems>;
  updateBillingPackageItem?: Maybe<OrderSlipItemPackageContent>;
  updateBillingPackageList?: Maybe<Array<Maybe<OrderSlipItemPackageContent>>>;
  updateBillingSchedule?: Maybe<GraphQlRetVal_String>;
  updateBillingScheduleItem?: Maybe<BillingScheduleItems>;
  updateCase?: Maybe<Case>;
  updateCaseAndTransfer?: Maybe<Case>;
  /** Create New Claim */
  updateClaim?: Maybe<Scalars['ObjectScalar']['output']>;
  updateCreditNoteTotals?: Maybe<ArCreditNote>;
  updateDefaultParValue?: Maybe<GraphQlRetVal_String>;
  updateExcludeList?: Maybe<Scalars['Boolean']['output']>;
  updateHours?: Maybe<GraphQlRetVal_String>;
  /** insert Integrations */
  updateIntegrationItem?: Maybe<Scalars['Boolean']['output']>;
  updateInvoiceTotals?: Maybe<ArInvoice>;
  updateItemPrices?: Maybe<GraphQlRetVal_Boolean>;
  updateLedger?: Maybe<GraphQlResVal_Boolean>;
  updateMedication?: Maybe<GraphQlRetVal_String>;
  updateOrderItem?: Maybe<Scalars['ObjectScalar']['output']>;
  updateOrderSlipItemStatus?: Maybe<GraphQlRetVal_OrderSlipItem>;
  updateOtherDeductionEmployeeStatus?: Maybe<GraphQlResVal_OtherDeductionEmployee>;
  updatePFNonCompany?: Maybe<GraphQlRetVal_Boolean>;
  updatePRQty?: Maybe<PurchaseRequestItem>;
  updatePRStatus?: Maybe<PurchaseRequest>;
  updatePaymentTrackerDetails?: Maybe<PaymentTrackerDetails>;
  updatePayrollDetails?: Maybe<GraphQlRetVal_String>;
  updatePayrollEmployeeAllowanceStatus?: Maybe<GraphQlResVal_PayrollEmployeeAllowance>;
  updatePayrollEmployeeContributionStatus?: Maybe<GraphQlResVal_PayrollEmployeeContribution>;
  /** A mutation for updating the status of module employee status. */
  updatePayrollModuleEmployeeStatus?: Maybe<GraphQlResVal_String>;
  updatePayrollStatus?: Maybe<GraphQlRetVal_Payroll>;
  updatePersonalAccRefNo?: Maybe<AccountReceivable>;
  updatePfCompany?: Maybe<GraphQlRetVal_Boolean>;
  updatePfProcess?: Maybe<BillingItem>;
  updatePhyUnitCost?: Maybe<PhysicalCount>;
  updatePositionStatus?: Maybe<GraphQlRetVal_DohPosition>;
  updateRECStatus?: Maybe<ReceivingReport>;
  updateReaders?: Maybe<GraphQlRetVal_Boolean>;
  updateReapply?: Maybe<Reapplication>;
  updateReorder?: Maybe<DepartmentItem>;
  updateRf?: Maybe<Scalars['Boolean']['output']>;
  updateRfFixedPrice?: Maybe<Scalars['Boolean']['output']>;
  updateRoom?: Maybe<Room>;
  /** Update the salary rate multiplier */
  updateSalaryRateMultiplier?: Maybe<GraphQlRetVal_SalaryRateMultiplier>;
  updateServicePrices?: Maybe<Scalars['ObjectScalar']['output']>;
  updateStatus?: Maybe<PurchaseOrder>;
  updateStatusBegItem?: Maybe<BeginningDetails>;
  updateStatusPhysicalCount?: Maybe<PhysicalCount>;
  updateStatusPhysicalTrans?: Maybe<GraphQlRetVal_Boolean>;
  /** update SRR items */
  updateStatusSRRItems?: Maybe<ReceivingReportItem>;
  updateStockCardItemCost?: Maybe<GraphQlRetVal_String>;
  /** Update stock card unit cost */
  updateStockCardUnitCost?: Maybe<GraphQlRetVal_Boolean>;
  updateTimekeepingEmployeeStatus?: Maybe<GraphQlResVal_TimekeepingEmployee>;
  updateTimekeepingStatus?: Maybe<GraphQlRetVal_Timekeeping>;
  updateTransferBillingItem?: Maybe<ArTransfer>;
  updateWithInfection?: Maybe<Case>;
  update_patient_diet?: Maybe<Patient>;
  upsert2307?: Maybe<Wtx2307>;
  upsertARTransactionType?: Maybe<ArTransactionType>;
  upsertAccountBalances?: Maybe<AccountBalances>;
  /** insert TransType */
  upsertAccountConfig?: Maybe<AccountConfig>;
  /** insert TransType */
  upsertAccountList?: Maybe<AccountList>;
  /** upsert */
  upsertAcctCategory?: Maybe<GraphQlRetVal_Boolean>;
  upsertAdjQtyUnitCost?: Maybe<QuantityAdjustment>;
  upsertAllowance?: Maybe<GraphQlResVal_Allowance>;
  upsertAllowanceTemplate?: Maybe<GraphQlRetVal_AllowanceTemplate>;
  upsertApLedger?: Maybe<ApLedger>;
  upsertApTransaction?: Maybe<ApTransaction>;
  upsertAppointment?: Maybe<Appointment>;
  upsertArManualDeductions?: Maybe<ArManualDeductions>;
  upsertArPaymentTracker?: Maybe<ArPaymentTracker>;
  upsertBanks?: Maybe<Bank>;
  upsertBegDetails?: Maybe<BeginningDetails>;
  upsertBegTrans?: Maybe<BeginningTransaction>;
  upsertBillingSchedule?: Maybe<BillingSchedule>;
  /** Add Multiple Items */
  upsertBulkFixedAssetItem?: Maybe<GraphQlRetVal_List_FixedAssetItem>;
  upsertCase?: Maybe<Case>;
  upsertCashBasis?: Maybe<CashBasis>;
  upsertCashierTerminals?: Maybe<CashierTerminal>;
  upsertCatheterRecord?: Maybe<CatheterRecord>;
  upsertCentralLineRecord?: Maybe<CentralLineRecord>;
  upsertCheck?: Maybe<DisbursementCheck>;
  upsertClinicRoom?: Maybe<ClinicRoom>;
  upsertCollectionDeposit?: Maybe<CollectionDeposit>;
  upsertCompanyAR?: Maybe<AccountReceivable>;
  upsertCompanyAccounts?: Maybe<CompanyAccount>;
  upsertCompanyType?: Maybe<CompanyType>;
  upsertConfig?: Maybe<AppointmentConfig>;
  upsertConsolidated?: Maybe<Wtx2307Consolidated>;
  /** Upsert Constants */
  upsertConstantsByType?: Maybe<GraphQlRetVal_String>;
  upsertCreditNoteItem?: Maybe<GraphQlResVal_ArCreditNoteItems>;
  upsertDM?: Maybe<DebitMemo>;
  upsertDebitMemo?: Maybe<DebitMemo>;
  upsertDefaultAdmissionItems?: Maybe<DefaultAdmissionItems>;
  upsertDepIssuance?: Maybe<DepartmentStockIssue>;
  upsertDepIssuanceByRequest?: Maybe<DepartmentStockIssue>;
  /** upsert Department Item */
  upsertDepItem?: Maybe<DepartmentItem>;
  /** insert BEG */
  upsertDepStock?: Maybe<DepartmentStockRequest>;
  /** create or update department schedule config. */
  upsertDepartementSchedule?: Maybe<GraphQlRetVal_DepartmentSchedule>;
  upsertDepartment?: Maybe<Department>;
  /** insert BEG */
  upsertDepartmentStock?: Maybe<DepartmentStockRequest>;
  upsertDependents?: Maybe<InvestorDependent>;
  /** Insert Diet Notes */
  upsertDietNotes?: Maybe<GraphQlRetVal_DietNotes>;
  upsertDisAp?: Maybe<DisbursementAp>;
  upsertDisDM?: Maybe<DisbursementAp>;
  upsertDisReap?: Maybe<DisbursementAp>;
  upsertDisbursement?: Maybe<Disbursement>;
  upsertDiscounts?: Maybe<Discount>;
  upsertDmDetials?: Maybe<DebitMemoDetails>;
  upsertDohConfig?: Maybe<GraphQlRetVal_DohConfiguration>;
  upsertEclaimAccount?: Maybe<EclaimsIntegrationAccount>;
  upsertEclaimCaseRef?: Maybe<EclaimsCaseRef>;
  upsertEclaimSetting?: Maybe<EclaimsIntegrationSetting>;
  upsertEmployee?: Maybe<GraphQlRetVal_Employee>;
  upsertEmployeeAllowance?: Maybe<GraphQlResVal_EmployeeAllowance>;
  upsertEmployeeAttendance?: Maybe<GraphQlRetVal_EmployeeAttendance>;
  upsertEmployeeRequest?: Maybe<GraphQlRetVal_EmployeeRequest>;
  upsertEmployeeRequestApproval?: Maybe<GraphQlRetVal_EmployeeRequestApproval>;
  upsertEmployeeToOtherDeduction?: Maybe<GraphQlResVal_String>;
  /** Create or edit event calendar. */
  upsertEventCalendar?: Maybe<GraphQlRetVal_EventCalendar>;
  /** insert TransType */
  upsertExTransType?: Maybe<ExpenseTransaction>;
  upsertExp?: Maybe<DisbursementExpense>;
  upsertFinancialReport?: Maybe<FinancialReport>;
  upsertFiscal?: Maybe<Fiscal>;
  /** Add Fixed Asset */
  upsertFixedAsset?: Maybe<GraphQlRetVal_FixedAssets>;
  /** Add Fixed Asset Depreciation */
  upsertFixedAssetDepreciation?: Maybe<GraphQlResVal_FixedAssetDepreciation>;
  /** Add Fixed Asset Item */
  upsertFixedAssetItem?: Maybe<GraphQlRetVal_FixedAssetItem>;
  /** Add Fixed Asset Transfer */
  upsertFixedAssetTransfer?: Maybe<GraphQlRetVal_FixedAssetTransfer>;
  upsertFromPf?: Maybe<AccountsPayable>;
  upsertFromPfNonCompany?: Maybe<AccountsPayable>;
  upsertFromRf?: Maybe<AccountsPayable>;
  /** upsert Unit */
  upsertGenerics?: Maybe<GraphQlRetVal_Boolean>;
  upsertGroupPolicy?: Maybe<GroupPolicy>;
  upsertHospitalConfig?: Maybe<GraphQlRetVal_HospitalInfo>;
  /** insert Integrations */
  upsertIntegration?: Maybe<Scalars['Boolean']['output']>;
  upsertIntegrationGroup?: Maybe<Scalars['Boolean']['output']>;
  upsertInvestors?: Maybe<Investor>;
  /** insert Item */
  upsertItem?: Maybe<GraphQlRetVal_Boolean>;
  upsertItemAsFixedAsset?: Maybe<GraphQlRetVal_Item>;
  /** insert Item */
  upsertItemCategory?: Maybe<GraphQlRetVal_Boolean>;
  /** upsert Department Item */
  upsertItemGroup?: Maybe<GraphQlRetVal_Boolean>;
  upsertItemIssuance?: Maybe<DepartmentStockIssue>;
  upsertItemIssuanceFromItemReq?: Maybe<DepartmentStockIssue>;
  /** upsert Department Item */
  upsertItemSupplier?: Maybe<SupplierItem>;
  upsertJobTitle?: Maybe<GraphQlRetVal_String>;
  upsertLineTypeSource?: Maybe<SourceLineType>;
  upsertLineTypes?: Maybe<LineType>;
  upsertLoanAccounts?: Maybe<GraphQlRetVal_LoanAccounts>;
  /** insert Log Count */
  upsertLogCount?: Maybe<LogsCount>;
  /** insert MP */
  upsertMP?: Maybe<MaterialProduction>;
  upsertManagingPhysician?: Maybe<ManagingPhysician>;
  upsertManagingPhysicianByFullName?: Maybe<ManagingPhysician>;
  upsertManualAccountReceivable?: Maybe<AccountReceivable>;
  upsertManualBillingSchedule?: Maybe<BillingSchedule>;
  /** insert BEG */
  upsertMaterialProduction?: Maybe<MaterialProduction>;
  upsertMotherAccountSource?: Maybe<SourceMotherAccount>;
  /** insert BEG */
  upsertNewReceiving?: Maybe<ReceivingReport>;
  upsertOrderSlipItemPackage?: Maybe<OrderSlipItemPackageContent>;
  upsertOtherDeduction?: Maybe<GraphQlResVal_OtherDeduction>;
  upsertOtherPosition?: Maybe<GraphQlRetVal_DohPosition>;
  upsertOthers?: Maybe<PettyCashOther>;
  upsertPO?: Maybe<PurchaseOrder>;
  upsertPOMonitoring?: Maybe<PoDeliveryMonitoring>;
  upsertPackage?: Maybe<Package>;
  upsertPatient?: Maybe<Patient>;
  upsertPayables?: Maybe<AccountsPayable>;
  upsertPayablesByInvestor?: Maybe<AccountsPayable>;
  upsertPayablesByRec?: Maybe<AccountsPayable>;
  upsertPayablesDetails?: Maybe<AccountsPayableDetails>;
  upsertPayablesDetailsByInvestor?: Maybe<AccountsPayableDetails>;
  upsertPayablesDetailsByRec?: Maybe<AccountsPayableDetails>;
  /** upsert */
  upsertPaymentTerms?: Maybe<GraphQlRetVal_Boolean>;
  upsertPaymentTransactionType?: Maybe<GraphQlResVal_PaymentTransactionType>;
  upsertPayroll?: Maybe<GraphQlRetVal_Payroll>;
  upsertPersonalAccountAR?: Maybe<AccountReceivable>;
  upsertPettyCash?: Maybe<PettyCash>;
  upsertPfDetials?: Maybe<AccountsPayableDetails>;
  upsertPfDetialsNonCompany?: Maybe<AccountsPayableDetails>;
  upsertPfDetialsRf?: Maybe<AccountsPayableDetails>;
  /** insert physical Count Ledger */
  upsertPhysicalCount?: Maybe<PhysicalCount>;
  upsertPhysicalTrans?: Maybe<PhysicalTransaction>;
  upsertPhysician?: Maybe<Physician>;
  upsertPr?: Maybe<PurchaseRequest>;
  upsertPriceTierDetail?: Maybe<GraphQlRetVal_PriceTierDetail>;
  upsertPurchaseItems?: Maybe<PettyCashItem>;
  /** Insert/Update QuantityAdjustmentType */
  upsertQuantityAdjustmentType?: Maybe<GraphQlRetVal_Boolean>;
  upsertRangedConstant?: Maybe<GraphQlRetVal_String>;
  upsertReapplication?: Maybe<Reapplication>;
  upsertReceiptIssuance?: Maybe<ReceiptIssuance>;
  /** insert BEG */
  upsertReceiving?: Maybe<ReceivingReport>;
  upsertReleaseCheck?: Maybe<ReleaseCheck>;
  upsertRoomPhysician?: Maybe<GraphQlRetVal_Boolean>;
  upsertSchedConfig?: Maybe<AppointmentScheduleTime>;
  upsertSchedule?: Maybe<AppointmentSchedule>;
  upsertScheduleLock?: Maybe<GraphQlRetVal_ScheduleLock>;
  upsertScheduleTime?: Maybe<AppointmentScheduleTime>;
  upsertServices?: Maybe<Service>;
  /** Insert/Update Signature */
  upsertSignature?: Maybe<Signature>;
  upsertStockRequestItems?: Maybe<Array<Maybe<StockRequestItem>>>;
  upsertSubAccount?: Maybe<SubAccountSetup>;
  upsertSubaccountSource?: Maybe<SourceSubAccount>;
  upsertSubscription?: Maybe<GraphQlRetVal_Subscription>;
  /** insert BEG */
  upsertSupplier?: Maybe<Supplier>;
  upsertSupplierByEmployee?: Maybe<Supplier>;
  upsertSupplierByInvestor?: Maybe<Supplier>;
  /** upsert */
  upsertSupplierTypes?: Maybe<GraphQlRetVal_Boolean>;
  upsertSurgicalSiteRecord?: Maybe<SurgicalSiteRecord>;
  /** insert TransType */
  upsertTransType?: Maybe<TransactionType>;
  upsertTransfer?: Maybe<ArTransfer>;
  /** upsert Unit */
  upsertUnitM?: Maybe<GraphQlRetVal_Boolean>;
  upsertVaccinationRecord?: Maybe<GraphQlResVal_PatientVaccination>;
  upsertVentilatorRecord?: Maybe<VentilatorRecord>;
  upsertVentilatorRecordItem?: Maybe<VentilatorRecordItem>;
  upsertWtx?: Maybe<DisbursementWtx>;
  upsert_biometric_service_config?: Maybe<GraphQlRetVal_BiometricServiceConfig>;
  voidBeginning?: Maybe<GraphQlRetVal_Boolean>;
  voidCdctr?: Maybe<Scalars['Boolean']['output']>;
  voidChequeEncashment?: Maybe<GraphQlRetVal_String>;
  voidInventoryGlobal?: Maybe<InventoryLedger>;
  voidInventoryGlobalById?: Maybe<InventoryLedger>;
  /** void Inventory Ledger */
  voidInventoryLedger?: Maybe<InventoryLedger>;
  voidInvestorPayment?: Maybe<Scalars['Boolean']['output']>;
  voidIssuanceItems?: Maybe<GraphQlRetVal_Boolean>;
  /** void Inventory Ledger */
  voidLedger?: Maybe<InventoryLedger>;
  /** insert Material Prod */
  voidMaterialProd?: Maybe<InventoryLedger>;
  voidMaterialProdTransaction?: Maybe<GraphQlRetVal_Boolean>;
  voidPayment?: Maybe<GraphQlRetVal_PaymentTracker>;
  voidPhysical?: Maybe<GraphQlRetVal_Boolean>;
  voidPhysicalById?: Maybe<GraphQlRetVal_Boolean>;
  voidPurchaseOrder?: Maybe<PurchaseOrder>;
  voidQtyAdj?: Maybe<GraphQlRetVal_Boolean>;
  voidReturnSupplier?: Maybe<GraphQlRetVal_Boolean>;
  voidTransfer?: Maybe<ArTransfer>;
  void_material_production_mutation?: Maybe<MaterialProduction>;
};


/** Mutation root */
export type MutationAdd2307Args = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  items?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
};


/** Mutation root */
export type MutationAddArTransactionArgs = {
  entries?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  fieldsItems?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
  type?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationAddBillingItemArgs = {
  billingId?: InputMaybe<Scalars['UUID']['input']>;
  billingItemType?: InputMaybe<Scalars['String']['input']>;
  billingItems?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
};


/** Mutation root */
export type MutationAddBillingItemCashBasisArgs = {
  billingId?: InputMaybe<Scalars['UUID']['input']>;
  billingItemType?: InputMaybe<Scalars['String']['input']>;
  dataInput?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationAddBillingItemFromOrderSlipItemsArgs = {
  caseId?: InputMaybe<Scalars['UUID']['input']>;
  orderListItems?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
};


/** Mutation root */
export type MutationAddChequeEncashmentCollectionDetailArgs = {
  checkids?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationAddChequeEncashmentSuppDocArgs = {
  attachment?: InputMaybe<Scalars['FileUpload']['input']>;
  cESupportingDocu?: InputMaybe<CeSupportingDocuInput>;
  chequeEncashment?: InputMaybe<ChequeEncashmentInput>;
};


/** Mutation root */
export type MutationAddChequeEncashmentTransactionArgs = {
  attachments?: InputMaybe<Array<InputMaybe<Scalars['FileUpload']['input']>>>;
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  supportingDocs?: InputMaybe<Scalars['Map_String_CESupportingDocuScalar']['input']>;
};


/** Mutation root */
export type MutationAddCollectionDetailArgs = {
  checkids?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationAddCompanionMealArgs = {
  alias?: InputMaybe<Scalars['String']['input']>;
  meal?: InputMaybe<Scalars['String']['input']>;
  patientCase?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationAddCreditNoteClaimsItemArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationAddCustomJvArgs = {
  entries?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
  header?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  transactionDate?: InputMaybe<Scalars['Instant']['input']>;
};


/** Mutation root */
export type MutationAddDefaultAdmissionArgs = {
  caseId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationAddDiscountArgs = {
  billingId?: InputMaybe<Scalars['UUID']['input']>;
  discountId?: InputMaybe<Scalars['UUID']['input']>;
  mode?: InputMaybe<Scalars['String']['input']>;
  payload?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
};


/** Mutation root */
export type MutationAddDoctorOrderArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
};


/** Mutation root */
export type MutationAddDoctorOrderForFlutterArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
};


/** Mutation root */
export type MutationAddEmployeeMealArgs = {
  empId?: InputMaybe<Scalars['String']['input']>;
  meal?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationAddEntityDeductionArgs = {
  approvalCode?: InputMaybe<Scalars['String']['input']>;
  billingId?: InputMaybe<Scalars['UUID']['input']>;
  payload?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  remarks?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationAddInitialVitalsArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
};


/** Mutation root */
export type MutationAddIntakesForFlutterArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
};


/** Mutation root */
export type MutationAddInvestorAttachmentArgs = {
  dependentId?: InputMaybe<Scalars['UUID']['input']>;
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  investorId?: InputMaybe<Scalars['UUID']['input']>;
  request?: InputMaybe<Scalars['FileUpload']['input']>;
};


/** Mutation root */
export type MutationAddInvestorPaymentArgs = {
  batchReceiptId?: InputMaybe<Scalars['UUID']['input']>;
  investorId?: InputMaybe<Scalars['UUID']['input']>;
  particular?: InputMaybe<Scalars['String']['input']>;
  shiftId?: InputMaybe<Scalars['UUID']['input']>;
  subscriptions?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
  tendered?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
  type?: InputMaybe<Scalars['String']['input']>;
  unallocated?: InputMaybe<Scalars['BigDecimal']['input']>;
};


/** Mutation root */
export type MutationAddInvoiceClaimsItemArgs = {
  billingItemId?: InputMaybe<Scalars['UUID']['input']>;
  invoiceId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationAddInvoiceItemArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationAddManualJvDynamicArgs = {
  details?: InputMaybe<Scalars['Map_String_StringScalar']['input']>;
  docType?: InputMaybe<LedgerDocType>;
  entries?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
  header?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  journalType?: InputMaybe<JournalType>;
  ledgerDate?: InputMaybe<Scalars['Instant']['input']>;
};


/** Mutation root */
export type MutationAddMedicationForFlutterArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
};


/** Mutation root */
export type MutationAddMultipleBillingScheduleItemArgs = {
  fieldsItems?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationAddNeuroVitalSignsForFlutterArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
};


/** Mutation root */
export type MutationAddOrderslipArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
};


/** Mutation root */
export type MutationAddOrderslipFromOrderArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
};


/** Mutation root */
export type MutationAddOtherVitalSignsForFlutterArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
};


/** Mutation root */
export type MutationAddOtherVitalsArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
};


/** Mutation root */
export type MutationAddOutputsForFlutterArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
};


/** Mutation root */
export type MutationAddPfBillingItemArgs = {
  billingId?: InputMaybe<Scalars['UUID']['input']>;
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
};


/** Mutation root */
export type MutationAddPackageArgs = {
  billingId?: InputMaybe<Scalars['UUID']['input']>;
  packageId?: InputMaybe<Scalars['UUID']['input']>;
  requestingPhysician?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationAddPackageItemArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  packageId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationAddPanelComponentsArgs = {
  fields?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
  id?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationAddPaymentArgs = {
  arRemarks?: InputMaybe<Scalars['String']['input']>;
  batchReceiptId?: InputMaybe<Scalars['UUID']['input']>;
  billingId?: InputMaybe<Scalars['UUID']['input']>;
  partitions?: InputMaybe<Scalars['Map_String_BigDecimalScalar']['input']>;
  shiftId?: InputMaybe<Scalars['UUID']['input']>;
  taggedIds?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
  taggedIdsMeds?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
  tendered?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
  type?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationAddPaymentMiscArgs = {
  arRemarks?: InputMaybe<Scalars['String']['input']>;
  batchReceiptId?: InputMaybe<Scalars['UUID']['input']>;
  miscTarget?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
  payorCategory?: InputMaybe<Scalars['String']['input']>;
  payorId?: InputMaybe<Scalars['UUID']['input']>;
  payorName?: InputMaybe<Scalars['String']['input']>;
  shiftId?: InputMaybe<Scalars['UUID']['input']>;
  tendered?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
  transactionCategoryId?: InputMaybe<Scalars['UUID']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationAddPhysicianToClinicArgs = {
  physicianField?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  roomId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationAddPriceControlArgs = {
  amountValue?: InputMaybe<Scalars['String']['input']>;
  itemId?: InputMaybe<Scalars['String']['input']>;
  percentageValue?: InputMaybe<Scalars['String']['input']>;
  tierDetail?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationAddRequestArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
};


/** Mutation root */
export type MutationAddSaleTransactionArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationAddServicePriceControlArgs = {
  amountValue?: InputMaybe<Scalars['String']['input']>;
  percentageValue?: InputMaybe<Scalars['String']['input']>;
  serviceId?: InputMaybe<Scalars['String']['input']>;
  tierDetail?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationAddShiftingRecordArgs = {
  macAddress?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationAddSoaGroupArgs = {
  billingId?: InputMaybe<Scalars['UUID']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationAddSoaGroupItemArgs = {
  billingItemIds?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
  soagroupingId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationAddSubAccountToIntegrationArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  subAccountId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationAddSupportingDocArgs = {
  attachment?: InputMaybe<Scalars['FileUpload']['input']>;
  billingItemId?: InputMaybe<Scalars['UUID']['input']>;
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
};


/** Mutation root */
export type MutationAddToCdctrArgs = {
  shifts?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
};


/** Mutation root */
export type MutationAddToCollectionDepositArgs = {
  ids?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
};


/** Mutation root */
export type MutationAddTransferItemArgs = {
  creditNoteItemId?: InputMaybe<Scalars['UUID']['input']>;
  invoiceId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationAddVitalSignsForFlutterArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
};


/** Mutation root */
export type MutationAdd_Biometric_DeviceArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
};


/** Mutation root */
export type MutationAdditionAdmissionKitArgs = {
  caseId?: InputMaybe<Scalars['UUID']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationAdjustJvArgs = {
  entries?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
  headerId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationAgtPatientUpsertArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationAgtResetPasswordArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationAllowprogressArgs = {
  billingId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationAppUpdateStatusArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationAppUpdateStatusAdminArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  status?: InputMaybe<Scalars['Boolean']['input']>;
};


/** Mutation root */
export type MutationApplyOrArgs = {
  amountCut?: InputMaybe<Scalars['BigDecimal']['input']>;
  billingId?: InputMaybe<Scalars['UUID']['input']>;
  headerId?: InputMaybe<Scalars['UUID']['input']>;
  ledgerId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationApproveAllLedgerByTypeAndDateArgs = {
  endDate?: InputMaybe<Scalars['String']['input']>;
  journalType?: InputMaybe<Scalars['String']['input']>;
  startDate?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationApproveLedgerArgs = {
  ids?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
};


/** Mutation root */
export type MutationArCreditNotePostingArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationAuthenticationTestArgs = {
  password?: InputMaybe<Scalars['String']['input']>;
  username?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationAutoJournalEntryArgs = {
  dataEntry?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  fieldsItems?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
  journalAccounts?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
  journalDate?: InputMaybe<Scalars['Date']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationBeginningBalanceInsertArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
};


/** Mutation root */
export type MutationCalculateAllAccumulatedLogsArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationCalculateOneTimekeepingEmployeeArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationCancelBillingItemArgs = {
  billingItemId?: InputMaybe<Scalars['UUID']['input']>;
  details?: InputMaybe<Scalars['Map_String_StringScalar']['input']>;
};


/** Mutation root */
export type MutationCancelPackageArgs = {
  billingId?: InputMaybe<Scalars['UUID']['input']>;
  packageId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationChangeBillingStatusArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationChangeCaseActiveTransferArgs = {
  caseId?: InputMaybe<Scalars['UUID']['input']>;
  transferId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationChangeCaseStatusArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationChangePasswordArgs = {
  username?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationChartsOfAccountsArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationCheckExistingCreditNoteForInvoiceArgs = {
  invoiceId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationClearCardsArgs = {
  ids?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
};


/** Mutation root */
export type MutationClearChecksArgs = {
  bankId?: InputMaybe<Scalars['UUID']['input']>;
  ids?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
};


/** Mutation root */
export type MutationClearScheduleArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationCloseFolioArgs = {
  billingId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationCloseShiftingRecordArgs = {
  shiftId?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationComlogik_Setting_MutationArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
};


/** Mutation root */
export type MutationCopyDepartmentScheduleArgs = {
  department?: InputMaybe<Scalars['UUID']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationCopyPriceTierArgs = {
  tierId?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationCreateArCustomerArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationCreateBillingArgs = {
  caseId?: InputMaybe<Scalars['UUID']['input']>;
  patientId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationCreateCreditNoteArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationCreateEligibilityArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
};


/** Mutation root */
export type MutationCreateEmployeeScheduleArgs = {
  department?: InputMaybe<Scalars['UUID']['input']>;
  employee_id?: InputMaybe<Scalars['UUID']['input']>;
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationCreateEmptyInvoiceArgs = {
  customerId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationCreateInvoiceArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationCreateLoginArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationCreateNehehrsVaccountArgs = {
  accessKey?: InputMaybe<Scalars['String']['input']>;
  bgycode?: InputMaybe<Scalars['String']['input']>;
  ctymuncode?: InputMaybe<Scalars['String']['input']>;
  fhudaddress?: InputMaybe<Scalars['String']['input']>;
  fhudemail?: InputMaybe<Scalars['String']['input']>;
  fhudfaxno?: InputMaybe<Scalars['String']['input']>;
  fhudtelno1?: InputMaybe<Scalars['String']['input']>;
  fhudtelno2?: InputMaybe<Scalars['String']['input']>;
  headfname?: InputMaybe<Scalars['String']['input']>;
  headlname?: InputMaybe<Scalars['String']['input']>;
  headmname?: InputMaybe<Scalars['String']['input']>;
  hfhudcode?: InputMaybe<Scalars['String']['input']>;
  hfhudname?: InputMaybe<Scalars['String']['input']>;
  provcode?: InputMaybe<Scalars['String']['input']>;
  regcode?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationCreateNeRvsAccountArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
};


/** Mutation root */
export type MutationCreateNewAccountBalancesArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationCreateNewClaimArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
};


/** Mutation root */
export type MutationCreateOrmArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
};


/** Mutation root */
export type MutationCreateOtcBillingArgs = {
  patientName?: InputMaybe<Scalars['String']['input']>;
  priceTierId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationDelPoMonitoringArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationDeleteAccountReceivableArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationDeleteAddOnArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationDeleteAllowanceArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationDeleteAllowanceTemplateItemArgs = {
  allowanceId?: InputMaybe<Scalars['UUID']['input']>;
  templateId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationDeleteAllowanceTemplatesArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationDeleteBeginningDetailsArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationDeleteBiometricAssignArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationDeleteCatheterRecordArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationDeleteCentralLineRecordArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationDeleteCollectionDetailArgs = {
  detailId?: InputMaybe<Scalars['UUID']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationDeleteDefaultAdmissionItemsArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationDeleteDepartmentScheduleArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationDeleteDependentsArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationDeleteDietNoteArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationDeleteEmployeeAllowanceArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationDeleteEmployeeAttendanceArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationDeleteEmployeeBiometricArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationDeleteEventCalendarArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationDeleteIntegrationArgs = {
  integrationId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationDeleteIntegrationItemArgs = {
  integrationId?: InputMaybe<Scalars['UUID']['input']>;
  integrationItemId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationDeleteInventoryGlobalArgs = {
  refNo?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationDeleteInvestorAttachmentArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationDeleteItemFromMasterfileArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationDeleteLineTypeArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationDeleteLogCountArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  parentId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationDeleteMotherAccountSourceArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationDeleteOtherDeductionArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationDeletePackageItemArgs = {
  packageId?: InputMaybe<Scalars['UUID']['input']>;
  packageItemId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationDeletePaymentTransactionTypeArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationDeletePayrollArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationDeletePhysicianArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationDeleteSoaGroupArgs = {
  soagroupingId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationDeleteSubAccountSourceArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationDeleteSupportingDocArgs = {
  billingItemId?: InputMaybe<Scalars['UUID']['input']>;
  supportingDocId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationDeleteSurgicalSiteRecordArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationDeleteVentilatorRecordArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationDeleteVentilatorRecordItemArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationDelete_All_CourseinthewardsArgs = {
  caseId?: InputMaybe<Scalars['UUID']['input']>;
  credentials?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationDelete_Biometric_DeviceArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationDelete_Comlogik_ItemsArgs = {
  credentials?: InputMaybe<Scalars['String']['input']>;
  medsArrayString?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationDeniedItemArgs = {
  paymentTrackerDetailId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationDepreciateBulkFixedAssetsArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  ids?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
};


/** Mutation root */
export type MutationDiscontinueOrderItemArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationDohOptDischargeEvArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Mutation root */
export type MutationEditBillingArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationEditedJournalEntryArgs = {
  dataEntry?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  fieldsItems?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
  journalAccounts?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
  type?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationExecuteMassModifierArgs = {
  modifierId?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationExpensesArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
};


/** Mutation root */
export type MutationFinalizedSoaArgs = {
  billingId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationFindPfEmpsArgs = {
  ids?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
};


/** Mutation root */
export type MutationGenInfoBedCapacityArgs = {
  abc?: InputMaybe<Scalars['String']['input']>;
  bor?: InputMaybe<Scalars['String']['input']>;
  hfhudcode?: InputMaybe<Scalars['String']['input']>;
  implementingbeds?: InputMaybe<Scalars['String']['input']>;
  reportingyear?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationGenInfoClassificationArgs = {
  general?: InputMaybe<Scalars['String']['input']>;
  government?: InputMaybe<Scalars['String']['input']>;
  hfhudcode?: InputMaybe<Scalars['String']['input']>;
  local?: InputMaybe<Scalars['String']['input']>;
  national?: InputMaybe<Scalars['String']['input']>;
  natureofownership?: InputMaybe<Scalars['String']['input']>;
  ownershipothers?: InputMaybe<Scalars['String']['input']>;
  private?: InputMaybe<Scalars['String']['input']>;
  reportingyear?: InputMaybe<Scalars['String']['input']>;
  servicecapability?: InputMaybe<Scalars['String']['input']>;
  specialty?: InputMaybe<Scalars['String']['input']>;
  specialtyspecify?: InputMaybe<Scalars['String']['input']>;
  traumacapability?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationGenInfoQualityManagementArgs = {
  certifyingbody?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  hfhudcode?: InputMaybe<Scalars['String']['input']>;
  philhealthaccreditation?: InputMaybe<Scalars['String']['input']>;
  qualitymgmttype?: InputMaybe<Scalars['String']['input']>;
  reportingyear?: InputMaybe<Scalars['String']['input']>;
  validityfrom?: InputMaybe<Scalars['String']['input']>;
  validityto?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationGenerateCf4Args = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
};


/** Mutation root */
export type MutationGenerateCourseInTheWardArgs = {
  caseId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationGenerateCreditNoteItemTaxByCreditNoteIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  remove?: InputMaybe<Scalars['Boolean']['input']>;
  taxType?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationGenerateCreditNoteTaxArgs = {
  creditNoteId?: InputMaybe<Scalars['UUID']['input']>;
  isApply?: InputMaybe<Scalars['Boolean']['input']>;
  taxType?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationGenerateCreditNoteVatArgs = {
  creditNoteId?: InputMaybe<Scalars['UUID']['input']>;
  isVatable?: InputMaybe<Scalars['Boolean']['input']>;
};


/** Mutation root */
export type MutationGenerateDietTaskArgs = {
  end?: InputMaybe<Scalars['String']['input']>;
  meal?: InputMaybe<Scalars['String']['input']>;
  start?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationGenerateDoctorsRfArgs = {
  department?: InputMaybe<Scalars['String']['input']>;
  empId?: InputMaybe<Scalars['String']['input']>;
  percentage?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationGenerateInvoiceTaxArgs = {
  invoiceId?: InputMaybe<Scalars['UUID']['input']>;
  isApply?: InputMaybe<Scalars['Boolean']['input']>;
  taxType?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationGenerateInvoiceVatArgs = {
  invoiceId?: InputMaybe<Scalars['UUID']['input']>;
  isVatable?: InputMaybe<Scalars['Boolean']['input']>;
};


/** Mutation root */
export type MutationGetEmployeeNoArgs = {
  biometric_id?: InputMaybe<Scalars['UUID']['input']>;
  employee_id?: InputMaybe<Scalars['UUID']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationGetTrialBalanceSummaryArgs = {
  end?: InputMaybe<Scalars['String']['input']>;
  start?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationHideInvestorAttachmentArgs = {
  hide?: InputMaybe<Scalars['Boolean']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationHospOptDischargesErArgs = {
  erconsultations?: InputMaybe<Scalars['String']['input']>;
  hfhudcode?: InputMaybe<Scalars['String']['input']>;
  icd10category?: InputMaybe<Scalars['String']['input']>;
  icd10code?: InputMaybe<Scalars['String']['input']>;
  number?: InputMaybe<Scalars['String']['input']>;
  reportingyear?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationHospOptDischargesEvArgs = {
  emergencyvisits?: InputMaybe<Scalars['String']['input']>;
  emergencyvisitsadult?: InputMaybe<Scalars['String']['input']>;
  emergencyvisitspediatric?: InputMaybe<Scalars['String']['input']>;
  evfromfacilitytoanother?: InputMaybe<Scalars['String']['input']>;
  evtofacilityfromanother?: InputMaybe<Scalars['String']['input']>;
  hfhudcode?: InputMaybe<Scalars['String']['input']>;
  reportingyear?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationHospOptDischargesMorbidityArgs = {
  f1to4?: InputMaybe<Scalars['String']['input']>;
  f5to9?: InputMaybe<Scalars['String']['input']>;
  f10to14?: InputMaybe<Scalars['String']['input']>;
  f15to19?: InputMaybe<Scalars['String']['input']>;
  f20to24?: InputMaybe<Scalars['String']['input']>;
  f25to29?: InputMaybe<Scalars['String']['input']>;
  f30to34?: InputMaybe<Scalars['String']['input']>;
  f35to39?: InputMaybe<Scalars['String']['input']>;
  f40to44?: InputMaybe<Scalars['String']['input']>;
  f45to49?: InputMaybe<Scalars['String']['input']>;
  f50to54?: InputMaybe<Scalars['String']['input']>;
  f55to59?: InputMaybe<Scalars['String']['input']>;
  f60to64?: InputMaybe<Scalars['String']['input']>;
  f65to69?: InputMaybe<Scalars['String']['input']>;
  f70over?: InputMaybe<Scalars['String']['input']>;
  fsubtotal?: InputMaybe<Scalars['String']['input']>;
  funder1?: InputMaybe<Scalars['String']['input']>;
  grandtotal?: InputMaybe<Scalars['String']['input']>;
  hfhudcode?: InputMaybe<Scalars['String']['input']>;
  icd10category?: InputMaybe<Scalars['String']['input']>;
  icd10code?: InputMaybe<Scalars['String']['input']>;
  icd10desc?: InputMaybe<Scalars['String']['input']>;
  m1to4?: InputMaybe<Scalars['String']['input']>;
  m5to9?: InputMaybe<Scalars['String']['input']>;
  m10to14?: InputMaybe<Scalars['String']['input']>;
  m15to19?: InputMaybe<Scalars['String']['input']>;
  m20to24?: InputMaybe<Scalars['String']['input']>;
  m25to29?: InputMaybe<Scalars['String']['input']>;
  m30to34?: InputMaybe<Scalars['String']['input']>;
  m35to39?: InputMaybe<Scalars['String']['input']>;
  m40to44?: InputMaybe<Scalars['String']['input']>;
  m45to49?: InputMaybe<Scalars['String']['input']>;
  m50to54?: InputMaybe<Scalars['String']['input']>;
  m55to59?: InputMaybe<Scalars['String']['input']>;
  m60to64?: InputMaybe<Scalars['String']['input']>;
  m65to69?: InputMaybe<Scalars['String']['input']>;
  m70over?: InputMaybe<Scalars['String']['input']>;
  msubtotal?: InputMaybe<Scalars['String']['input']>;
  munder1?: InputMaybe<Scalars['String']['input']>;
  reportingyear?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationHospOptDischargesNumberDeliveriesArgs = {
  hfhudcode?: InputMaybe<Scalars['String']['input']>;
  reportingyear?: InputMaybe<Scalars['String']['input']>;
  totalifdelivery?: InputMaybe<Scalars['String']['input']>;
  totallbcdelivery?: InputMaybe<Scalars['String']['input']>;
  totallbvdelivery?: InputMaybe<Scalars['String']['input']>;
  totalotherdelivery?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationHospOptDischargesOpdArgs = {
  hfhudcode?: InputMaybe<Scalars['String']['input']>;
  icd10category?: InputMaybe<Scalars['String']['input']>;
  icd10code?: InputMaybe<Scalars['String']['input']>;
  number?: InputMaybe<Scalars['String']['input']>;
  opdconsultations?: InputMaybe<Scalars['String']['input']>;
  reportingyear?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationHospOptDischargesOpvArgs = {
  adult?: InputMaybe<Scalars['String']['input']>;
  adultgeneralmedicine?: InputMaybe<Scalars['String']['input']>;
  antenatal?: InputMaybe<Scalars['String']['input']>;
  hfhudcode?: InputMaybe<Scalars['String']['input']>;
  newpatient?: InputMaybe<Scalars['String']['input']>;
  pediatric?: InputMaybe<Scalars['String']['input']>;
  postnatal?: InputMaybe<Scalars['String']['input']>;
  reportingyear?: InputMaybe<Scalars['String']['input']>;
  revisit?: InputMaybe<Scalars['String']['input']>;
  specialtynonsurgical?: InputMaybe<Scalars['String']['input']>;
  surgical?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationHospOptDischargesSpecialtyArgs = {
  absconded?: InputMaybe<Scalars['String']['input']>;
  deathsbelow48?: InputMaybe<Scalars['String']['input']>;
  deathsover48?: InputMaybe<Scalars['String']['input']>;
  hama?: InputMaybe<Scalars['String']['input']>;
  hfhudcode?: InputMaybe<Scalars['String']['input']>;
  hmo?: InputMaybe<Scalars['String']['input']>;
  nopatients?: InputMaybe<Scalars['String']['input']>;
  nphservicecharity?: InputMaybe<Scalars['String']['input']>;
  nphtotal?: InputMaybe<Scalars['String']['input']>;
  nppay?: InputMaybe<Scalars['String']['input']>;
  owwa?: InputMaybe<Scalars['String']['input']>;
  phpay?: InputMaybe<Scalars['String']['input']>;
  phservice?: InputMaybe<Scalars['String']['input']>;
  phtotal?: InputMaybe<Scalars['String']['input']>;
  recoveredimproved?: InputMaybe<Scalars['String']['input']>;
  remarks?: InputMaybe<Scalars['String']['input']>;
  reportingyear?: InputMaybe<Scalars['String']['input']>;
  totaldeaths?: InputMaybe<Scalars['String']['input']>;
  totaldischarges?: InputMaybe<Scalars['String']['input']>;
  totallengthstay?: InputMaybe<Scalars['String']['input']>;
  transferred?: InputMaybe<Scalars['String']['input']>;
  typeofservice?: InputMaybe<Scalars['String']['input']>;
  unimproved?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationHospOptDischargesSpecialtyOthersArgs = {
  absconded?: InputMaybe<Scalars['String']['input']>;
  deathsbelow48?: InputMaybe<Scalars['String']['input']>;
  deathsover48?: InputMaybe<Scalars['String']['input']>;
  hama?: InputMaybe<Scalars['String']['input']>;
  hfhudcode?: InputMaybe<Scalars['String']['input']>;
  hmo?: InputMaybe<Scalars['String']['input']>;
  nopatients?: InputMaybe<Scalars['String']['input']>;
  nphservicecharity?: InputMaybe<Scalars['String']['input']>;
  nphtotal?: InputMaybe<Scalars['String']['input']>;
  nppay?: InputMaybe<Scalars['String']['input']>;
  othertypeofservicespecify?: InputMaybe<Scalars['String']['input']>;
  owwa?: InputMaybe<Scalars['String']['input']>;
  phpay?: InputMaybe<Scalars['String']['input']>;
  phservice?: InputMaybe<Scalars['String']['input']>;
  phtotal?: InputMaybe<Scalars['String']['input']>;
  recoveredimproved?: InputMaybe<Scalars['String']['input']>;
  remarks?: InputMaybe<Scalars['String']['input']>;
  reportingyear?: InputMaybe<Scalars['String']['input']>;
  totaldeaths?: InputMaybe<Scalars['String']['input']>;
  totaldischarges?: InputMaybe<Scalars['String']['input']>;
  totallengthstay?: InputMaybe<Scalars['String']['input']>;
  transferred?: InputMaybe<Scalars['String']['input']>;
  unimproved?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationHospOptDischargesTestingArgs = {
  hfhudcode?: InputMaybe<Scalars['String']['input']>;
  number?: InputMaybe<Scalars['String']['input']>;
  reportingyear?: InputMaybe<Scalars['String']['input']>;
  testing?: InputMaybe<Scalars['String']['input']>;
  testinggroup?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationHospOptSummaryOfPatientsArgs = {
  hfhudcode?: InputMaybe<Scalars['String']['input']>;
  reportingyear?: InputMaybe<Scalars['String']['input']>;
  totaldischarges?: InputMaybe<Scalars['String']['input']>;
  totalibd?: InputMaybe<Scalars['String']['input']>;
  totalinpatients?: InputMaybe<Scalars['String']['input']>;
  totalinpatienttransfrom?: InputMaybe<Scalars['String']['input']>;
  totalinpatienttransto?: InputMaybe<Scalars['String']['input']>;
  totalnewborn?: InputMaybe<Scalars['String']['input']>;
  totalpad?: InputMaybe<Scalars['String']['input']>;
  totalpatientsremaining?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationHospitalOperationsDeathsArgs = {
  grossdeathrate?: InputMaybe<Scalars['String']['input']>;
  hfhudcode?: InputMaybe<Scalars['String']['input']>;
  ndrdenominator?: InputMaybe<Scalars['String']['input']>;
  ndrnumerator?: InputMaybe<Scalars['String']['input']>;
  netdeathrate?: InputMaybe<Scalars['String']['input']>;
  reportingyear?: InputMaybe<Scalars['String']['input']>;
  totaldeaths?: InputMaybe<Scalars['String']['input']>;
  totaldeaths48down?: InputMaybe<Scalars['String']['input']>;
  totaldeaths48up?: InputMaybe<Scalars['String']['input']>;
  totaldeathsnewborn?: InputMaybe<Scalars['String']['input']>;
  totaldischargedeaths?: InputMaybe<Scalars['String']['input']>;
  totaldoa?: InputMaybe<Scalars['String']['input']>;
  totalerdeaths?: InputMaybe<Scalars['String']['input']>;
  totalmaternaldeaths?: InputMaybe<Scalars['String']['input']>;
  totalneonataldeaths?: InputMaybe<Scalars['String']['input']>;
  totalstillbirths?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationHospitalOperationsHaiArgs = {
  hfhudcode?: InputMaybe<Scalars['String']['input']>;
  infectionrate?: InputMaybe<Scalars['String']['input']>;
  numdischarges?: InputMaybe<Scalars['String']['input']>;
  numhai?: InputMaybe<Scalars['String']['input']>;
  numssi?: InputMaybe<Scalars['String']['input']>;
  patientnumbsi?: InputMaybe<Scalars['String']['input']>;
  patientnumuti?: InputMaybe<Scalars['String']['input']>;
  patientnumvap?: InputMaybe<Scalars['String']['input']>;
  reportingyear?: InputMaybe<Scalars['String']['input']>;
  resultbsi?: InputMaybe<Scalars['String']['input']>;
  resultssi?: InputMaybe<Scalars['String']['input']>;
  resultuti?: InputMaybe<Scalars['String']['input']>;
  resultvap?: InputMaybe<Scalars['String']['input']>;
  totalcatheterdays?: InputMaybe<Scalars['String']['input']>;
  totalnumcentralline?: InputMaybe<Scalars['String']['input']>;
  totalproceduresdone?: InputMaybe<Scalars['String']['input']>;
  totalventilatordays?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationHospitalOperationsMajorOptArgs = {
  hfhudcode?: InputMaybe<Scalars['String']['input']>;
  number?: InputMaybe<Scalars['String']['input']>;
  operationcode?: InputMaybe<Scalars['String']['input']>;
  reportingyear?: InputMaybe<Scalars['String']['input']>;
  surgicaloperation?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationHospitalOperationsMinorOptArgs = {
  hfhudcode?: InputMaybe<Scalars['String']['input']>;
  number?: InputMaybe<Scalars['String']['input']>;
  operationcode?: InputMaybe<Scalars['String']['input']>;
  reportingyear?: InputMaybe<Scalars['String']['input']>;
  surgicaloperation?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationHospitalOperationsMortalityDeathsArgs = {
  f1to4?: InputMaybe<Scalars['String']['input']>;
  f5to9?: InputMaybe<Scalars['String']['input']>;
  f10to14?: InputMaybe<Scalars['String']['input']>;
  f15to19?: InputMaybe<Scalars['String']['input']>;
  f20to24?: InputMaybe<Scalars['String']['input']>;
  f25to29?: InputMaybe<Scalars['String']['input']>;
  f30to34?: InputMaybe<Scalars['String']['input']>;
  f35to39?: InputMaybe<Scalars['String']['input']>;
  f40to44?: InputMaybe<Scalars['String']['input']>;
  f45to49?: InputMaybe<Scalars['String']['input']>;
  f50to54?: InputMaybe<Scalars['String']['input']>;
  f55to59?: InputMaybe<Scalars['String']['input']>;
  f60to64?: InputMaybe<Scalars['String']['input']>;
  f65to69?: InputMaybe<Scalars['String']['input']>;
  f70over?: InputMaybe<Scalars['String']['input']>;
  fsubtotal?: InputMaybe<Scalars['String']['input']>;
  funder1?: InputMaybe<Scalars['String']['input']>;
  grandtotal?: InputMaybe<Scalars['String']['input']>;
  hfhudcode?: InputMaybe<Scalars['String']['input']>;
  icd10category?: InputMaybe<Scalars['String']['input']>;
  icd10code?: InputMaybe<Scalars['String']['input']>;
  icd10desc?: InputMaybe<Scalars['String']['input']>;
  m1to4?: InputMaybe<Scalars['String']['input']>;
  m5to9?: InputMaybe<Scalars['String']['input']>;
  m10to14?: InputMaybe<Scalars['String']['input']>;
  m15to19?: InputMaybe<Scalars['String']['input']>;
  m20to24?: InputMaybe<Scalars['String']['input']>;
  m25to29?: InputMaybe<Scalars['String']['input']>;
  m30to34?: InputMaybe<Scalars['String']['input']>;
  m35to39?: InputMaybe<Scalars['String']['input']>;
  m40to44?: InputMaybe<Scalars['String']['input']>;
  m45to49?: InputMaybe<Scalars['String']['input']>;
  m50to54?: InputMaybe<Scalars['String']['input']>;
  m55to59?: InputMaybe<Scalars['String']['input']>;
  m60to64?: InputMaybe<Scalars['String']['input']>;
  m65to69?: InputMaybe<Scalars['String']['input']>;
  m70over?: InputMaybe<Scalars['String']['input']>;
  msubtotal?: InputMaybe<Scalars['String']['input']>;
  munder1?: InputMaybe<Scalars['String']['input']>;
  reportingyear?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationHospitalOptDischargeErArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Mutation root */
export type MutationHrApprovalOrRejectEmployeeRequestArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  hrApprovedBy?: InputMaybe<Scalars['UUID']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationIgnoreOrderArgs = {
  orderId?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationIgnoreOrderItemArgs = {
  orderItemId?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationImportInvestorProfileArgs = {
  attachment?: InputMaybe<Array<InputMaybe<Scalars['FileUpload']['input']>>>;
};


/** Mutation root */
export type MutationInsertAccRecManualLedgerArgs = {
  accountReceivable?: InputMaybe<AccountReceivableInput>;
  companyAccount?: InputMaybe<CompanyAccountInput>;
  createdDate?: InputMaybe<Scalars['Instant']['input']>;
  journalAccounts?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
  supplier?: InputMaybe<SupplierInput>;
};


/** Mutation root */
export type MutationInsertArTransManualLedgerArgs = {
  arTransaction?: InputMaybe<ArTransactionInput>;
  companyAccount?: InputMaybe<CompanyAccountInput>;
  createdDate?: InputMaybe<Scalars['Instant']['input']>;
  journalAccounts?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
  supplier?: InputMaybe<SupplierInput>;
  type?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationInsertDepartmentItemArgs = {
  fields?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
};


/** Mutation root */
export type MutationInsertLedgerMaterialProdArgs = {
  fields?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
};


/** Mutation root */
export type MutationInsertToInventoryLedgerArgs = {
  fields?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
  type?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationIntegrationAuthArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationInvoicePostingArgs = {
  entryPosting?: InputMaybe<Scalars['Boolean']['input']>;
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationItemPriceCheckArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
};


/** Mutation root */
export type MutationLoadPhysicalCountItemsArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationLoanMAddLoanArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
};


/** Mutation root */
export type MutationLoanMPaidLoanArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationLoanMStartingEntryArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationLoanMVoidPaidLoanArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationLoginArgs = {
  credentials?: InputMaybe<Scalars['Map_String_StringScalar']['input']>;
};


/** Mutation root */
export type MutationMassPostInventoryCountArgs = {
  condition?: InputMaybe<Scalars['Int']['input']>;
  countDate?: InputMaybe<Scalars['String']['input']>;
  dateCounted?: InputMaybe<Scalars['Instant']['input']>;
  departmentId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationMassUpdateItemPricesArgs = {
  costGroup?: InputMaybe<Scalars['String']['input']>;
  group?: InputMaybe<Scalars['String']['input']>;
  percentageValue?: InputMaybe<Scalars['String']['input']>;
  tierDetail?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationMassUpdateMarkupArgs = {
  category?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
  groupId?: InputMaybe<Scalars['UUID']['input']>;
  markup?: InputMaybe<Scalars['BigDecimal']['input']>;
};


/** Mutation root */
export type MutationMassUpdateServicePricesArgs = {
  costGroup?: InputMaybe<Scalars['String']['input']>;
  deptId?: InputMaybe<Scalars['String']['input']>;
  percentageValue?: InputMaybe<Scalars['String']['input']>;
  tierDetail?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationMassUpdateServicesCostArgs = {
  department?: InputMaybe<Scalars['String']['input']>;
  operator?: InputMaybe<Scalars['String']['input']>;
  percentageValue?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationMaterial_Production_MutationArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  items?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
};


/** Mutation root */
export type MutationMigrateEmployeeArgs = {
  list?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
};


/** Mutation root */
export type MutationMigrateEmployeeIdArgs = {
  list?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
};


/** Mutation root */
export type MutationMutatePurchaseOrderArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  poItems?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
};


/** Mutation root */
export type MutationMutatePurchaseOrderFixedAssetArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  poItems?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
};


/** Mutation root */
export type MutationNotifyAdmissionArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationOverridePriceTierArgs = {
  billingId?: InputMaybe<Scalars['UUID']['input']>;
  priceTierId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationOverrideRecItemsArgs = {
  amount?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  po?: InputMaybe<Scalars['UUID']['input']>;
  toDelete?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
  toInsert?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
};


/** Mutation root */
export type MutationPatientMayGoHomeArgs = {
  caseId?: InputMaybe<Scalars['UUID']['input']>;
  mayGoHomeDateTime?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationPhysicalCountInsertArgs = {
  countDate?: InputMaybe<Scalars['String']['input']>;
  dateCounted?: InputMaybe<Scalars['Instant']['input']>;
  departmentId?: InputMaybe<Scalars['UUID']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationPhysicalCountLedgerArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
};


/** Mutation root */
export type MutationPing_DeviceArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationPostAddOnArgs = {
  add_on?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
  employee_id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationPostAllowanceArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationPostApArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  status?: InputMaybe<Scalars['Boolean']['input']>;
};


/** Mutation root */
export type MutationPostApManualArgs = {
  entries?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
  header?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationPostBeginningBalanceArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  items?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
};


/** Mutation root */
export type MutationPostClaimArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  items?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
};


/** Mutation root */
export type MutationPostCreateRsvAccountArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationPostDmArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  status?: InputMaybe<Scalars['Boolean']['input']>;
};


/** Mutation root */
export type MutationPostDManualArgs = {
  entries?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
  header?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationPostDohSubmittedReportArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Mutation root */
export type MutationPostDeleteClaimItemArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationPostDietCategoryArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationPostDisbursementArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  status?: InputMaybe<Scalars['Boolean']['input']>;
};


/** Mutation root */
export type MutationPostDischargeEvArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationPostDischargeMobidityArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationPostDischargeOpdArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
};


/** Mutation root */
export type MutationPostDischargeOpvArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationPostDischargeSpecialtyArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationPostDischargeSpecialtyOthersArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationPostDischargeTestingArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationPostDischargesErArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationPostDischargesOpdArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationPostDohSummaryPatientArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Mutation root */
export type MutationPostDsManualArgs = {
  entries?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
  header?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationPostEmployeeAllowanceArgs = {
  allowance_id?: InputMaybe<Scalars['UUID']['input']>;
  employee_id?: InputMaybe<Scalars['UUID']['input']>;
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationPostEmployeeBiometricArgs = {
  biometric_id?: InputMaybe<Scalars['UUID']['input']>;
  employee_id?: InputMaybe<Scalars['UUID']['input']>;
  fields?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationPostEmployeeLoanArgs = {
  employee?: InputMaybe<Scalars['UUID']['input']>;
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationPostExpensesArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationPostGeneralInfoArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationPostGeneralInfoClassArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationPostHospOptDischargesOpdArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Mutation root */
export type MutationPostHospOptDischargesOpvArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Mutation root */
export type MutationPostHospitalDichargeMorbidityArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
};


/** Mutation root */
export type MutationPostHospitalDichargeMortalityArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
};


/** Mutation root */
export type MutationPostHospitalRevenueDohArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
};


/** Mutation root */
export type MutationPostInventoryGlobalArgs = {
  items?: InputMaybe<LedgerDtoInput>;
};


/** Mutation root */
export type MutationPostIssuanceItemsArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  items?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
};


/** Mutation root */
export type MutationPostMaterialProdArgs = {
  parentId?: InputMaybe<Scalars['UUID']['input']>;
  transDate?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationPostMaterialProdTransactionArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  items?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
};


/** Mutation root */
export type MutationPostMortalityDeathsArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationPostNumberDeliveriesArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationPostNumberDeliverisDohArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
};


/** Mutation root */
export type MutationPostOperationDeathsArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationPostOperationHaiArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationPostOperationHaiDohArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
};


/** Mutation root */
export type MutationPostOperationMajorOptDohArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
};


/** Mutation root */
export type MutationPostOperationMinorArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationPostOperationMinorOptDohArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
};


/** Mutation root */
export type MutationPostOptDischargeOpvDohArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
};


/** Mutation root */
export type MutationPostPfArgs = {
  caseId?: InputMaybe<Scalars['UUID']['input']>;
  employeeId?: InputMaybe<Scalars['UUID']['input']>;
  pf?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationPostPhysicalCountTransactionArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  items?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
};


/** Mutation root */
export type MutationPostQtyAdjustmentArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  items?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
};


/** Mutation root */
export type MutationPostQualityManagementArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationPostReappManualArgs = {
  entries?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
  header?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationPostReapplicationArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  status?: InputMaybe<Scalars['Boolean']['input']>;
};


/** Mutation root */
export type MutationPostReturnSupplierArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  items?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
};


/** Mutation root */
export type MutationPostRevenuesArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationPostStaffingOthersArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationPostStaffingPatternArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationPostStaffingPatternDohArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
};


/** Mutation root */
export type MutationPostStaffingPatternOthersDohArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
};


/** Mutation root */
export type MutationPostSubmittedReportsArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationPostSubmittedReportsDohArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
};


/** Mutation root */
export type MutationPostSummaryOfPatientArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationPostToLedgerArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationPostVoidDepStockArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  status?: InputMaybe<Scalars['Boolean']['input']>;
};


/** Mutation root */
export type MutationPost_DietArgs = {
  diet?: InputMaybe<DietInput>;
};


/** Mutation root */
export type MutationPostmajoroptArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationProcessArTransactionsArgs = {
  arg0?: InputMaybe<Scalars['String']['input']>;
  arg1?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  arg2?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
};


/** Mutation root */
export type MutationPurchaseOrderMutationArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  poItems?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
  prItems?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
};


/** Mutation root */
export type MutationQuantityAdjustmentInsertArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
};


/** Mutation root */
export type MutationReOpenFolioArgs = {
  billingId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationReSyncTransferToBillingScheduleArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationRecalculateMovingArgs = {
  itemId?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationRecalculateOneSummaryArgs = {
  empId?: InputMaybe<Scalars['UUID']['input']>;
  endDate?: InputMaybe<Scalars['Instant']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  startDate?: InputMaybe<Scalars['Instant']['input']>;
};


/** Mutation root */
export type MutationRedoIssuanceArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationRemove2307Args = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationRemoveArTransactionArgs = {
  arTransId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationRemoveApAppArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  parent?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationRemoveApDetailsArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationRemoveApLedgerArgs = {
  ref?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationRemoveBillScheduleItemsArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationRemoveCheckArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationRemoveCreditNoteItemArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationRemoveDmDetailsArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  parent?: InputMaybe<Scalars['UUID']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationRemoveEmployeeFromOtherDeductionArgs = {
  employeeId?: InputMaybe<Scalars['UUID']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationRemoveEmployeePermissionOrRoleArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationRemoveEmployeeScheduleArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationRemoveExpenseArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationRemoveFixedAssetItemArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationRemoveFixedDepreciationArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationRemoveFixedTransferArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationRemoveInvoiceItemArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationRemoveItemSupplierArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationRemoveMpItemArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationRemovePoItemArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationRemovePrItemArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationRemoveReturnSupItemArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationRemoveSrrItemArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationRemoveSoaGroupItemArgs = {
  billingItemId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationRemoveUpdatePoItemsArgs = {
  items?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
};


/** Mutation root */
export type MutationRemoveWtxArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationResetPasswordArgs = {
  newPassword?: InputMaybe<Scalars['String']['input']>;
  username?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationReturnItemsArgs = {
  billingItemId?: InputMaybe<Scalars['UUID']['input']>;
  countReturned?: InputMaybe<Scalars['Int']['input']>;
};


/** Mutation root */
export type MutationReturnMedicationArgs = {
  _case?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  items?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
  returnedById?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationReturnSupplierInsertArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  items?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
};


/** Mutation root */
export type MutationRevenuesArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
};


/** Mutation root */
export type MutationReverseHeaderArgs = {
  headerId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationRevertEmployeeRequestArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  remarks?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationRmDepIssueItemArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationRmDepStockItemArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationSaveAccountBalancesItemArgs = {
  accountBalanceId?: InputMaybe<Scalars['UUID']['input']>;
  entries?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
  headerId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationSaveArPaymentTrackerArgs = {
  arPayment?: InputMaybe<ArPaymentTrackerInput>;
};


/** Mutation root */
export type MutationSaveArPaymentTrackerTransArgs = {
  arPaymentTrans?: InputMaybe<ArPaymentTrackerTransactionInput>;
};


/** Mutation root */
export type MutationSaveDeliveriesLogsArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Mutation root */
export type MutationSaveDietArgs = {
  dateAdded?: InputMaybe<Scalars['Instant']['input']>;
  dietId?: InputMaybe<Scalars['UUID']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationSaveDietv2Args = {
  additionalInstructions?: InputMaybe<Scalars['String']['input']>;
  dateAdded?: InputMaybe<Scalars['Instant']['input']>;
  dietId?: InputMaybe<Scalars['UUID']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationSaveDohLogsArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationSaveInventoryLedgerArgs = {
  items?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
  parentId?: InputMaybe<Scalars['String']['input']>;
  postFrom?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationSaveObgynHistoryArgs = {
  caseId?: InputMaybe<Scalars['UUID']['input']>;
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationSavePurchaseRequestItemsArgs = {
  prItems?: InputMaybe<Array<InputMaybe<PurchaseRequestItemInput>>>;
};


/** Mutation root */
export type MutationSave_Biometric_AttlogArgs = {
  endDate?: InputMaybe<Scalars['Instant']['input']>;
  logs?: InputMaybe<Array<InputMaybe<AttLogDtoInput>>>;
  startDate?: InputMaybe<Scalars['Instant']['input']>;
};


/** Mutation root */
export type MutationSave_Philheath_DetailsArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
};


/** Mutation root */
export type MutationSavecaseratesArgs = {
  billingId?: InputMaybe<Scalars['UUID']['input']>;
  caseId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationSavecf4Args = {
  caseId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationSaveconfinementdetailsArgs = {
  caseId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationSaveconfinementdetailsv2Args = {
  caseId?: InputMaybe<Scalars['UUID']['input']>;
  credentials?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationSavecourseinthewardsArgs = {
  caseId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationSavedTrialBalanceArgs = {
  end?: InputMaybe<Scalars['String']['input']>;
  start?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationSavediagnosisArgs = {
  caseId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationSavemedicinesArgs = {
  billingId?: InputMaybe<Scalars['UUID']['input']>;
  caseId?: InputMaybe<Scalars['UUID']['input']>;
  credentials?: InputMaybe<Scalars['String']['input']>;
  includePatientMeds?: InputMaybe<Scalars['Boolean']['input']>;
};


/** Mutation root */
export type MutationSaveothersArgs = {
  billingId?: InputMaybe<Scalars['UUID']['input']>;
  caseId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationSavepfchargesArgs = {
  billingId?: InputMaybe<Scalars['UUID']['input']>;
  caseId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationSearchCaseRatesArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
};


/** Mutation root */
export type MutationSendBedCapacityArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
};


/** Mutation root */
export type MutationSendDischargeErArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
};


/** Mutation root */
export type MutationSendDischargeEvArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
};


/** Mutation root */
export type MutationSendDischargeSpecialtyArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
};


/** Mutation root */
export type MutationSendDischargeTestingArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
};


/** Mutation root */
export type MutationSendExpensesArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
};


/** Mutation root */
export type MutationSendInfoClassificationArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
};


/** Mutation root */
export type MutationSendQualityManagementArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
};


/** Mutation root */
export type MutationSendSpecialtyOthersArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
};


/** Mutation root */
export type MutationSendSummaryPatientArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
};


/** Mutation root */
export type MutationServicePriceCheckArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
};


/** Mutation root */
export type MutationSetCounterArgs = {
  seqName?: InputMaybe<Scalars['String']['input']>;
  value?: InputMaybe<Scalars['Long']['input']>;
};


/** Mutation root */
export type MutationSetEmployeeRolesAndPermissionsArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  permissions?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  roles?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


/** Mutation root */
export type MutationSetToCompletedArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationSet_Phic_Drug_CodeArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationStaffingPatternArgs = {
  activerotatingaffiliate?: InputMaybe<Scalars['String']['input']>;
  fulltime40contractual?: InputMaybe<Scalars['String']['input']>;
  fulltime40permanent?: InputMaybe<Scalars['String']['input']>;
  hfhudcode?: InputMaybe<Scalars['String']['input']>;
  outsourced?: InputMaybe<Scalars['String']['input']>;
  parttimecontractual?: InputMaybe<Scalars['String']['input']>;
  parttimepermanent?: InputMaybe<Scalars['String']['input']>;
  professiondesignation?: InputMaybe<Scalars['String']['input']>;
  reportingyear?: InputMaybe<Scalars['String']['input']>;
  specialtyboardcertified?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationStaffingPatternOthersArgs = {
  activerotatingaffiliate?: InputMaybe<Scalars['String']['input']>;
  fulltime40contractual?: InputMaybe<Scalars['String']['input']>;
  fulltime40permanent?: InputMaybe<Scalars['String']['input']>;
  hfhudcode?: InputMaybe<Scalars['String']['input']>;
  outsourced?: InputMaybe<Scalars['String']['input']>;
  parent?: InputMaybe<Scalars['String']['input']>;
  parttimecontractual?: InputMaybe<Scalars['String']['input']>;
  parttimepermanent?: InputMaybe<Scalars['String']['input']>;
  professiondesignation?: InputMaybe<Scalars['String']['input']>;
  reportingyear?: InputMaybe<Scalars['String']['input']>;
  specialtyboardcertified?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationSubmitDeathMortalitiesArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Mutation root */
export type MutationSubmitDischargeMorbidityArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Mutation root */
export type MutationSubmitEmployeeRequestArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationSubmitGenInfoBedCapacityArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Mutation root */
export type MutationSubmitGenInfoClassificationArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Mutation root */
export type MutationSubmitGenInfoQualityManagementArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Mutation root */
export type MutationSubmitHospOptDischargesSpecialtyArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Mutation root */
export type MutationSubmitHospOptDischargesTestingArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Mutation root */
export type MutationSubmitHospitalOperationsDeathsArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Mutation root */
export type MutationSubmitHospitalOperationsHaiArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Mutation root */
export type MutationSubmitHospitalOperationsMajorOptArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Mutation root */
export type MutationSubmitHospitalOperationsMinorOptArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Mutation root */
export type MutationSubmitStaffingPatternArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Mutation root */
export type MutationSubmitStaffingPatternV2Args = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Mutation root */
export type MutationSubmittedReportsArgs = {
  department?: InputMaybe<Scalars['String']['input']>;
  designation?: InputMaybe<Scalars['String']['input']>;
  hfhudcode?: InputMaybe<Scalars['String']['input']>;
  reportedby?: InputMaybe<Scalars['String']['input']>;
  reportingstatus?: InputMaybe<Scalars['String']['input']>;
  reportingyear?: InputMaybe<Scalars['String']['input']>;
  section?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationSyncSrrUnitCostArgs = {
  itemId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationTestFromJsonGenerateAutoEntriesArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
};


/** Mutation root */
export type MutationToggleActiveTransferArgs = {
  caseId?: InputMaybe<Scalars['UUID']['input']>;
  transferId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationToggleBillingItemArgs = {
  billingItemId?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationToggleLockCaseArgs = {
  id?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationToggleLockItemPriceControlArgs = {
  itemId?: InputMaybe<Scalars['String']['input']>;
  tierDetail?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationToggleLockServicePriceControlArgs = {
  serviceId?: InputMaybe<Scalars['String']['input']>;
  tierDetail?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationToggleVoidTransferArgs = {
  caseId?: InputMaybe<Scalars['UUID']['input']>;
  transferId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationTransactionProcessArgs = {
  dataEntry?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  fieldsItems?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
  journalDate?: InputMaybe<Scalars['Date']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationTransferBulkFixedAssetsArgs = {
  departmentId?: InputMaybe<Scalars['UUID']['input']>;
  itemIds?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
};


/** Mutation root */
export type MutationTransferIntegrationArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationTransferItemArgs = {
  billingIdTarget?: InputMaybe<Scalars['UUID']['input']>;
  itemsId?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
};


/** Mutation root */
export type MutationUpSertPurchaseOrderArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  items?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
};


/** Mutation root */
export type MutationUpdate2307Args = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  ref?: InputMaybe<Scalars['UUID']['input']>;
  status?: InputMaybe<Scalars['Boolean']['input']>;
};


/** Mutation root */
export type MutationUpdateActiveArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  newValue?: InputMaybe<Scalars['Int']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationUpdateAllowanceTemplateItemStatusArgs = {
  allowanceId?: InputMaybe<Scalars['UUID']['input']>;
  templateId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpdateApProcessArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  status?: InputMaybe<Scalars['Boolean']['input']>;
};


/** Mutation root */
export type MutationUpdateBillingPackageItemArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  item?: InputMaybe<OrderSlipItemPackageContentInput>;
};


/** Mutation root */
export type MutationUpdateBillingPackageListArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  refNo?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationUpdateBillingScheduleArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpdateBillingScheduleItemArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpdateCaseArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
};


/** Mutation root */
export type MutationUpdateCaseAndTransferArgs = {
  caseId?: InputMaybe<Scalars['UUID']['input']>;
  department?: InputMaybe<Scalars['UUID']['input']>;
  registryType?: InputMaybe<Scalars['String']['input']>;
  room?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationUpdateClaimArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
};


/** Mutation root */
export type MutationUpdateCreditNoteTotalsArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpdateDefaultParValueArgs = {
  discountValue?: InputMaybe<Scalars['String']['input']>;
  discountValueType?: InputMaybe<Scalars['String']['input']>;
  parValueAmount?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationUpdateExcludeListArgs = {
  coaId?: InputMaybe<Scalars['UUID']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpdateHoursArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  logs?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
};


/** Mutation root */
export type MutationUpdateIntegrationItemArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  integrationId?: InputMaybe<Scalars['UUID']['input']>;
  integrationItemId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpdateInvoiceTotalsArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpdateItemPricesArgs = {
  itemId?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationUpdateLedgerArgs = {
  deletedFields?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
  updatedFields?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
};


/** Mutation root */
export type MutationUpdateMedicationArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpdateOrderItemArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
};


/** Mutation root */
export type MutationUpdateOrderSlipItemStatusArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationUpdateOtherDeductionEmployeeStatusArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  status?: InputMaybe<PayrollEmployeeStatus>;
};


/** Mutation root */
export type MutationUpdatePfNonCompanyArgs = {
  pf?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
  status?: InputMaybe<Scalars['Boolean']['input']>;
};


/** Mutation root */
export type MutationUpdatePrQtyArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  qty?: InputMaybe<Scalars['Int']['input']>;
};


/** Mutation root */
export type MutationUpdatePrStatusArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  status?: InputMaybe<Scalars['Boolean']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationUpdatePaymentTrackerDetailsArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpdatePayrollDetailsArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpdatePayrollEmployeeAllowanceStatusArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  status?: InputMaybe<PayrollEmployeeStatus>;
};


/** Mutation root */
export type MutationUpdatePayrollEmployeeContributionStatusArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  status?: InputMaybe<PayrollEmployeeStatus>;
};


/** Mutation root */
export type MutationUpdatePayrollModuleEmployeeStatusArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  module?: InputMaybe<PayrollModule>;
  status?: InputMaybe<PayrollEmployeeStatus>;
};


/** Mutation root */
export type MutationUpdatePayrollStatusArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationUpdatePersonalAccRefNoArgs = {
  accRecId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpdatePfCompanyArgs = {
  pf?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
  status?: InputMaybe<Scalars['Boolean']['input']>;
};


/** Mutation root */
export type MutationUpdatePfProcessArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  status?: InputMaybe<Scalars['Boolean']['input']>;
};


/** Mutation root */
export type MutationUpdatePhyUnitCostArgs = {
  cost?: InputMaybe<Scalars['BigDecimal']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpdatePositionStatusArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  status?: InputMaybe<Scalars['Boolean']['input']>;
};


/** Mutation root */
export type MutationUpdateRecStatusArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationUpdateReadersArgs = {
  pf?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
  status?: InputMaybe<Scalars['Boolean']['input']>;
};


/** Mutation root */
export type MutationUpdateReapplyArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  items?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
};


/** Mutation root */
export type MutationUpdateReorderArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  qty?: InputMaybe<Scalars['BigDecimal']['input']>;
};


/** Mutation root */
export type MutationUpdateRfArgs = {
  percentage?: InputMaybe<Scalars['String']['input']>;
  rfId?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationUpdateRfFixedPriceArgs = {
  fixedPrice?: InputMaybe<Scalars['String']['input']>;
  rfId?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationUpdateRoomArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
};


/** Mutation root */
export type MutationUpdateSalaryRateMultiplierArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
};


/** Mutation root */
export type MutationUpdateServicePricesArgs = {
  serviceId?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationUpdateStatusArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationUpdateStatusBegItemArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  status?: InputMaybe<Scalars['Boolean']['input']>;
};


/** Mutation root */
export type MutationUpdateStatusPhysicalCountArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  refId?: InputMaybe<Scalars['UUID']['input']>;
  status?: InputMaybe<Scalars['Boolean']['input']>;
};


/** Mutation root */
export type MutationUpdateStatusPhysicalTransArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationUpdateStatusSrrItemsArgs = {
  receivingId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpdateStockCardItemCostArgs = {
  itemId?: InputMaybe<Scalars['UUID']['input']>;
  unitCost?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationUpdateStockCardUnitCostArgs = {
  itemId?: InputMaybe<Scalars['UUID']['input']>;
  unitCost?: InputMaybe<Scalars['BigDecimal']['input']>;
};


/** Mutation root */
export type MutationUpdateTimekeepingEmployeeStatusArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  status?: InputMaybe<PayrollEmployeeStatus>;
};


/** Mutation root */
export type MutationUpdateTimekeepingStatusArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationUpdateTransferBillingItemArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpdateWithInfectionArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  infectionType?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpdate_Patient_DietArgs = {
  dietId?: InputMaybe<Scalars['UUID']['input']>;
  patientId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsert2307Args = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  supplier?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertArTransactionTypeArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertAccountBalancesArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertAccountConfigArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertAccountListArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertAcctCategoryArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertAdjQtyUnitCostArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  qty?: InputMaybe<Scalars['Int']['input']>;
  unitCost?: InputMaybe<Scalars['BigDecimal']['input']>;
};


/** Mutation root */
export type MutationUpsertAllowanceArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertAllowanceTemplateArgs = {
  item_fields?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
  template_fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  template_id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertApLedgerArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  supplier?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertApTransactionArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertAppointmentArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertArManualDeductionsArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertArPaymentTrackerArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertBanksArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertBegDetailsArgs = {
  bt?: InputMaybe<BeginningTransactionInput>;
  dep?: InputMaybe<Scalars['UUID']['input']>;
  it?: InputMaybe<BeginningItemDtoInput>;
  item?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertBegTransArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  items?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
};


/** Mutation root */
export type MutationUpsertBillingScheduleArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  fieldsItems?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertBulkFixedAssetItemArgs = {
  fields?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
};


/** Mutation root */
export type MutationUpsertCaseArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertCashBasisArgs = {
  cashBasis?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  cashBasisItems?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertCashierTerminalsArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertCatheterRecordArgs = {
  aCase?: InputMaybe<Scalars['UUID']['input']>;
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertCentralLineRecordArgs = {
  aCase?: InputMaybe<Scalars['UUID']['input']>;
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertCheckArgs = {
  it?: InputMaybe<DisbursementDtoInput>;
  parent?: InputMaybe<DisbursementInput>;
};


/** Mutation root */
export type MutationUpsertClinicRoomArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertCollectionDepositArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertCompanyArArgs = {
  accRecId?: InputMaybe<Scalars['UUID']['input']>;
  billingScheduleId?: InputMaybe<Scalars['UUID']['input']>;
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
};


/** Mutation root */
export type MutationUpsertCompanyAccountsArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertCompanyTypeArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertConfigArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertConsolidatedArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  items?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
  supplier?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertConstantsByTypeArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationUpsertCreditNoteItemArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertDmArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  items?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
};


/** Mutation root */
export type MutationUpsertDebitMemoArgs = {
  details?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  items?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
};


/** Mutation root */
export type MutationUpsertDefaultAdmissionItemsArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertDepIssuanceArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  issueItems?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
};


/** Mutation root */
export type MutationUpsertDepIssuanceByRequestArgs = {
  issueItems?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
  reqId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertDepItemArgs = {
  assign?: InputMaybe<Scalars['Boolean']['input']>;
  depId?: InputMaybe<Scalars['UUID']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  itemId?: InputMaybe<Scalars['UUID']['input']>;
  trade?: InputMaybe<Scalars['Boolean']['input']>;
};


/** Mutation root */
export type MutationUpsertDepStockArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  items?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
  payload?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
};


/** Mutation root */
export type MutationUpsertDepartementScheduleArgs = {
  department_id?: InputMaybe<Scalars['UUID']['input']>;
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertDepartmentArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertDepartmentStockArgs = {
  itemsReq?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
  otherValue?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  parentId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertDependentsArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  investorId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertDietNotesArgs = {
  caseId?: InputMaybe<Scalars['UUID']['input']>;
  employeeId?: InputMaybe<Scalars['UUID']['input']>;
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertDisApArgs = {
  it?: InputMaybe<DisbursementApDtoInput>;
  parent?: InputMaybe<DisbursementInput>;
};


/** Mutation root */
export type MutationUpsertDisDmArgs = {
  it?: InputMaybe<DisbursementApDtoInput>;
  parent?: InputMaybe<DebitMemoInput>;
};


/** Mutation root */
export type MutationUpsertDisReapArgs = {
  it?: InputMaybe<DisbursementApDtoInput>;
  parent?: InputMaybe<ReapplicationInput>;
};


/** Mutation root */
export type MutationUpsertDisbursementArgs = {
  ap?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
  checks?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
  expense?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  wtx?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
};


/** Mutation root */
export type MutationUpsertDiscountsArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertDmDetialsArgs = {
  it?: InputMaybe<DmDetailsDtoInput>;
  parent?: InputMaybe<DebitMemoInput>;
};


/** Mutation root */
export type MutationUpsertDohConfigArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  totalDeathsConfig?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
};


/** Mutation root */
export type MutationUpsertEclaimAccountArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertEclaimCaseRefArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertEclaimSettingArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertEmployeeArgs = {
  departmentId?: InputMaybe<Scalars['UUID']['input']>;
  departmentOfDutyId?: InputMaybe<Scalars['UUID']['input']>;
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertEmployeeAllowanceArgs = {
  employee_id?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
  template_id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertEmployeeAttendanceArgs = {
  employee?: InputMaybe<Scalars['UUID']['input']>;
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertEmployeeRequestArgs = {
  approvals?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
  approvedByHrOverride?: InputMaybe<Scalars['Boolean']['input']>;
  department?: InputMaybe<Scalars['UUID']['input']>;
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  hrApprovedBy?: InputMaybe<Scalars['UUID']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  requestedBy?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertEmployeeRequestApprovalArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  request?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertEmployeeToOtherDeductionArgs = {
  employees?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertEventCalendarArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertExTransTypeArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertExpArgs = {
  it?: InputMaybe<DisbursementExpDtoInput>;
  parent?: InputMaybe<DisbursementInput>;
};


/** Mutation root */
export type MutationUpsertFinancialReportArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertFiscalArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertFixedAssetArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertFixedAssetDepreciationArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertFixedAssetItemArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertFixedAssetTransferArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertFromPfArgs = {
  parent?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  pf?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
};


/** Mutation root */
export type MutationUpsertFromPfNonCompanyArgs = {
  parent?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  pf?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
};


/** Mutation root */
export type MutationUpsertFromRfArgs = {
  parent?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  pf?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
};


/** Mutation root */
export type MutationUpsertGenericsArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertGroupPolicyArgs = {
  deletedPermissions?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  permissions?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


/** Mutation root */
export type MutationUpsertHospitalConfigArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertIntegrationArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertIntegrationGroupArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertInvestorsArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertItemArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertItemAsFixedAssetArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertItemCategoryArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertItemGroupArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertItemIssuanceArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  issueItems?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
};


/** Mutation root */
export type MutationUpsertItemIssuanceFromItemReqArgs = {
  deletedIssueItems?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  issueId?: InputMaybe<Scalars['UUID']['input']>;
  issueItems?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
  requestItems?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
  resetRequestNo?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


/** Mutation root */
export type MutationUpsertItemSupplierArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertJobTitleArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  value?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationUpsertLineTypeSourceArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  lineTypeId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertLineTypesArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  fr?: InputMaybe<Scalars['UUID']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertLoanAccountsArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertLogCountArgs = {
  count?: InputMaybe<Scalars['Int']['input']>;
  parentId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertMpArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  items?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
};


/** Mutation root */
export type MutationUpsertManagingPhysicianArgs = {
  caseId?: InputMaybe<Scalars['UUID']['input']>;
  employeeId?: InputMaybe<Scalars['UUID']['input']>;
  position?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationUpsertManagingPhysicianByFullNameArgs = {
  caseId?: InputMaybe<Scalars['UUID']['input']>;
  employeeFullName?: InputMaybe<Scalars['String']['input']>;
  position?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationUpsertManualAccountReceivableArgs = {
  companyId?: InputMaybe<Scalars['UUID']['input']>;
  creditMemoId?: InputMaybe<Scalars['UUID']['input']>;
  entries?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationUpsertManualBillingScheduleArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  fieldsItems?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertMaterialProductionArgs = {
  otherValue?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  output?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
  parentId?: InputMaybe<Scalars['UUID']['input']>;
  source?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
};


/** Mutation root */
export type MutationUpsertMotherAccountSourceArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  lineTypeId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertNewReceivingArgs = {
  deleted?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
  receiving?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  receivingId?: InputMaybe<Scalars['String']['input']>;
  receivingItems?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
};


/** Mutation root */
export type MutationUpsertOrderSlipItemPackageArgs = {
  department?: InputMaybe<DepartmentInput>;
  item?: InputMaybe<ItemInput>;
  orderSlipItem?: InputMaybe<OrderSlipItemInput>;
  qty?: InputMaybe<Scalars['Int']['input']>;
};


/** Mutation root */
export type MutationUpsertOtherDeductionArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertOtherPositionArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertOthersArgs = {
  it?: InputMaybe<PcvOthersDtoInput>;
  parent?: InputMaybe<PettyCashInput>;
};


/** Mutation root */
export type MutationUpsertPoArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  forRemove?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  poItems?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
};


/** Mutation root */
export type MutationUpsertPoMonitoringArgs = {
  fields?: InputMaybe<PoMonitoringDtoInput>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertPackageArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertPatientArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertPayablesArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  items?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
};


/** Mutation root */
export type MutationUpsertPayablesByInvestorArgs = {
  amount?: InputMaybe<Scalars['BigDecimal']['input']>;
  reference?: InputMaybe<Scalars['ObjectScalar']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationUpsertPayablesByRecArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertPayablesDetailsArgs = {
  ap?: InputMaybe<AccountsPayableInput>;
  dep?: InputMaybe<Scalars['UUID']['input']>;
  it?: InputMaybe<AccountPayableDetialsDtoInput>;
  trans?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertPayablesDetailsByInvestorArgs = {
  ap?: InputMaybe<AccountsPayableInput>;
  refId?: InputMaybe<Scalars['UUID']['input']>;
  refNo?: InputMaybe<Scalars['String']['input']>;
  unallocated?: InputMaybe<Scalars['BigDecimal']['input']>;
};


/** Mutation root */
export type MutationUpsertPayablesDetailsByRecArgs = {
  ap?: InputMaybe<AccountsPayableInput>;
  it?: InputMaybe<ReceivingReportInput>;
};


/** Mutation root */
export type MutationUpsertPaymentTermsArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertPaymentTransactionTypeArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertPayrollArgs = {
  employeeList?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertPersonalAccountArArgs = {
  accRecId?: InputMaybe<Scalars['UUID']['input']>;
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  fieldsItems?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
  personalAccount?: InputMaybe<Scalars['UUID']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationUpsertPettyCashArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  items?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
  others?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
};


/** Mutation root */
export type MutationUpsertPfDetialsArgs = {
  ap?: InputMaybe<AccountsPayableInput>;
  pf?: InputMaybe<ApPfCompanyInput>;
};


/** Mutation root */
export type MutationUpsertPfDetialsNonCompanyArgs = {
  ap?: InputMaybe<AccountsPayableInput>;
  pf?: InputMaybe<ApPfNonCompanyInput>;
};


/** Mutation root */
export type MutationUpsertPfDetialsRfArgs = {
  ap?: InputMaybe<AccountsPayableInput>;
  pf?: InputMaybe<ApReadersFeeInput>;
};


/** Mutation root */
export type MutationUpsertPhysicalCountArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  qty?: InputMaybe<Scalars['Int']['input']>;
};


/** Mutation root */
export type MutationUpsertPhysicalTransArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertPhysicianArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertPrArgs = {
  pr?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  prId?: InputMaybe<Scalars['String']['input']>;
  prItems?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
};


/** Mutation root */
export type MutationUpsertPriceTierDetailArgs = {
  department?: InputMaybe<Scalars['UUID']['input']>;
  departments?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  roomTypes?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


/** Mutation root */
export type MutationUpsertPurchaseItemsArgs = {
  it?: InputMaybe<PcvItemsDtoInput>;
  parent?: InputMaybe<PettyCashInput>;
};


/** Mutation root */
export type MutationUpsertQuantityAdjustmentTypeArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertRangedConstantArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertReapplicationArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertReceiptIssuanceArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertReceivingArgs = {
  receiving?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  receivingId?: InputMaybe<Scalars['String']['input']>;
  receivingItems?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
};


/** Mutation root */
export type MutationUpsertReleaseCheckArgs = {
  date?: InputMaybe<Scalars['Instant']['input']>;
  fields?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertRoomPhysicianArgs = {
  physicianFields?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
  roomFields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
};


/** Mutation root */
export type MutationUpsertSchedConfigArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertScheduleArgs = {
  interval?: InputMaybe<Scalars['Int']['input']>;
  startDate?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationUpsertScheduleLockArgs = {
  fields: Scalars['Map_String_ObjectScalar']['input'];
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertScheduleTimeArgs = {
  parent?: InputMaybe<AppointmentScheduleInput>;
};


/** Mutation root */
export type MutationUpsertServicesArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationUpsertSignatureArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertStockRequestItemsArgs = {
  stockRequestId?: InputMaybe<Scalars['String']['input']>;
  stockRequestItems?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
};


/** Mutation root */
export type MutationUpsertSubAccountArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertSubaccountSourceArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  lineTypeId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertSubscriptionArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  investor?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertSupplierArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertSupplierByEmployeeArgs = {
  category?: InputMaybe<Scalars['UUID']['input']>;
  fields?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
  payment?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertSupplierByInvestorArgs = {
  investorId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertSupplierTypesArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertSurgicalSiteRecordArgs = {
  aCase?: InputMaybe<Scalars['UUID']['input']>;
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertTransTypeArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertTransferArgs = {
  arTransfer?: InputMaybe<ArTransferInput>;
};


/** Mutation root */
export type MutationUpsertUnitMArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertVaccinationRecordArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertVentilatorRecordArgs = {
  aCase?: InputMaybe<Scalars['UUID']['input']>;
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertVentilatorRecordItemArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  ventilatorRecord?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationUpsertWtxArgs = {
  it?: InputMaybe<DisbursementWtxDtoInput>;
  parent?: InputMaybe<DisbursementInput>;
};


/** Mutation root */
export type MutationUpsert_Biometric_Service_ConfigArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
};


/** Mutation root */
export type MutationVoidBeginningArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationVoidCdctrArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationVoidChequeEncashmentArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  remarks?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationVoidInventoryGlobalArgs = {
  refNo?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationVoidInventoryGlobalByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationVoidInventoryLedgerArgs = {
  parentId?: InputMaybe<Scalars['UUID']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationVoidInvestorPaymentArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  subscriptionId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationVoidIssuanceItemsArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationVoidLedgerArgs = {
  referenceNo?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationVoidMaterialProdArgs = {
  parentId?: InputMaybe<Scalars['UUID']['input']>;
  transDate?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationVoidMaterialProdTransactionArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationVoidPaymentArgs = {
  paymentTrackerId?: InputMaybe<Scalars['UUID']['input']>;
  remarks?: InputMaybe<Scalars['String']['input']>;
};


/** Mutation root */
export type MutationVoidPhysicalArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationVoidPhysicalByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationVoidPurchaseOrderArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationVoidQtyAdjArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationVoidReturnSupplierArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationVoidTransferArgs = {
  arTransId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Mutation root */
export type MutationVoid_Material_Production_MutationArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  items?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
};

export type MyCensusDto = {
  __typename?: 'MyCensusDTO';
  caseList?: Maybe<Array<Maybe<Case>>>;
  caseListCount?: Maybe<Scalars['Int']['output']>;
};

export type NeuroVitalSign = {
  __typename?: 'NeuroVitalSign';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  employee?: Maybe<Employee>;
  entryDateTime?: Maybe<Scalars['Instant']['output']>;
  esLeftReaction?: Maybe<Scalars['String']['output']>;
  esLeftSize?: Maybe<Scalars['String']['output']>;
  esRightReaction?: Maybe<Scalars['String']['output']>;
  esRightSize?: Maybe<Scalars['String']['output']>;
  gcsBestMotorResponse?: Maybe<Scalars['String']['output']>;
  gcsEyeResponse?: Maybe<Scalars['String']['output']>;
  gcsTotal?: Maybe<Scalars['String']['output']>;
  gcsVerbalResponse?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  lsArmsLeft?: Maybe<Scalars['String']['output']>;
  lsArmsRight?: Maybe<Scalars['String']['output']>;
  lsLegsLeft?: Maybe<Scalars['String']['output']>;
  lsLegsRight?: Maybe<Scalars['String']['output']>;
  parentCase?: Maybe<Case>;
};

export enum NormalSide {
  Credit = 'CREDIT',
  Debit = 'DEBIT'
}

export type Notification = {
  __typename?: 'Notification';
  date_notified_string?: Maybe<Scalars['String']['output']>;
  date_seen?: Maybe<Scalars['Instant']['output']>;
  datenotified?: Maybe<Scalars['Instant']['output']>;
  department?: Maybe<Scalars['UUID']['output']>;
  from?: Maybe<Scalars['UUID']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  message?: Maybe<Scalars['String']['output']>;
  title?: Maybe<Scalars['String']['output']>;
  to?: Maybe<Scalars['UUID']['output']>;
  url?: Maybe<Scalars['String']['output']>;
};

export enum NullHandling {
  Native = 'NATIVE',
  NullsFirst = 'NULLS_FIRST',
  NullsLast = 'NULLS_LAST'
}

export type NurseNote = {
  __typename?: 'NurseNote';
  action?: Maybe<Scalars['String']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  data?: Maybe<Scalars['String']['output']>;
  employee?: Maybe<Employee>;
  entryDateTime?: Maybe<Scalars['Instant']['output']>;
  focus?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  parentCase?: Maybe<Case>;
  response?: Maybe<Scalars['String']['output']>;
};

export type NurseNoteService = {
  __typename?: 'NurseNoteService';
  /** Get NurseNote By Id */
  nurseNote?: Maybe<NurseNote>;
  /** Get all NurseNotes */
  nurseNotes?: Maybe<Array<Maybe<NurseNote>>>;
  /** Get all NurseNotes by Case Id */
  nurseNotesByCase?: Maybe<Array<Maybe<NurseNote>>>;
  nurseNotesByCasePageable?: Maybe<Page_NurseNote>;
  nurseNotesById?: Maybe<NurseNoteService>;
};


export type NurseNoteServiceNurseNoteArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


export type NurseNoteServiceNurseNotesByCaseArgs = {
  caseId?: InputMaybe<Scalars['UUID']['input']>;
};


export type NurseNoteServiceNurseNotesByCasePageableArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
};


export type NurseNoteServiceNurseNotesByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};

export type O2Administration = {
  __typename?: 'O2Administration';
  billed?: Maybe<Scalars['Boolean']['output']>;
  calculatedMinutes?: Maybe<Scalars['BigDecimal']['output']>;
  endDate?: Maybe<Scalars['Instant']['output']>;
  flowrate?: Maybe<FlowRate>;
  id?: Maybe<Scalars['UUID']['output']>;
  item?: Maybe<Item>;
  patientCase?: Maybe<Case>;
  startDate?: Maybe<Scalars['Instant']['output']>;
};

export type ObgynHistory = {
  __typename?: 'ObgynHistory';
  abortion?: Maybe<Scalars['Int']['output']>;
  ageOfGestation?: Maybe<Scalars['LocalDate']['output']>;
  ageOfGestation2?: Maybe<Scalars['Int']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  dueDate?: Maybe<Scalars['LocalDate']['output']>;
  getaCase?: Maybe<Case>;
  gravida?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastMenstrualPeriod?: Maybe<Scalars['LocalDate']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  living?: Maybe<Scalars['Int']['output']>;
  menarche?: Maybe<Scalars['Int']['output']>;
  menopause?: Maybe<Scalars['Int']['output']>;
  parturition?: Maybe<Scalars['Int']['output']>;
  preterm?: Maybe<Scalars['Int']['output']>;
  term?: Maybe<Scalars['Int']['output']>;
};

export type ObgynHistoryInput = {
  aCase?: InputMaybe<CaseInput>;
  abortion?: InputMaybe<Scalars['Int']['input']>;
  ageOfGestation?: InputMaybe<Scalars['LocalDate']['input']>;
  ageOfGestation2?: InputMaybe<Scalars['Int']['input']>;
  dueDate?: InputMaybe<Scalars['LocalDate']['input']>;
  gravida?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  lastMenstrualPeriod?: InputMaybe<Scalars['LocalDate']['input']>;
  living?: InputMaybe<Scalars['Int']['input']>;
  menarche?: InputMaybe<Scalars['Int']['input']>;
  menopause?: InputMaybe<Scalars['Int']['input']>;
  parturition?: InputMaybe<Scalars['Int']['input']>;
  preterm?: InputMaybe<Scalars['Int']['input']>;
  term?: InputMaybe<Scalars['Int']['input']>;
};

export type OccupationalTherapyNote = {
  __typename?: 'OccupationalTherapyNote';
  assessment?: Maybe<Scalars['String']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  employee?: Maybe<Employee>;
  entryDateTime?: Maybe<Scalars['Instant']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  objective?: Maybe<Scalars['String']['output']>;
  parentCase?: Maybe<Case>;
  plan?: Maybe<Scalars['String']['output']>;
  subjective?: Maybe<Scalars['String']['output']>;
};

export type OnHandReport = {
  __typename?: 'OnHandReport';
  category_description?: Maybe<Scalars['String']['output']>;
  department?: Maybe<Scalars['UUID']['output']>;
  department_name?: Maybe<Scalars['String']['output']>;
  desc_long?: Maybe<Scalars['String']['output']>;
  expiration_date?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  item?: Maybe<Scalars['UUID']['output']>;
  last_unit_cost?: Maybe<Scalars['BigDecimal']['output']>;
  last_wcost?: Maybe<Scalars['BigDecimal']['output']>;
  onhand?: Maybe<Scalars['Int']['output']>;
  unit_of_purchase?: Maybe<Scalars['String']['output']>;
  unit_of_usage?: Maybe<Scalars['String']['output']>;
};

export type OpdConsultation2Dto = {
  __typename?: 'OpdConsultation2Dto';
  description?: Maybe<Scalars['String']['output']>;
  icdCategory?: Maybe<Scalars['String']['output']>;
  icdCode?: Maybe<Scalars['String']['output']>;
  number?: Maybe<Scalars['Int']['output']>;
};

export type OpdConsultationDto = {
  __typename?: 'OpdConsultationDto';
  icd10Cat?: Maybe<Scalars['String']['output']>;
  icdCode?: Maybe<Scalars['String']['output']>;
  longName?: Maybe<Scalars['String']['output']>;
  reportingYear?: Maybe<Scalars['Float']['output']>;
  total?: Maybe<Scalars['Float']['output']>;
};

export type OpdMinorOpDto = {
  __typename?: 'OpdMinorOpDto';
  icdCode?: Maybe<Scalars['String']['output']>;
  longName?: Maybe<Scalars['String']['output']>;
  proccode?: Maybe<Scalars['String']['output']>;
  total?: Maybe<Scalars['Int']['output']>;
};

export type OperationDeaths = {
  __typename?: 'OperationDeaths';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  dohResponse?: Maybe<Scalars['String']['output']>;
  grossDeathRate?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  ndrDenominator?: Maybe<Scalars['Int']['output']>;
  ndrNumerator?: Maybe<Scalars['Int']['output']>;
  netDeathRate?: Maybe<Scalars['Int']['output']>;
  reportingYear?: Maybe<Scalars['Int']['output']>;
  submittedDateTime?: Maybe<Scalars['Instant']['output']>;
  totalDeath?: Maybe<Scalars['Int']['output']>;
  totalDeath48Up?: Maybe<Scalars['Int']['output']>;
  totalDeaths48Down?: Maybe<Scalars['Int']['output']>;
  totalDeathsNewBorn?: Maybe<Scalars['Int']['output']>;
  totalDischargeDeath?: Maybe<Scalars['Int']['output']>;
  totalDoa?: Maybe<Scalars['Int']['output']>;
  totalErDeaths?: Maybe<Scalars['Int']['output']>;
  totalMaterialDeath?: Maybe<Scalars['Int']['output']>;
  totalNeonatalDeath?: Maybe<Scalars['Int']['output']>;
  totalNewBornDeath?: Maybe<Scalars['Int']['output']>;
  totalStillBirth?: Maybe<Scalars['Int']['output']>;
};

export type OperationHai = {
  __typename?: 'OperationHai';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  dohResponse?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  infectionRate?: Maybe<Scalars['Float']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  numDischarges?: Maybe<Scalars['Float']['output']>;
  numHai?: Maybe<Scalars['Float']['output']>;
  numSsi?: Maybe<Scalars['Float']['output']>;
  patientNumVap?: Maybe<Scalars['Float']['output']>;
  patientNumbsi?: Maybe<Scalars['Float']['output']>;
  patientNumuti?: Maybe<Scalars['Float']['output']>;
  reportingYear?: Maybe<Scalars['Int']['output']>;
  resultBsi?: Maybe<Scalars['Float']['output']>;
  resultSsi?: Maybe<Scalars['Float']['output']>;
  resultUti?: Maybe<Scalars['Float']['output']>;
  resultVap?: Maybe<Scalars['Float']['output']>;
  submittedDateTime?: Maybe<Scalars['Instant']['output']>;
  totalNumcentralline?: Maybe<Scalars['Float']['output']>;
  totalProceduresDone?: Maybe<Scalars['Float']['output']>;
  totalVentilatorDays?: Maybe<Scalars['Float']['output']>;
  totalcatheterDays?: Maybe<Scalars['Float']['output']>;
};

export type OperationMajorOpt = {
  __typename?: 'OperationMajorOpt';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  dohResponse?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  number?: Maybe<Scalars['Int']['output']>;
  operationCode?: Maybe<Scalars['String']['output']>;
  reportingYear?: Maybe<Scalars['Int']['output']>;
  submittedDateTime?: Maybe<Scalars['Instant']['output']>;
  surgicalOperation?: Maybe<Scalars['String']['output']>;
};

export type OperationMinorOpt = {
  __typename?: 'OperationMinorOpt';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  dohResponse?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  number?: Maybe<Scalars['Int']['output']>;
  operationCode?: Maybe<Scalars['String']['output']>;
  reportingYear?: Maybe<Scalars['Int']['output']>;
  submittedDateTime?: Maybe<Scalars['Instant']['output']>;
  surgicalOperation?: Maybe<Scalars['String']['output']>;
};

export type OperationMortalityDeaths = {
  __typename?: 'OperationMortalityDeaths';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  dohResponse?: Maybe<Scalars['String']['output']>;
  f1to4?: Maybe<Scalars['Int']['output']>;
  f5to9?: Maybe<Scalars['Int']['output']>;
  f10to14?: Maybe<Scalars['Int']['output']>;
  f15to19?: Maybe<Scalars['Int']['output']>;
  f20to24?: Maybe<Scalars['Int']['output']>;
  f25to29?: Maybe<Scalars['Int']['output']>;
  f30to34?: Maybe<Scalars['Int']['output']>;
  f35to39?: Maybe<Scalars['Int']['output']>;
  f40to44?: Maybe<Scalars['Int']['output']>;
  f45to49?: Maybe<Scalars['Int']['output']>;
  f50to54?: Maybe<Scalars['Int']['output']>;
  f55to59?: Maybe<Scalars['Int']['output']>;
  f60to64?: Maybe<Scalars['Int']['output']>;
  f65to69?: Maybe<Scalars['Int']['output']>;
  f70over?: Maybe<Scalars['Int']['output']>;
  fsubTotal?: Maybe<Scalars['Int']['output']>;
  funder1?: Maybe<Scalars['Int']['output']>;
  grandTotal?: Maybe<Scalars['Int']['output']>;
  icd10category?: Maybe<Scalars['String']['output']>;
  icd10code?: Maybe<Scalars['String']['output']>;
  icd10desc?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  m1to4?: Maybe<Scalars['Int']['output']>;
  m5to9?: Maybe<Scalars['Int']['output']>;
  m10to14?: Maybe<Scalars['Int']['output']>;
  m15to19?: Maybe<Scalars['Int']['output']>;
  m20to24?: Maybe<Scalars['Int']['output']>;
  m25to29?: Maybe<Scalars['Int']['output']>;
  m30to34?: Maybe<Scalars['Int']['output']>;
  m35to39?: Maybe<Scalars['Int']['output']>;
  m40to44?: Maybe<Scalars['Int']['output']>;
  m45to49?: Maybe<Scalars['Int']['output']>;
  m50to54?: Maybe<Scalars['Int']['output']>;
  m55to59?: Maybe<Scalars['Int']['output']>;
  m60to64?: Maybe<Scalars['Int']['output']>;
  m65to69?: Maybe<Scalars['Int']['output']>;
  m70over?: Maybe<Scalars['Int']['output']>;
  msubTotal?: Maybe<Scalars['Int']['output']>;
  munder1?: Maybe<Scalars['Int']['output']>;
  reportingYear?: Maybe<Scalars['Int']['output']>;
  submittedDateTime?: Maybe<Scalars['Instant']['output']>;
};

export type OperationalConfiguration = {
  __typename?: 'OperationalConfiguration';
  ablyNotification?: Maybe<Scalars['Boolean']['output']>;
  allowPhicEmptyDocIcd?: Maybe<Scalars['Boolean']['output']>;
  allowRvsEmptyDohOps?: Maybe<Scalars['Boolean']['output']>;
  autolockEr?: Maybe<Scalars['Boolean']['output']>;
  autolockIpd?: Maybe<Scalars['Boolean']['output']>;
  autolockOpd?: Maybe<Scalars['Boolean']['output']>;
  contactNumbers?: Maybe<Array<Maybe<ContactNumbers>>>;
  defaultCreditLimit?: Maybe<Scalars['BigDecimal']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  orderPostingEmpty?: Maybe<Scalars['Boolean']['output']>;
  roomInDeduction?: Maybe<Scalars['BigDecimal']['output']>;
};

export type OptDischargeOpv = {
  __typename?: 'OptDischargeOpv';
  adult?: Maybe<Scalars['Int']['output']>;
  adultGeneralMedicine?: Maybe<Scalars['Int']['output']>;
  antenatal?: Maybe<Scalars['Int']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  dohResponse?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  newPatient?: Maybe<Scalars['Int']['output']>;
  pediatric?: Maybe<Scalars['Int']['output']>;
  postnatal?: Maybe<Scalars['Int']['output']>;
  reportingYear?: Maybe<Scalars['Int']['output']>;
  revisit?: Maybe<Scalars['Int']['output']>;
  specialtyNonSurgical?: Maybe<Scalars['Int']['output']>;
  submittedDateTime?: Maybe<Scalars['Instant']['output']>;
  surgical?: Maybe<Scalars['Int']['output']>;
};

export type OptionsDto = {
  __typename?: 'OptionsDto';
  label?: Maybe<Scalars['String']['output']>;
  value?: Maybe<Scalars['String']['output']>;
};

export type Order = {
  __typename?: 'Order';
  direction?: Maybe<Direction>;
  ignoreCase?: Maybe<Scalars['Boolean']['output']>;
  nullHandlingHint?: Maybe<NullHandling>;
  property: Scalars['String']['output'];
};

export type OrderSlipDto = {
  __typename?: 'OrderSlipDto';
  billing_item?: Maybe<Scalars['String']['output']>;
  cnt?: Maybe<Scalars['String']['output']>;
  created_date?: Maybe<Scalars['Instant']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  item_no?: Maybe<Scalars['String']['output']>;
  requestingPhysicianName?: Maybe<Scalars['String']['output']>;
};

export type OrderSlipItem = {
  __typename?: 'OrderSlipItem';
  accession?: Maybe<Scalars['String']['output']>;
  batchNumber?: Maybe<Scalars['String']['output']>;
  billing_item?: Maybe<BillingItem>;
  created?: Maybe<Scalars['Instant']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  deleted?: Maybe<Scalars['Boolean']['output']>;
  discontinuedBy?: Maybe<Employee>;
  discontinuedDatetime?: Maybe<Scalars['Instant']['output']>;
  doctors_order_item?: Maybe<DoctorOrderItem>;
  id?: Maybe<Scalars['UUID']['output']>;
  itemNo?: Maybe<Scalars['String']['output']>;
  itemType?: Maybe<ItemTypes>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  memberOF?: Maybe<MemberTypes>;
  orderslip?: Maybe<Orderslip>;
  packageItems?: Maybe<Array<Maybe<PackageContent>>>;
  posted?: Maybe<Scalars['Boolean']['output']>;
  reader?: Maybe<Employee>;
  scheduleDate?: Maybe<Scalars['Instant']['output']>;
  service?: Maybe<Service>;
  stat?: Maybe<Scalars['Boolean']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  timeCompleted?: Maybe<Scalars['Instant']['output']>;
  timeStarted?: Maybe<Scalars['Instant']['output']>;
  transaction_type?: Maybe<Scalars['String']['output']>;
  transmitted?: Maybe<Scalars['Boolean']['output']>;
  waved?: Maybe<Scalars['BigDecimal']['output']>;
};

export type OrderSlipItemInput = {
  accession?: InputMaybe<Scalars['String']['input']>;
  batchNumber?: InputMaybe<Scalars['String']['input']>;
  billing_item?: InputMaybe<BillingItemInput>;
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  discontinuedBy?: InputMaybe<EmployeeInput>;
  discontinuedDatetime?: InputMaybe<Scalars['Instant']['input']>;
  doctors_order_item?: InputMaybe<DoctorOrderItemInput>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  itemNo?: InputMaybe<Scalars['String']['input']>;
  itemType?: InputMaybe<ItemTypes>;
  memberOF?: InputMaybe<MemberTypes>;
  orderslip?: InputMaybe<OrderslipInput>;
  packageItems?: InputMaybe<Array<InputMaybe<PackageContentInput>>>;
  posted?: InputMaybe<Scalars['Boolean']['input']>;
  reader?: InputMaybe<EmployeeInput>;
  scheduleDate?: InputMaybe<Scalars['Instant']['input']>;
  service?: InputMaybe<ServiceInput>;
  stat?: InputMaybe<Scalars['Boolean']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  timeCompleted?: InputMaybe<Scalars['Instant']['input']>;
  timeStarted?: InputMaybe<Scalars['Instant']['input']>;
  transaction_type?: InputMaybe<Scalars['String']['input']>;
  transmitted?: InputMaybe<Scalars['Boolean']['input']>;
  waved?: InputMaybe<Scalars['BigDecimal']['input']>;
};

export type OrderSlipItemPackageContent = {
  __typename?: 'OrderSlipItemPackageContent';
  created?: Maybe<Scalars['Instant']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  department?: Maybe<Department>;
  id?: Maybe<Scalars['UUID']['output']>;
  item?: Maybe<Item>;
  itemName?: Maybe<Scalars['String']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  orderSlipItem?: Maybe<OrderSlipItem>;
  qty?: Maybe<Scalars['Int']['output']>;
  refBillingItem?: Maybe<Scalars['UUID']['output']>;
  unitCost?: Maybe<Scalars['BigDecimal']['output']>;
};

export type OrderSlipItemPackageContentInput = {
  department?: InputMaybe<DepartmentInput>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  item?: InputMaybe<ItemInput>;
  itemName?: InputMaybe<Scalars['String']['input']>;
  orderSlipItem?: InputMaybe<OrderSlipItemInput>;
  qty?: InputMaybe<Scalars['Int']['input']>;
  refBillingItem?: InputMaybe<Scalars['UUID']['input']>;
  unitCost?: InputMaybe<Scalars['BigDecimal']['input']>;
};

export type Orderslip = {
  __typename?: 'Orderslip';
  created?: Maybe<Scalars['Instant']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  deleted?: Maybe<Scalars['Boolean']['output']>;
  department?: Maybe<Department>;
  doctorsOrder?: Maybe<Scalars['UUID']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  orderSlipItemList?: Maybe<Array<Maybe<OrderSlipItem>>>;
  /** Get all OrderSlip Items */
  orderSlipItems?: Maybe<Array<Maybe<OrderSlipItem>>>;
  orderSlipNo?: Maybe<Scalars['String']['output']>;
  packageType?: Maybe<Scalars['Boolean']['output']>;
  parentCase?: Maybe<Case>;
  requestingPhysician?: Maybe<Scalars['UUID']['output']>;
  requestingPhysicianName?: Maybe<Scalars['String']['output']>;
  requestingPhysicianPrc?: Maybe<Scalars['String']['output']>;
  status?: Maybe<Scalars['String']['output']>;
};

export type OrderslipInput = {
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  department?: InputMaybe<DepartmentInput>;
  doctorsOrder?: InputMaybe<Scalars['UUID']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  orderSlipItemList?: InputMaybe<Array<InputMaybe<OrderSlipItemInput>>>;
  orderSlipNo?: InputMaybe<Scalars['String']['input']>;
  packageType?: InputMaybe<Scalars['Boolean']['input']>;
  parentCase?: InputMaybe<CaseInput>;
  requestingPhysician?: InputMaybe<Scalars['UUID']['input']>;
  requestingPhysicianName?: InputMaybe<Scalars['String']['input']>;
  requestingPhysicianPrc?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
};

export type OriginalAccumulatedLogs = {
  __typename?: 'OriginalAccumulatedLogs';
  hoursAbsent?: Maybe<Scalars['BigDecimal']['output']>;
  hoursDoubleHoliday?: Maybe<Scalars['BigDecimal']['output']>;
  hoursDoubleHolidayAndRestDay?: Maybe<Scalars['BigDecimal']['output']>;
  hoursDoubleHolidayAndRestDayNSD?: Maybe<Scalars['BigDecimal']['output']>;
  hoursDoubleHolidayAndRestDayOvertime?: Maybe<Scalars['BigDecimal']['output']>;
  hoursDoubleHolidayNSD?: Maybe<Scalars['BigDecimal']['output']>;
  hoursDoubleHolidayOIC?: Maybe<Scalars['BigDecimal']['output']>;
  hoursDoubleHolidayOICNSD?: Maybe<Scalars['BigDecimal']['output']>;
  hoursDoubleHolidayOICOvertime?: Maybe<Scalars['BigDecimal']['output']>;
  hoursDoubleHolidayOvertime?: Maybe<Scalars['BigDecimal']['output']>;
  hoursRegularHoliday?: Maybe<Scalars['BigDecimal']['output']>;
  hoursRegularHolidayAndRestDay?: Maybe<Scalars['BigDecimal']['output']>;
  hoursRegularHolidayAndRestDayNSD?: Maybe<Scalars['BigDecimal']['output']>;
  hoursRegularHolidayAndRestDayOvertime?: Maybe<Scalars['BigDecimal']['output']>;
  hoursRegularHolidayNSD?: Maybe<Scalars['BigDecimal']['output']>;
  hoursRegularHolidayOIC?: Maybe<Scalars['BigDecimal']['output']>;
  hoursRegularHolidayOICNSD?: Maybe<Scalars['BigDecimal']['output']>;
  hoursRegularHolidayOICOvertime?: Maybe<Scalars['BigDecimal']['output']>;
  hoursRegularHolidayOvertime?: Maybe<Scalars['BigDecimal']['output']>;
  hoursRegularOICOvertime?: Maybe<Scalars['BigDecimal']['output']>;
  hoursRegularOvertime?: Maybe<Scalars['BigDecimal']['output']>;
  hoursRestDay?: Maybe<Scalars['BigDecimal']['output']>;
  hoursRestDayNSD?: Maybe<Scalars['BigDecimal']['output']>;
  hoursRestOvertime?: Maybe<Scalars['BigDecimal']['output']>;
  hoursSpecialHoliday?: Maybe<Scalars['BigDecimal']['output']>;
  hoursSpecialHolidayAndRestDay?: Maybe<Scalars['BigDecimal']['output']>;
  hoursSpecialHolidayAndRestDayNSD?: Maybe<Scalars['BigDecimal']['output']>;
  hoursSpecialHolidayAndRestDayOvertime?: Maybe<Scalars['BigDecimal']['output']>;
  hoursSpecialHolidayNSD?: Maybe<Scalars['BigDecimal']['output']>;
  hoursSpecialHolidayOIC?: Maybe<Scalars['BigDecimal']['output']>;
  hoursSpecialHolidayOICNSD?: Maybe<Scalars['BigDecimal']['output']>;
  hoursSpecialHolidayOICOvertime?: Maybe<Scalars['BigDecimal']['output']>;
  hoursSpecialHolidayOvertime?: Maybe<Scalars['BigDecimal']['output']>;
  hoursWorkedNSD?: Maybe<Scalars['BigDecimal']['output']>;
  hoursWorkedOICNSD?: Maybe<Scalars['BigDecimal']['output']>;
  late?: Maybe<Scalars['BigDecimal']['output']>;
  undertime?: Maybe<Scalars['BigDecimal']['output']>;
  worked?: Maybe<Scalars['BigDecimal']['output']>;
  workedOIC?: Maybe<Scalars['BigDecimal']['output']>;
};

export type OtherDeduction = {
  __typename?: 'OtherDeduction';
  active?: Maybe<Scalars['Boolean']['output']>;
  amount?: Maybe<Scalars['BigDecimal']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  employees?: Maybe<Array<Maybe<Employee>>>;
  id?: Maybe<Scalars['UUID']['output']>;
  identifier?: Maybe<Scalars['String']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  title?: Maybe<Scalars['String']['output']>;
};

export type OtherDeductionEmployee = {
  __typename?: 'OtherDeductionEmployee';
  approvedBy?: Maybe<Employee>;
  approvedDate?: Maybe<Scalars['Instant']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  deductionItems?: Maybe<Array<Maybe<OtherDeductionEmployeeItem>>>;
  finalizedBy?: Maybe<Employee>;
  finalizedDate?: Maybe<Scalars['Instant']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  otherDeduction?: Maybe<PayrollOtherDeduction>;
  payrollEmployee?: Maybe<PayrollEmployee>;
  rejectedBy?: Maybe<Employee>;
  rejectedDate?: Maybe<Scalars['Instant']['output']>;
  status?: Maybe<PayrollEmployeeStatus>;
};

export type OtherDeductionEmployeeItem = {
  __typename?: 'OtherDeductionEmployeeItem';
  amount?: Maybe<Scalars['BigDecimal']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  identifier?: Maybe<Scalars['String']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  otherDeductionEmployee?: Maybe<OtherDeductionEmployee>;
  title?: Maybe<Scalars['String']['output']>;
};

export type OtherDeductionInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  amount?: InputMaybe<Scalars['BigDecimal']['input']>;
  employees?: InputMaybe<Array<InputMaybe<EmployeeInput>>>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  identifier?: InputMaybe<Scalars['String']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
};

export type OtherDetails = {
  __typename?: 'OtherDetails';
  invoiceNo?: Maybe<Scalars['String']['output']>;
  traceNo?: Maybe<Scalars['String']['output']>;
};

export type OtherDetailsInput = {
  invoiceNo?: InputMaybe<Scalars['String']['input']>;
  traceNo?: InputMaybe<Scalars['String']['input']>;
};

export type OtherVitalSign = {
  __typename?: 'OtherVitalSign';
  cbc?: Maybe<Scalars['String']['output']>;
  cbs?: Maybe<Scalars['String']['output']>;
  cgs?: Maybe<Scalars['String']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  crt?: Maybe<Scalars['String']['output']>;
  employee?: Maybe<Employee>;
  entryDateTime?: Maybe<Scalars['Instant']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  note?: Maybe<Scalars['String']['output']>;
  parentCase?: Maybe<Case>;
};

export type Output = {
  __typename?: 'Output';
  bloodLoss?: Maybe<Scalars['Float']['output']>;
  catheterOutput?: Maybe<Scalars['Float']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  drainage?: Maybe<Scalars['String']['output']>;
  emesisOutput?: Maybe<Scalars['Float']['output']>;
  employee?: Maybe<Employee>;
  entryDateTime?: Maybe<Scalars['Instant']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  insensibleLossOutput?: Maybe<Scalars['Float']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  ngOutput?: Maybe<Scalars['Float']['output']>;
  parentCase?: Maybe<Case>;
  remarks?: Maybe<Scalars['String']['output']>;
  stoolOutput?: Maybe<Scalars['Int']['output']>;
  total?: Maybe<Scalars['Float']['output']>;
  voidedOutput?: Maybe<Scalars['Float']['output']>;
};

export type OverduePenalties = {
  __typename?: 'OverduePenalties';
  condition?: Maybe<PeriodWithUot>;
  penalty?: Maybe<Scalars['BigDecimal']['output']>;
  unitOfTime?: Maybe<Scalars['String']['output']>;
};

export type PcvItemsDtoInput = {
  department?: InputMaybe<DepartmentInput>;
  discAmount?: InputMaybe<Scalars['BigDecimal']['input']>;
  discRate?: InputMaybe<Scalars['BigDecimal']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  isNew?: InputMaybe<Scalars['Boolean']['input']>;
  isVat?: InputMaybe<Scalars['Boolean']['input']>;
  item?: InputMaybe<ItemInput>;
  netAmount?: InputMaybe<Scalars['BigDecimal']['input']>;
  qty?: InputMaybe<Scalars['Int']['input']>;
  unitCost?: InputMaybe<Scalars['BigDecimal']['input']>;
  vatAmount?: InputMaybe<Scalars['BigDecimal']['input']>;
};

export type PcvOthersDtoInput = {
  amount?: InputMaybe<Scalars['BigDecimal']['input']>;
  department?: InputMaybe<DepartmentInput>;
  id?: InputMaybe<Scalars['String']['input']>;
  isNew?: InputMaybe<Scalars['Boolean']['input']>;
  remarks?: InputMaybe<Scalars['String']['input']>;
  transType?: InputMaybe<ExpenseTransactionInput>;
};

export type PhicCaseRate = {
  __typename?: 'PHICCaseRate';
  code?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  hospitalShare?: Maybe<Scalars['BigDecimal']['output']>;
  pfShare?: Maybe<Scalars['BigDecimal']['output']>;
  tier?: Maybe<Scalars['String']['output']>;
  type?: Maybe<Scalars['String']['output']>;
};

export type PoDeliveryMonitoring = {
  __typename?: 'PODeliveryMonitoring';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  purchaseOrderItem?: Maybe<PurchaseOrderItems>;
  quantity?: Maybe<Scalars['Int']['output']>;
  receivingReport?: Maybe<ReceivingReport>;
  receivingReportItem?: Maybe<ReceivingReportItem>;
  status?: Maybe<Scalars['String']['output']>;
};

export type PoMonitoringDtoInput = {
  purchaseOrderItem?: InputMaybe<Scalars['UUID']['input']>;
  quantity?: InputMaybe<Scalars['Int']['input']>;
  receivingReport?: InputMaybe<Scalars['UUID']['input']>;
  receivingReportItem?: InputMaybe<Scalars['UUID']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
};

export type Package = {
  __typename?: 'Package';
  code?: Maybe<Scalars['String']['output']>;
  companyAccountSubsidy?: Maybe<CompanyAccount>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  discountTarget?: Maybe<Discount>;
  id?: Maybe<Scalars['UUID']['output']>;
  isActive?: Maybe<Scalars['Boolean']['output']>;
  items?: Maybe<Array<Maybe<PackageItem>>>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  packagePrice?: Maybe<Scalars['BigDecimal']['output']>;
  remarks?: Maybe<Scalars['String']['output']>;
};

export type PackageContent = {
  __typename?: 'PackageContent';
  created?: Maybe<Scalars['Instant']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  deleted?: Maybe<Scalars['Boolean']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  inventoriable?: Maybe<Scalars['Boolean']['output']>;
  itemId?: Maybe<Item>;
  itemName?: Maybe<Scalars['String']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  parent?: Maybe<Service>;
  qty?: Maybe<Scalars['Int']['output']>;
};

export type PackageContentInput = {
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  inventoriable?: InputMaybe<Scalars['Boolean']['input']>;
  itemId?: InputMaybe<ItemInput>;
  itemName?: InputMaybe<Scalars['String']['input']>;
  parent?: InputMaybe<ServiceInput>;
  qty?: InputMaybe<Scalars['Int']['input']>;
};

export type PackageInput = {
  code?: InputMaybe<Scalars['String']['input']>;
  companyAccountSubsidy?: InputMaybe<CompanyAccountInput>;
  description?: InputMaybe<Scalars['String']['input']>;
  discountTarget?: InputMaybe<DiscountInput>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  isActive?: InputMaybe<Scalars['Boolean']['input']>;
  items?: InputMaybe<Array<InputMaybe<PackageItemInput>>>;
  packagePrice?: InputMaybe<Scalars['BigDecimal']['input']>;
  remarks?: InputMaybe<Scalars['String']['input']>;
};

export type PackageItem = {
  __typename?: 'PackageItem';
  active?: Maybe<Scalars['Boolean']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  item?: Maybe<Item>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  parent?: Maybe<Package>;
  sellingPrice?: Maybe<Scalars['BigDecimal']['output']>;
  service?: Maybe<Service>;
};

export type PackageItemInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  item?: InputMaybe<ItemInput>;
  parent?: InputMaybe<PackageInput>;
  sellingPrice?: InputMaybe<Scalars['BigDecimal']['input']>;
  service?: InputMaybe<ServiceInput>;
};

export type Page_AccountReceivable = {
  __typename?: 'Page_AccountReceivable';
  content?: Maybe<Array<Maybe<AccountReceivable>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_AccountReceivableItems = {
  __typename?: 'Page_AccountReceivableItems';
  content?: Maybe<Array<Maybe<AccountReceivableItems>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_AccountingCategory = {
  __typename?: 'Page_AccountingCategory';
  content?: Maybe<Array<Maybe<AccountingCategory>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_AccountsPayable = {
  __typename?: 'Page_AccountsPayable';
  content?: Maybe<Array<Maybe<AccountsPayable>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_AgtPatient = {
  __typename?: 'Page_AgtPatient';
  content?: Maybe<Array<Maybe<AgtPatient>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_Allowance = {
  __typename?: 'Page_Allowance';
  content?: Maybe<Array<Maybe<Allowance>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_AllowanceTemplate = {
  __typename?: 'Page_AllowanceTemplate';
  content?: Maybe<Array<Maybe<AllowanceTemplate>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_ApPfCompany = {
  __typename?: 'Page_ApPfCompany';
  content?: Maybe<Array<Maybe<ApPfCompany>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_ApPfNonCompany = {
  __typename?: 'Page_ApPfNonCompany';
  content?: Maybe<Array<Maybe<ApPfNonCompany>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_ApReadersFee = {
  __typename?: 'Page_ApReadersFee';
  content?: Maybe<Array<Maybe<ApReadersFee>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_Appointment = {
  __typename?: 'Page_Appointment';
  content?: Maybe<Array<Maybe<Appointment>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_AppointmentConfig = {
  __typename?: 'Page_AppointmentConfig';
  content?: Maybe<Array<Maybe<AppointmentConfig>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_AppointmentSchedule = {
  __typename?: 'Page_AppointmentSchedule';
  content?: Maybe<Array<Maybe<AppointmentSchedule>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_ArCreditNote = {
  __typename?: 'Page_ArCreditNote';
  content?: Maybe<Array<Maybe<ArCreditNote>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_ArCreditNoteItems = {
  __typename?: 'Page_ArCreditNoteItems';
  content?: Maybe<Array<Maybe<ArCreditNoteItems>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_ArCustomers = {
  __typename?: 'Page_ArCustomers';
  content?: Maybe<Array<Maybe<ArCustomers>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_ArInvoice = {
  __typename?: 'Page_ArInvoice';
  content?: Maybe<Array<Maybe<ArInvoice>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_ArInvoiceItems = {
  __typename?: 'Page_ArInvoiceItems';
  content?: Maybe<Array<Maybe<ArInvoiceItems>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_ArManualDeductions = {
  __typename?: 'Page_ArManualDeductions';
  content?: Maybe<Array<Maybe<ArManualDeductions>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_ArTransaction = {
  __typename?: 'Page_ArTransaction';
  content?: Maybe<Array<Maybe<ArTransaction>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_ArTransactionType = {
  __typename?: 'Page_ArTransactionType';
  content?: Maybe<Array<Maybe<ArTransactionType>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_ArTransfer = {
  __typename?: 'Page_ArTransfer';
  content?: Maybe<Array<Maybe<ArTransfer>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_Bank = {
  __typename?: 'Page_Bank';
  content?: Maybe<Array<Maybe<Bank>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_BeginningItem = {
  __typename?: 'Page_BeginningItem';
  content?: Maybe<Array<Maybe<BeginningItem>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_BeginningTransaction = {
  __typename?: 'Page_BeginningTransaction';
  content?: Maybe<Array<Maybe<BeginningTransaction>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_Billing = {
  __typename?: 'Page_Billing';
  content?: Maybe<Array<Maybe<Billing>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_BillingItem = {
  __typename?: 'Page_BillingItem';
  content?: Maybe<Array<Maybe<BillingItem>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_BillingSchedule = {
  __typename?: 'Page_BillingSchedule';
  content?: Maybe<Array<Maybe<BillingSchedule>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_BillingScheduleItems = {
  __typename?: 'Page_BillingScheduleItems';
  content?: Maybe<Array<Maybe<BillingScheduleItems>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_BsPhilClaims = {
  __typename?: 'Page_BsPhilClaims';
  content?: Maybe<Array<Maybe<BsPhilClaims>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_Case = {
  __typename?: 'Page_Case';
  content?: Maybe<Array<Maybe<Case>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_CashBasis = {
  __typename?: 'Page_CashBasis';
  content?: Maybe<Array<Maybe<CashBasis>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_CashierTerminal = {
  __typename?: 'Page_CashierTerminal';
  content?: Maybe<Array<Maybe<CashierTerminal>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_CathLabNote = {
  __typename?: 'Page_CathLabNote';
  content?: Maybe<Array<Maybe<CathLabNote>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_Cdctr = {
  __typename?: 'Page_Cdctr';
  content?: Maybe<Array<Maybe<Cdctr>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_ChartOfAccount = {
  __typename?: 'Page_ChartOfAccount';
  content?: Maybe<Array<Maybe<ChartOfAccount>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_ChequeEncashment = {
  __typename?: 'Page_ChequeEncashment';
  content?: Maybe<Array<Maybe<ChequeEncashment>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_Claim = {
  __typename?: 'Page_Claim';
  content?: Maybe<Array<Maybe<Claim>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_ClaimItem = {
  __typename?: 'Page_ClaimItem';
  content?: Maybe<Array<Maybe<ClaimItem>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_CollectionDeposit = {
  __typename?: 'Page_CollectionDeposit';
  content?: Maybe<Array<Maybe<CollectionDeposit>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_CompanyAccount = {
  __typename?: 'Page_CompanyAccount';
  content?: Maybe<Array<Maybe<CompanyAccount>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_CompanyType = {
  __typename?: 'Page_CompanyType';
  content?: Maybe<Array<Maybe<CompanyType>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_DailySalesDataExtracted = {
  __typename?: 'Page_DailySalesDataExtracted';
  content?: Maybe<Array<Maybe<DailySalesDataExtracted>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_DebitMemo = {
  __typename?: 'Page_DebitMemo';
  content?: Maybe<Array<Maybe<DebitMemo>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_DefaultAdmissionItems = {
  __typename?: 'Page_DefaultAdmissionItems';
  content?: Maybe<Array<Maybe<DefaultAdmissionItems>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_Department = {
  __typename?: 'Page_Department';
  content?: Maybe<Array<Maybe<Department>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_DepartmentStockIssue = {
  __typename?: 'Page_DepartmentStockIssue';
  content?: Maybe<Array<Maybe<DepartmentStockIssue>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_DepartmentStockRequest = {
  __typename?: 'Page_DepartmentStockRequest';
  content?: Maybe<Array<Maybe<DepartmentStockRequest>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_Diet = {
  __typename?: 'Page_Diet';
  content?: Maybe<Array<Maybe<Diet>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_DietLog = {
  __typename?: 'Page_DietLog';
  content?: Maybe<Array<Maybe<DietLog>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_DietNotes = {
  __typename?: 'Page_DietNotes';
  content?: Maybe<Array<Maybe<DietNotes>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_Disbursement = {
  __typename?: 'Page_Disbursement';
  content?: Maybe<Array<Maybe<Disbursement>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_DisbursementCheck = {
  __typename?: 'Page_DisbursementCheck';
  content?: Maybe<Array<Maybe<DisbursementCheck>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_Discount = {
  __typename?: 'Page_Discount';
  content?: Maybe<Array<Maybe<Discount>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_DoctorNote = {
  __typename?: 'Page_DoctorNote';
  content?: Maybe<Array<Maybe<DoctorNote>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_DoctorOrder = {
  __typename?: 'Page_DoctorOrder';
  content?: Maybe<Array<Maybe<DoctorOrder>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_DohIcdCategory = {
  __typename?: 'Page_DohIcdCategory';
  content?: Maybe<Array<Maybe<DohIcdCategory>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_DohIcdCode = {
  __typename?: 'Page_DohIcdCode';
  content?: Maybe<Array<Maybe<DohIcdCode>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_DohSurgeryCode = {
  __typename?: 'Page_DohSurgeryCode';
  content?: Maybe<Array<Maybe<DohSurgeryCode>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_Employee = {
  __typename?: 'Page_Employee';
  content?: Maybe<Array<Maybe<Employee>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_EmployeeAttendance = {
  __typename?: 'Page_EmployeeAttendance';
  content?: Maybe<Array<Maybe<EmployeeAttendance>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_EmployeeDepartmentSalaryDto = {
  __typename?: 'Page_EmployeeDepartmentSalaryDto';
  content?: Maybe<Array<Maybe<EmployeeDepartmentSalaryDto>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_EmployeeDto = {
  __typename?: 'Page_EmployeeDto';
  content?: Maybe<Array<Maybe<EmployeeDto>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_EmployeeRequest = {
  __typename?: 'Page_EmployeeRequest';
  content?: Maybe<Array<Maybe<EmployeeRequest>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_FinancialReport = {
  __typename?: 'Page_FinancialReport';
  content?: Maybe<Array<Maybe<FinancialReport>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_Fiscal = {
  __typename?: 'Page_Fiscal';
  content?: Maybe<Array<Maybe<Fiscal>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_FixedAssetCategory = {
  __typename?: 'Page_FixedAssetCategory';
  content?: Maybe<Array<Maybe<FixedAssetCategory>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_FixedAssetItem = {
  __typename?: 'Page_FixedAssetItem';
  content?: Maybe<Array<Maybe<FixedAssetItem>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_Generic = {
  __typename?: 'Page_Generic';
  content?: Maybe<Array<Maybe<Generic>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_HeaderLedger = {
  __typename?: 'Page_HeaderLedger';
  content?: Maybe<Array<Maybe<HeaderLedger>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_IcdCode = {
  __typename?: 'Page_ICDCode';
  content?: Maybe<Array<Maybe<IcdCode>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_Intake = {
  __typename?: 'Page_Intake';
  content?: Maybe<Array<Maybe<Intake>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_Integration = {
  __typename?: 'Page_Integration';
  content?: Maybe<Array<Maybe<Integration>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_IntegrationItem = {
  __typename?: 'Page_IntegrationItem';
  content?: Maybe<Array<Maybe<IntegrationItem>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_Inventory = {
  __typename?: 'Page_Inventory';
  content?: Maybe<Array<Maybe<Inventory>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_InventoryItem = {
  __typename?: 'Page_InventoryItem';
  content?: Maybe<Array<Maybe<InventoryItem>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_Investor = {
  __typename?: 'Page_Investor';
  content?: Maybe<Array<Maybe<Investor>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_Item = {
  __typename?: 'Page_Item';
  content?: Maybe<Array<Maybe<Item>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_ItemCategory = {
  __typename?: 'Page_ItemCategory';
  content?: Maybe<Array<Maybe<ItemCategory>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_ItemPriceControlDto = {
  __typename?: 'Page_ItemPriceControlDto';
  content?: Maybe<Array<Maybe<ItemPriceControlDto>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_Ledger = {
  __typename?: 'Page_Ledger';
  content?: Maybe<Array<Maybe<Ledger>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_Loan = {
  __typename?: 'Page_Loan';
  content?: Maybe<Array<Maybe<Loan>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_LoanAccounts = {
  __typename?: 'Page_LoanAccounts';
  content?: Maybe<Array<Maybe<LoanAccounts>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_LoanAmortization = {
  __typename?: 'Page_LoanAmortization';
  content?: Maybe<Array<Maybe<LoanAmortization>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_Map_String_Object = {
  __typename?: 'Page_Map_String_Object';
  content?: Maybe<Array<Maybe<Scalars['Map_String_ObjectScalar']['output']>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_Markup = {
  __typename?: 'Page_Markup';
  content?: Maybe<Array<Maybe<Markup>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_MaterialProduction = {
  __typename?: 'Page_MaterialProduction';
  content?: Maybe<Array<Maybe<MaterialProduction>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_MaterialProductionItem = {
  __typename?: 'Page_MaterialProductionItem';
  content?: Maybe<Array<Maybe<MaterialProductionItem>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_NurseNote = {
  __typename?: 'Page_NurseNote';
  content?: Maybe<Array<Maybe<NurseNote>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_OccupationalTherapyNote = {
  __typename?: 'Page_OccupationalTherapyNote';
  content?: Maybe<Array<Maybe<OccupationalTherapyNote>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_OrderSlipItem = {
  __typename?: 'Page_OrderSlipItem';
  content?: Maybe<Array<Maybe<OrderSlipItem>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_Orderslip = {
  __typename?: 'Page_Orderslip';
  content?: Maybe<Array<Maybe<Orderslip>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_OtherDeduction = {
  __typename?: 'Page_OtherDeduction';
  content?: Maybe<Array<Maybe<OtherDeduction>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_Output = {
  __typename?: 'Page_Output';
  content?: Maybe<Array<Maybe<Output>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_Package = {
  __typename?: 'Page_Package';
  content?: Maybe<Array<Maybe<Package>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_Patient = {
  __typename?: 'Page_Patient';
  content?: Maybe<Array<Maybe<Patient>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_PatientCaseView = {
  __typename?: 'Page_PatientCaseView';
  content?: Maybe<Array<Maybe<PatientCaseView>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_PaymentTerm = {
  __typename?: 'Page_PaymentTerm';
  content?: Maybe<Array<Maybe<PaymentTerm>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_PaymentTracker = {
  __typename?: 'Page_PaymentTracker';
  content?: Maybe<Array<Maybe<PaymentTracker>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_PaymentTrackerDetails = {
  __typename?: 'Page_PaymentTrackerDetails';
  content?: Maybe<Array<Maybe<PaymentTrackerDetails>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_PaymentTransactionType = {
  __typename?: 'Page_PaymentTransactionType';
  content?: Maybe<Array<Maybe<PaymentTransactionType>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_Payroll = {
  __typename?: 'Page_Payroll';
  content?: Maybe<Array<Maybe<Payroll>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_PettyCash = {
  __typename?: 'Page_PettyCash';
  content?: Maybe<Array<Maybe<PettyCash>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_PharmaItemList = {
  __typename?: 'Page_PharmaItemList';
  content?: Maybe<Array<Maybe<PharmaItemList>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_PhysicalCount = {
  __typename?: 'Page_PhysicalCount';
  content?: Maybe<Array<Maybe<PhysicalCount>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_PhysicalCountView = {
  __typename?: 'Page_PhysicalCountView';
  content?: Maybe<Array<Maybe<PhysicalCountView>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_PhysicalTherapyNote = {
  __typename?: 'Page_PhysicalTherapyNote';
  content?: Maybe<Array<Maybe<PhysicalTherapyNote>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_PhysicalTransaction = {
  __typename?: 'Page_PhysicalTransaction';
  content?: Maybe<Array<Maybe<PhysicalTransaction>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_PoItemMonitoring = {
  __typename?: 'Page_PoItemMonitoring';
  content?: Maybe<Array<Maybe<PoItemMonitoring>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_PriceTierDetail = {
  __typename?: 'Page_PriceTierDetail';
  content?: Maybe<Array<Maybe<PriceTierDetail>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_PriceTierModifier = {
  __typename?: 'Page_PriceTierModifier';
  content?: Maybe<Array<Maybe<PriceTierModifier>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_PurchaseOrder = {
  __typename?: 'Page_PurchaseOrder';
  content?: Maybe<Array<Maybe<PurchaseOrder>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_PurchaseOrderItems = {
  __typename?: 'Page_PurchaseOrderItems';
  content?: Maybe<Array<Maybe<PurchaseOrderItems>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_PurchaseRequest = {
  __typename?: 'Page_PurchaseRequest';
  content?: Maybe<Array<Maybe<PurchaseRequest>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_RvsCode = {
  __typename?: 'Page_RVSCode';
  content?: Maybe<Array<Maybe<RvsCode>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_Reapplication = {
  __typename?: 'Page_Reapplication';
  content?: Maybe<Array<Maybe<Reapplication>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_ReceiptIssuance = {
  __typename?: 'Page_ReceiptIssuance';
  content?: Maybe<Array<Maybe<ReceiptIssuance>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_ReceivablesItems = {
  __typename?: 'Page_ReceivablesItems';
  content?: Maybe<Array<Maybe<ReceivablesItems>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_ReceivingReport = {
  __typename?: 'Page_ReceivingReport';
  content?: Maybe<Array<Maybe<ReceivingReport>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_ReceivingReportItem = {
  __typename?: 'Page_ReceivingReportItem';
  content?: Maybe<Array<Maybe<ReceivingReportItem>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_ReleaseCheck = {
  __typename?: 'Page_ReleaseCheck';
  content?: Maybe<Array<Maybe<ReleaseCheck>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_ReturnSupplier = {
  __typename?: 'Page_ReturnSupplier';
  content?: Maybe<Array<Maybe<ReturnSupplier>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_RfFees = {
  __typename?: 'Page_RfFees';
  content?: Maybe<Array<Maybe<RfFees>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_Salesreportitem = {
  __typename?: 'Page_Salesreportitem';
  content?: Maybe<Array<Maybe<Salesreportitem>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_Service = {
  __typename?: 'Page_Service';
  content?: Maybe<Array<Maybe<Service>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_ServicePriceControlDto = {
  __typename?: 'Page_ServicePriceControlDto';
  content?: Maybe<Array<Maybe<ServicePriceControlDto>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_Shifting = {
  __typename?: 'Page_Shifting';
  content?: Maybe<Array<Maybe<Shifting>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_SpeechTherapyNote = {
  __typename?: 'Page_SpeechTherapyNote';
  content?: Maybe<Array<Maybe<SpeechTherapyNote>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_Supplier = {
  __typename?: 'Page_Supplier';
  content?: Maybe<Array<Maybe<Supplier>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_SupplierInventory = {
  __typename?: 'Page_SupplierInventory';
  content?: Maybe<Array<Maybe<SupplierInventory>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_SupplierItem = {
  __typename?: 'Page_SupplierItem';
  content?: Maybe<Array<Maybe<SupplierItem>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_SupplierType = {
  __typename?: 'Page_SupplierType';
  content?: Maybe<Array<Maybe<SupplierType>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_TestProcedureType = {
  __typename?: 'Page_TestProcedureType';
  content?: Maybe<Array<Maybe<TestProcedureType>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_TransactionJournalDto = {
  __typename?: 'Page_TransactionJournalDto';
  content?: Maybe<Array<Maybe<TransactionJournalDto>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_UnitMeasurement = {
  __typename?: 'Page_UnitMeasurement';
  content?: Maybe<Array<Maybe<UnitMeasurement>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_Wtx2307 = {
  __typename?: 'Page_Wtx2307';
  content?: Maybe<Array<Maybe<Wtx2307>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Page_Wtx2307Consolidated = {
  __typename?: 'Page_Wtx2307Consolidated';
  content?: Maybe<Array<Maybe<Wtx2307Consolidated>>>;
  first: Scalars['Boolean']['output'];
  hasContent: Scalars['Boolean']['output'];
  hasNext: Scalars['Boolean']['output'];
  hasPrevious: Scalars['Boolean']['output'];
  last: Scalars['Boolean']['output'];
  nextPageable?: Maybe<Pagination>;
  number: Scalars['Int']['output'];
  numberOfElements: Scalars['Int']['output'];
  pageable?: Maybe<Pagination>;
  previousPageable?: Maybe<Pagination>;
  size: Scalars['Int']['output'];
  sort?: Maybe<Sorting>;
  totalElements: Scalars['Long']['output'];
  totalPages: Scalars['Int']['output'];
};

export type Pagination = {
  __typename?: 'Pagination';
  pageNumber: Scalars['Int']['output'];
  pageSize: Scalars['Int']['output'];
  sort?: Maybe<Sort>;
};

export type PanelContent = {
  __typename?: 'PanelContent';
  created?: Maybe<Scalars['Instant']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  deleted?: Maybe<Scalars['Boolean']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  parent?: Maybe<Service>;
  service?: Maybe<Service>;
};

export type Patient = {
  __typename?: 'Patient';
  address?: Maybe<Scalars['String']['output']>;
  age?: Maybe<Scalars['Int']['output']>;
  allergies?: Maybe<Scalars['String']['output']>;
  barangay?: Maybe<Scalars['String']['output']>;
  citizenship?: Maybe<Scalars['String']['output']>;
  cityMunicipality?: Maybe<Scalars['String']['output']>;
  civilStatus?: Maybe<Scalars['String']['output']>;
  contactNo?: Maybe<Scalars['String']['output']>;
  country?: Maybe<Scalars['String']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  dob?: Maybe<Scalars['LocalDate']['output']>;
  emailAddress?: Maybe<Scalars['String']['output']>;
  familyHistory?: Maybe<Scalars['String']['output']>;
  father?: Maybe<Scalars['String']['output']>;
  fatherOccupation?: Maybe<Scalars['String']['output']>;
  firstName?: Maybe<Scalars['String']['output']>;
  fullAddress?: Maybe<Scalars['String']['output']>;
  fullName?: Maybe<Scalars['String']['output']>;
  gender?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  lastName?: Maybe<Scalars['String']['output']>;
  middleName?: Maybe<Scalars['String']['output']>;
  mother?: Maybe<Scalars['String']['output']>;
  motherOccupation?: Maybe<Scalars['String']['output']>;
  nameOfSpouse?: Maybe<Scalars['String']['output']>;
  nameSuffix?: Maybe<Scalars['String']['output']>;
  nationality?: Maybe<Scalars['String']['output']>;
  oscaId?: Maybe<Scalars['String']['output']>;
  otherContact?: Maybe<Scalars['String']['output']>;
  owwaId?: Maybe<Scalars['String']['output']>;
  /** Get Patient active Case */
  patientActiveCase?: Maybe<Case>;
  /** Get All Patient Cases */
  patientCases?: Maybe<Array<Maybe<Case>>>;
  patientNo?: Maybe<Scalars['String']['output']>;
  personalSocialHistory?: Maybe<Scalars['String']['output']>;
  philHealthId?: Maybe<Scalars['String']['output']>;
  pob?: Maybe<Scalars['String']['output']>;
  religion?: Maybe<Scalars['String']['output']>;
  spouseOccupation?: Maybe<Scalars['String']['output']>;
  stateProvince?: Maybe<Scalars['String']['output']>;
  zipCode?: Maybe<Scalars['String']['output']>;
};

export type PatientCaseDto = {
  __typename?: 'PatientCaseDto';
  admissionDatetime?: Maybe<Scalars['String']['output']>;
  caseNo?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['String']['output']>;
  dischargedDatetime?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  registryType?: Maybe<Scalars['String']['output']>;
};

export type PatientCaseView = {
  __typename?: 'PatientCaseView';
  admissionDatetime?: Maybe<Scalars['Instant']['output']>;
  admittingDiagnosis?: Maybe<Scalars['String']['output']>;
  comanagingPhysician?: Maybe<Scalars['String']['output']>;
  department?: Maybe<Department>;
  diet?: Maybe<Diet>;
  dischargeCondition?: Maybe<Scalars['String']['output']>;
  dischargeDisposition?: Maybe<Scalars['String']['output']>;
  dischargedDatetime?: Maybe<Scalars['Instant']['output']>;
  dob?: Maybe<Scalars['LocalDate']['output']>;
  entryDatetime?: Maybe<Scalars['Instant']['output']>;
  firstName?: Maybe<Scalars['String']['output']>;
  fullName?: Maybe<Scalars['String']['output']>;
  gender?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastName?: Maybe<Scalars['String']['output']>;
  managingStaffs?: Maybe<Scalars['String']['output']>;
  mayGoHomeDatetime?: Maybe<Scalars['Instant']['output']>;
  middleName?: Maybe<Scalars['String']['output']>;
  nameSuffix?: Maybe<Scalars['String']['output']>;
  originatingHci?: Maybe<Scalars['String']['output']>;
  parentCase?: Maybe<Case>;
  patientNo?: Maybe<Scalars['String']['output']>;
  primaryphysician?: Maybe<Employee>;
  registryType?: Maybe<Scalars['String']['output']>;
  room?: Maybe<Room>;
  serviceType?: Maybe<Scalars['String']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  transferHci?: Maybe<Scalars['String']['output']>;
  transferredIn?: Maybe<Scalars['Boolean']['output']>;
  transferredOut?: Maybe<Scalars['Boolean']['output']>;
};

export type PatientDto = {
  __typename?: 'PatientDto';
  firstName?: Maybe<Scalars['String']['output']>;
  fullName?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  lastName?: Maybe<Scalars['String']['output']>;
};

export type PatientInput = {
  address?: InputMaybe<Scalars['String']['input']>;
  age?: InputMaybe<Scalars['Int']['input']>;
  allergies?: InputMaybe<Scalars['String']['input']>;
  barangay?: InputMaybe<Scalars['String']['input']>;
  citizenship?: InputMaybe<Scalars['String']['input']>;
  cityMunicipality?: InputMaybe<Scalars['String']['input']>;
  civilStatus?: InputMaybe<Scalars['String']['input']>;
  contactNo?: InputMaybe<Scalars['String']['input']>;
  country?: InputMaybe<Scalars['String']['input']>;
  dob?: InputMaybe<Scalars['LocalDate']['input']>;
  emailAddress?: InputMaybe<Scalars['String']['input']>;
  familyHistory?: InputMaybe<Scalars['String']['input']>;
  father?: InputMaybe<Scalars['String']['input']>;
  fatherOccupation?: InputMaybe<Scalars['String']['input']>;
  firstName?: InputMaybe<Scalars['String']['input']>;
  fullName?: InputMaybe<Scalars['String']['input']>;
  gender?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  lastName?: InputMaybe<Scalars['String']['input']>;
  middleName?: InputMaybe<Scalars['String']['input']>;
  mother?: InputMaybe<Scalars['String']['input']>;
  motherOccupation?: InputMaybe<Scalars['String']['input']>;
  nameOfSpouse?: InputMaybe<Scalars['String']['input']>;
  nameSuffix?: InputMaybe<Scalars['String']['input']>;
  nationality?: InputMaybe<Scalars['String']['input']>;
  oscaId?: InputMaybe<Scalars['String']['input']>;
  otherContact?: InputMaybe<Scalars['String']['input']>;
  owwaId?: InputMaybe<Scalars['String']['input']>;
  patientNo?: InputMaybe<Scalars['String']['input']>;
  personalSocialHistory?: InputMaybe<Scalars['String']['input']>;
  philHealthId?: InputMaybe<Scalars['String']['input']>;
  pob?: InputMaybe<Scalars['String']['input']>;
  religion?: InputMaybe<Scalars['String']['input']>;
  spouseOccupation?: InputMaybe<Scalars['String']['input']>;
  stateProvince?: InputMaybe<Scalars['String']['input']>;
  zipCode?: InputMaybe<Scalars['String']['input']>;
};

export type PatientOwnMedicine = {
  __typename?: 'PatientOwnMedicine';
  active?: Maybe<Scalars['Boolean']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  employee?: Maybe<Employee>;
  entry_datetime?: Maybe<Scalars['Instant']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  linked_medication?: Maybe<Medication>;
  medicine_name?: Maybe<Scalars['String']['output']>;
  patientCase?: Maybe<Case>;
  /** Get all patientOwnMedicationAdministrations by Medication Id */
  patientOwnMedicationAdministrations?: Maybe<Array<Maybe<PatientOwnMedicineAdministration>>>;
  qty_onhand?: Maybe<Scalars['BigDecimal']['output']>;
};

export type PatientOwnMedicineAdministration = {
  __typename?: 'PatientOwnMedicineAdministration';
  action?: Maybe<Scalars['String']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  dose?: Maybe<Scalars['String']['output']>;
  employee?: Maybe<Employee>;
  entryDateTime?: Maybe<Scalars['Instant']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  patientOwnMedicine?: Maybe<PatientOwnMedicine>;
  remarks?: Maybe<Scalars['String']['output']>;
};

export type PatientPhilhealthData = {
  __typename?: 'PatientPhilhealthData';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  fullName?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  memberAddress?: Maybe<Scalars['String']['output']>;
  memberBarangay?: Maybe<Scalars['String']['output']>;
  memberCityMunicipality?: Maybe<Scalars['String']['output']>;
  memberCivilStatus?: Maybe<Scalars['String']['output']>;
  memberCountry?: Maybe<Scalars['String']['output']>;
  memberDob?: Maybe<Scalars['Instant']['output']>;
  memberFirstName?: Maybe<Scalars['String']['output']>;
  memberGender?: Maybe<Scalars['String']['output']>;
  memberLastName?: Maybe<Scalars['String']['output']>;
  memberMiddleName?: Maybe<Scalars['String']['output']>;
  memberPin?: Maybe<Scalars['String']['output']>;
  memberRelation?: Maybe<Scalars['String']['output']>;
  memberStateProvince?: Maybe<Scalars['String']['output']>;
  memberSuffix?: Maybe<Scalars['String']['output']>;
  memberType?: Maybe<Scalars['String']['output']>;
  memberZipCode?: Maybe<Scalars['String']['output']>;
  parentCase?: Maybe<Case>;
};

export type PatientVaccination = {
  __typename?: 'PatientVaccination';
  administeredBy?: Maybe<Scalars['String']['output']>;
  brand?: Maybe<Scalars['String']['output']>;
  caseId?: Maybe<Case>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  doseFrequency?: Maybe<Scalars['String']['output']>;
  healthFacility?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  patient?: Maybe<Patient>;
  vaccineDate?: Maybe<Scalars['Date']['output']>;
};

export type PaymentComponent = {
  __typename?: 'PaymentComponent';
  amountShare?: Maybe<Scalars['BigDecimal']['output']>;
  billingItemId?: Maybe<Scalars['UUID']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  ornumber?: Maybe<Scalars['String']['output']>;
  recordNo?: Maybe<Scalars['String']['output']>;
};

export type PaymentDiscounts = {
  __typename?: 'PaymentDiscounts';
  discount?: Maybe<Scalars['BigDecimal']['output']>;
  end?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  start?: Maybe<Scalars['Int']['output']>;
  unitOfTime?: Maybe<Scalars['String']['output']>;
};

export type PaymentTarget = {
  __typename?: 'PaymentTarget';
  amount?: Maybe<Scalars['BigDecimal']['output']>;
  chartOfAccount?: Maybe<ChartOfAccount>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  details?: Maybe<Scalars['Map_String_StringScalar']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  journalCode?: Maybe<Scalars['String']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  paymentTracker?: Maybe<PaymentTracker>;
};

export type PaymentTargetInput = {
  amount?: InputMaybe<Scalars['BigDecimal']['input']>;
  chartOfAccount?: InputMaybe<ChartOfAccountInput>;
  details?: InputMaybe<Scalars['Map_String_StringScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  journalCode?: InputMaybe<Scalars['String']['input']>;
  paymentTracker?: InputMaybe<PaymentTrackerInput>;
};

export type PaymentTerm = {
  __typename?: 'PaymentTerm';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  isActive?: Maybe<Scalars['Boolean']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  paymentCode?: Maybe<Scalars['String']['output']>;
  paymentDesc?: Maybe<Scalars['String']['output']>;
  paymentNoDays?: Maybe<Scalars['Int']['output']>;
};

export type PaymentTermInput = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  isActive?: InputMaybe<Scalars['Boolean']['input']>;
  paymentCode?: InputMaybe<Scalars['String']['input']>;
  paymentDesc?: InputMaybe<Scalars['String']['input']>;
  paymentNoDays?: InputMaybe<Scalars['Int']['input']>;
};

export type PaymentTracker = {
  __typename?: 'PaymentTracker';
  additionalPaidInCapital?: Maybe<Scalars['BigDecimal']['output']>;
  advancesFromInvestors?: Maybe<Scalars['BigDecimal']['output']>;
  advancesFromPatients?: Maybe<Scalars['BigDecimal']['output']>;
  allCredits?: Maybe<Array<Maybe<Ledger>>>;
  amountForCashDeposit?: Maybe<Scalars['BigDecimal']['output']>;
  amountForCreditCard?: Maybe<Scalars['BigDecimal']['output']>;
  appliedOrs?: Maybe<Array<Maybe<AppliedOr>>>;
  bankForCashDeposit?: Maybe<Bank>;
  bankForCreditCard?: Maybe<Bank>;
  billingid?: Maybe<Scalars['UUID']['output']>;
  cashierTerminal?: Maybe<CashierTerminal>;
  change?: Maybe<Scalars['BigDecimal']['output']>;
  companyId?: Maybe<Scalars['UUID']['output']>;
  completed?: Maybe<Scalars['Boolean']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  details?: Maybe<Scalars['Map_String_StringScalar']['output']>;
  discountOnShareCapital?: Maybe<Scalars['BigDecimal']['output']>;
  domain?: Maybe<Scalars['String']['output']>;
  employeeId?: Maybe<Scalars['UUID']['output']>;
  erPayments?: Maybe<Scalars['BigDecimal']['output']>;
  flagValue?: Maybe<Scalars['String']['output']>;
  hosp?: Maybe<Scalars['BigDecimal']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  investorId?: Maybe<Scalars['UUID']['output']>;
  ipdPayments?: Maybe<Scalars['BigDecimal']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  ledgerHeader?: Maybe<Scalars['UUID']['output']>;
  opdPayments?: Maybe<Scalars['BigDecimal']['output']>;
  ornumber?: Maybe<Scalars['String']['output']>;
  otcPayments?: Maybe<Scalars['BigDecimal']['output']>;
  patientId?: Maybe<Scalars['UUID']['output']>;
  payableToInvestor?: Maybe<Scalars['BigDecimal']['output']>;
  paymentDetails?: Maybe<Array<Maybe<PaymentTrackerDetails>>>;
  paymentTargets?: Maybe<Array<Maybe<PaymentTarget>>>;
  payorName?: Maybe<Scalars['String']['output']>;
  pf?: Maybe<Scalars['BigDecimal']['output']>;
  pfPaymentsAll?: Maybe<Scalars['BigDecimal']['output']>;
  receiptType?: Maybe<ReceiptType>;
  reference?: Maybe<Scalars['String']['output']>;
  shareCapital?: Maybe<Scalars['BigDecimal']['output']>;
  shift?: Maybe<Shifting>;
  subscribedShareCapital?: Maybe<Scalars['BigDecimal']['output']>;
  subscriptionReceivable?: Maybe<Scalars['BigDecimal']['output']>;
  supplierId?: Maybe<Scalars['UUID']['output']>;
  totalApplied?: Maybe<Scalars['BigDecimal']['output']>;
  totalCard?: Maybe<Scalars['BigDecimal']['output']>;
  totalCash?: Maybe<Scalars['BigDecimal']['output']>;
  totalCheck?: Maybe<Scalars['BigDecimal']['output']>;
  totalDeposit?: Maybe<Scalars['BigDecimal']['output']>;
  totalEWallet?: Maybe<Scalars['BigDecimal']['output']>;
  totalpayments?: Maybe<Scalars['BigDecimal']['output']>;
  transactionCategory?: Maybe<Scalars['String']['output']>;
  transactionCategoryId?: Maybe<Scalars['UUID']['output']>;
  voidDate?: Maybe<Scalars['Instant']['output']>;
  voidType?: Maybe<Scalars['String']['output']>;
  voided?: Maybe<Scalars['Boolean']['output']>;
};

export type PaymentTrackerDetails = {
  __typename?: 'PaymentTrackerDetails';
  amount?: Maybe<Scalars['BigDecimal']['output']>;
  approvalCode?: Maybe<Scalars['String']['output']>;
  bank?: Maybe<Scalars['String']['output']>;
  bankEntity?: Maybe<Bank>;
  cardType?: Maybe<Scalars['String']['output']>;
  checkdate?: Maybe<Scalars['String']['output']>;
  cleared?: Maybe<Scalars['Boolean']['output']>;
  cleareddate?: Maybe<Scalars['Instant']['output']>;
  collectionDetail?: Maybe<CollectionDetail>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  denied?: Maybe<Scalars['Boolean']['output']>;
  denieddate?: Maybe<Scalars['Instant']['output']>;
  depositDate?: Maybe<Scalars['Instant']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  ignored?: Maybe<Scalars['Boolean']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  nameOfCard?: Maybe<Scalars['String']['output']>;
  otherDetails?: Maybe<OtherDetails>;
  paymentTracker?: Maybe<PaymentTracker>;
  posTerminalId?: Maybe<Scalars['String']['output']>;
  reconcileDate?: Maybe<Scalars['Instant']['output']>;
  reconcileId?: Maybe<Scalars['UUID']['output']>;
  reference?: Maybe<Scalars['String']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  type?: Maybe<PaymentType>;
};

export type PaymentTrackerDetailsInput = {
  amount?: InputMaybe<Scalars['BigDecimal']['input']>;
  approvalCode?: InputMaybe<Scalars['String']['input']>;
  bank?: InputMaybe<Scalars['String']['input']>;
  bankEntity?: InputMaybe<BankInput>;
  cardType?: InputMaybe<Scalars['String']['input']>;
  checkdate?: InputMaybe<Scalars['String']['input']>;
  cleared?: InputMaybe<Scalars['Boolean']['input']>;
  cleareddate?: InputMaybe<Scalars['Instant']['input']>;
  collectionDetail?: InputMaybe<CollectionDetailInput>;
  denied?: InputMaybe<Scalars['Boolean']['input']>;
  denieddate?: InputMaybe<Scalars['Instant']['input']>;
  depositDate?: InputMaybe<Scalars['Instant']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  ignored?: InputMaybe<Scalars['Boolean']['input']>;
  nameOfCard?: InputMaybe<Scalars['String']['input']>;
  otherDetails?: InputMaybe<OtherDetailsInput>;
  paymentTracker?: InputMaybe<PaymentTrackerInput>;
  posTerminalId?: InputMaybe<Scalars['String']['input']>;
  reconcileDate?: InputMaybe<Scalars['Instant']['input']>;
  reconcileId?: InputMaybe<Scalars['UUID']['input']>;
  reference?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<PaymentType>;
};

export type PaymentTrackerInput = {
  additionalPaidInCapital?: InputMaybe<Scalars['BigDecimal']['input']>;
  advancesFromInvestors?: InputMaybe<Scalars['BigDecimal']['input']>;
  advancesFromPatients?: InputMaybe<Scalars['BigDecimal']['input']>;
  allCredits?: InputMaybe<Array<InputMaybe<LedgerInput>>>;
  amountForCashDeposit?: InputMaybe<Scalars['BigDecimal']['input']>;
  amountForCreditCard?: InputMaybe<Scalars['BigDecimal']['input']>;
  appliedOrs?: InputMaybe<Array<InputMaybe<AppliedOrInput>>>;
  bankForCashDeposit?: InputMaybe<BankInput>;
  bankForCreditCard?: InputMaybe<BankInput>;
  billingid?: InputMaybe<Scalars['UUID']['input']>;
  cashierTerminal?: InputMaybe<CashierTerminalInput>;
  change?: InputMaybe<Scalars['BigDecimal']['input']>;
  companyId?: InputMaybe<Scalars['UUID']['input']>;
  completed?: InputMaybe<Scalars['Boolean']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  discountOnShareCapital?: InputMaybe<Scalars['BigDecimal']['input']>;
  employeeId?: InputMaybe<Scalars['UUID']['input']>;
  erPayments?: InputMaybe<Scalars['BigDecimal']['input']>;
  flagValue?: InputMaybe<Scalars['String']['input']>;
  hosp?: InputMaybe<Scalars['BigDecimal']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  investorId?: InputMaybe<Scalars['UUID']['input']>;
  ipdPayments?: InputMaybe<Scalars['BigDecimal']['input']>;
  ledgerHeader?: InputMaybe<Scalars['UUID']['input']>;
  opdPayments?: InputMaybe<Scalars['BigDecimal']['input']>;
  ornumber?: InputMaybe<Scalars['String']['input']>;
  otcPayments?: InputMaybe<Scalars['BigDecimal']['input']>;
  patientId?: InputMaybe<Scalars['UUID']['input']>;
  payableToInvestor?: InputMaybe<Scalars['BigDecimal']['input']>;
  paymentDetails?: InputMaybe<Array<InputMaybe<PaymentTrackerDetailsInput>>>;
  paymentTargets?: InputMaybe<Array<InputMaybe<PaymentTargetInput>>>;
  payorName?: InputMaybe<Scalars['String']['input']>;
  pf?: InputMaybe<Scalars['BigDecimal']['input']>;
  pfPaymentsAll?: InputMaybe<Scalars['BigDecimal']['input']>;
  receiptType?: InputMaybe<ReceiptType>;
  reference?: InputMaybe<Scalars['String']['input']>;
  shareCapital?: InputMaybe<Scalars['BigDecimal']['input']>;
  shift?: InputMaybe<ShiftingInput>;
  subscribedShareCapital?: InputMaybe<Scalars['BigDecimal']['input']>;
  subscriptionReceivable?: InputMaybe<Scalars['BigDecimal']['input']>;
  supplierId?: InputMaybe<Scalars['UUID']['input']>;
  totalApplied?: InputMaybe<Scalars['BigDecimal']['input']>;
  totalCard?: InputMaybe<Scalars['BigDecimal']['input']>;
  totalCash?: InputMaybe<Scalars['BigDecimal']['input']>;
  totalCheck?: InputMaybe<Scalars['BigDecimal']['input']>;
  totalDeposit?: InputMaybe<Scalars['BigDecimal']['input']>;
  totalEWallet?: InputMaybe<Scalars['BigDecimal']['input']>;
  totalpayments?: InputMaybe<Scalars['BigDecimal']['input']>;
  transactionCategory?: InputMaybe<Scalars['String']['input']>;
  transactionCategoryId?: InputMaybe<Scalars['UUID']['input']>;
  voidDate?: InputMaybe<Scalars['Instant']['input']>;
  voidType?: InputMaybe<Scalars['String']['input']>;
  voided?: InputMaybe<Scalars['Boolean']['input']>;
};

export type PaymentTransactionType = {
  __typename?: 'PaymentTransactionType';
  accounts?: Maybe<Array<Maybe<PaymentTypeAccounts>>>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  miscType?: Maybe<MiscType>;
  payorType?: Maybe<PayorType>;
  status?: Maybe<PaymentTransactionTypeStatus>;
  typeName?: Maybe<Scalars['String']['output']>;
};

export enum PaymentTransactionTypeStatus {
  Active = 'ACTIVE',
  Inactive = 'INACTIVE'
}

export enum PaymentType {
  Bankdeposit = 'BANKDEPOSIT',
  Card = 'CARD',
  Cash = 'CASH',
  Check = 'CHECK',
  Ewallet = 'EWALLET'
}

export type PaymentTypeAccount = {
  __typename?: 'PaymentTypeAccount';
  accountType?: Maybe<Scalars['String']['output']>;
  code?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
};

export type PaymentTypeAccounts = {
  __typename?: 'PaymentTypeAccounts';
  account?: Maybe<PaymentTypeAccount>;
  amount?: Maybe<Scalars['BigDecimal']['output']>;
};

export enum PayorType {
  Clinics = 'CLINICS',
  Corporate = 'CORPORATE',
  Doctors = 'DOCTORS',
  Employee = 'EMPLOYEE',
  Hmo = 'HMO',
  Others = 'OTHERS',
  Patient = 'PATIENT'
}

export type Payroll = {
  __typename?: 'Payroll';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  dateEnd?: Maybe<Scalars['Instant']['output']>;
  dateStart?: Maybe<Scalars['Instant']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  finalizedBy?: Maybe<Employee>;
  finalizedDate?: Maybe<Scalars['Instant']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  otherDeduction?: Maybe<PayrollOtherDeduction>;
  payrollEmployees?: Maybe<Array<Maybe<PayrollEmployee>>>;
  status?: Maybe<PayrollStatus>;
  timekeeping?: Maybe<Timekeeping>;
  title?: Maybe<Scalars['String']['output']>;
};

export type PayrollAllowance = {
  __typename?: 'PayrollAllowance';
  id?: Maybe<Scalars['UUID']['output']>;
  payroll?: Maybe<Payroll>;
};

export type PayrollContribution = {
  __typename?: 'PayrollContribution';
  finalizedBy?: Maybe<Scalars['String']['output']>;
  finalizedDate?: Maybe<Scalars['Instant']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  payroll?: Maybe<Payroll>;
  status?: Maybe<Scalars['String']['output']>;
};

export type PayrollEmployee = {
  __typename?: 'PayrollEmployee';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  employee?: Maybe<Employee>;
  id?: Maybe<Scalars['UUID']['output']>;
  isOld?: Maybe<Scalars['Boolean']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  otherDeduction?: Maybe<OtherDeductionEmployee>;
  payroll?: Maybe<Payroll>;
  status?: Maybe<PayrollEmployeeStatus>;
  timekeepingEmployee?: Maybe<TimekeepingEmployee>;
};

export type PayrollEmployeeAllowance = {
  __typename?: 'PayrollEmployeeAllowance';
  allowanceItems?: Maybe<Array<Maybe<PayrollEmployeeAllowanceItem>>>;
  approvedBy?: Maybe<Employee>;
  approvedDate?: Maybe<Scalars['Instant']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  finalizedBy?: Maybe<Employee>;
  finalizedDate?: Maybe<Scalars['Instant']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  payrollAllowance?: Maybe<PayrollAllowance>;
  payrollEmployee?: Maybe<PayrollEmployee>;
  rejectedBy?: Maybe<Employee>;
  rejectedDate?: Maybe<Scalars['Instant']['output']>;
  status?: Maybe<PayrollEmployeeStatus>;
};

export type PayrollEmployeeAllowanceItem = {
  __typename?: 'PayrollEmployeeAllowanceItem';
  amount?: Maybe<Scalars['BigDecimal']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  payrollEmployeeAllowance?: Maybe<PayrollEmployeeAllowance>;
  taxable?: Maybe<Scalars['Boolean']['output']>;
};

export type PayrollEmployeeContribution = {
  __typename?: 'PayrollEmployeeContribution';
  approvedBy?: Maybe<Employee>;
  approvedDate?: Maybe<Scalars['Instant']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  finalizedBy?: Maybe<Employee>;
  finalizedDate?: Maybe<Scalars['Instant']['output']>;
  hdmfEE?: Maybe<Scalars['BigDecimal']['output']>;
  hdmfER?: Maybe<Scalars['BigDecimal']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  payrollContribution?: Maybe<PayrollContribution>;
  payrollEmployee?: Maybe<PayrollEmployee>;
  phicEE?: Maybe<Scalars['BigDecimal']['output']>;
  phicER?: Maybe<Scalars['BigDecimal']['output']>;
  rejectedBy?: Maybe<Employee>;
  rejectedDate?: Maybe<Scalars['Instant']['output']>;
  sssEE?: Maybe<Scalars['BigDecimal']['output']>;
  sssEr?: Maybe<Scalars['BigDecimal']['output']>;
  status?: Maybe<PayrollEmployeeStatus>;
};

export enum PayrollEmployeeStatus {
  Approved = 'APPROVED',
  Draft = 'DRAFT',
  Finalized = 'FINALIZED',
  Rejected = 'REJECTED'
}

export enum PayrollModule {
  Adjustment = 'ADJUSTMENT',
  Allowance = 'ALLOWANCE',
  Contribution = 'CONTRIBUTION',
  OtherDeduction = 'OTHER_DEDUCTION',
  Timekeeping = 'TIMEKEEPING'
}

export type PayrollOtherDeduction = {
  __typename?: 'PayrollOtherDeduction';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  employees?: Maybe<Array<Maybe<OtherDeductionEmployee>>>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  payroll?: Maybe<Payroll>;
  status?: Maybe<TimekeepingStatus>;
};

export enum PayrollStatus {
  Active = 'ACTIVE',
  Cancelled = 'CANCELLED',
  Draft = 'DRAFT',
  Finalized = 'FINALIZED'
}

export type PeriodRangeParent = {
  __typename?: 'PeriodRangeParent';
  end?: Maybe<Scalars['String']['output']>;
  periodDateRangeChildList?: Maybe<Array<Maybe<IsPeriodDateRangeChild>>>;
  start?: Maybe<Scalars['String']['output']>;
};

export type PeriodWithUot = {
  __typename?: 'PeriodWithUOT';
  description?: Maybe<Scalars['String']['output']>;
  period?: Maybe<Scalars['Int']['output']>;
  unitOfTime?: Maybe<Scalars['String']['output']>;
};

export type Permission = {
  __typename?: 'Permission';
  description?: Maybe<Scalars['String']['output']>;
  name: Scalars['String']['output'];
};

export type PersistentToken = {
  __typename?: 'PersistentToken';
  MAX_USER_AGENT_LEN: Scalars['Int']['output'];
  ipAddress?: Maybe<Scalars['String']['output']>;
  series?: Maybe<Scalars['String']['output']>;
  tokenDate?: Maybe<Scalars['LocalDate']['output']>;
  tokenValue: Scalars['String']['output'];
  user?: Maybe<User>;
  userAgent?: Maybe<Scalars['String']['output']>;
};

export type PettyCash = {
  __typename?: 'PettyCash';
  advanceAmount?: Maybe<Scalars['BigDecimal']['output']>;
  amountIssued?: Maybe<Scalars['BigDecimal']['output']>;
  amountUnused?: Maybe<Scalars['BigDecimal']['output']>;
  amountUsed?: Maybe<Scalars['BigDecimal']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  details?: Maybe<Scalars['Map_String_StringScalar']['output']>;
  disbursementAmount?: Maybe<Scalars['BigDecimal']['output']>;
  discAmount?: Maybe<Scalars['BigDecimal']['output']>;
  domain?: Maybe<Scalars['String']['output']>;
  flagValue?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  payeeName?: Maybe<Scalars['String']['output']>;
  pcvDate?: Maybe<Scalars['Instant']['output']>;
  pcvNo?: Maybe<Scalars['String']['output']>;
  posted?: Maybe<Scalars['Boolean']['output']>;
  postedLedger?: Maybe<Scalars['UUID']['output']>;
  posted_by?: Maybe<Scalars['String']['output']>;
  remarks?: Maybe<Scalars['String']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  transType?: Maybe<ApTransaction>;
  vatInclusive?: Maybe<Scalars['Boolean']['output']>;
  vatRate?: Maybe<Scalars['BigDecimal']['output']>;
};

export type PettyCashInput = {
  advanceAmount?: InputMaybe<Scalars['BigDecimal']['input']>;
  amountIssued?: InputMaybe<Scalars['BigDecimal']['input']>;
  amountUnused?: InputMaybe<Scalars['BigDecimal']['input']>;
  amountUsed?: InputMaybe<Scalars['BigDecimal']['input']>;
  disbursementAmount?: InputMaybe<Scalars['BigDecimal']['input']>;
  discAmount?: InputMaybe<Scalars['BigDecimal']['input']>;
  flagValue?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  payeeName?: InputMaybe<Scalars['String']['input']>;
  pcvDate?: InputMaybe<Scalars['Instant']['input']>;
  pcvNo?: InputMaybe<Scalars['String']['input']>;
  posted?: InputMaybe<Scalars['Boolean']['input']>;
  postedLedger?: InputMaybe<Scalars['UUID']['input']>;
  posted_by?: InputMaybe<Scalars['String']['input']>;
  remarks?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  transType?: InputMaybe<ApTransactionInput>;
  vatInclusive?: InputMaybe<Scalars['Boolean']['input']>;
  vatRate?: InputMaybe<Scalars['BigDecimal']['input']>;
};

export type PettyCashItem = {
  __typename?: 'PettyCashItem';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  department?: Maybe<Department>;
  discAmount?: Maybe<Scalars['BigDecimal']['output']>;
  discRate?: Maybe<Scalars['BigDecimal']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  isVat?: Maybe<Scalars['Boolean']['output']>;
  item?: Maybe<Item>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  netAmount?: Maybe<Scalars['BigDecimal']['output']>;
  pettyCash?: Maybe<PettyCash>;
  qty?: Maybe<Scalars['Int']['output']>;
  unitCost?: Maybe<Scalars['BigDecimal']['output']>;
  vatAmount?: Maybe<Scalars['BigDecimal']['output']>;
};

export type PettyCashOther = {
  __typename?: 'PettyCashOther';
  amount?: Maybe<Scalars['BigDecimal']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  department?: Maybe<Department>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  pettyCash?: Maybe<PettyCash>;
  remarks?: Maybe<Scalars['String']['output']>;
  transType?: Maybe<ExpenseTransaction>;
};

export type PharmaItemList = {
  __typename?: 'PharmaItemList';
  key?: Maybe<Scalars['String']['output']>;
  onHand?: Maybe<Scalars['BigInteger']['output']>;
  reOrder?: Maybe<Scalars['BigDecimal']['output']>;
  value?: Maybe<Scalars['String']['output']>;
};

export type PharmacyConfiguration = {
  __typename?: 'PharmacyConfiguration';
  id?: Maybe<Scalars['UUID']['output']>;
  pharmacyDepartment?: Maybe<Department>;
  stickerPinterLocation?: Maybe<Scalars['String']['output']>;
};

export type PhicGroup = {
  __typename?: 'PhicGroup';
  deleted?: Maybe<Scalars['Boolean']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  phicGroupName?: Maybe<Scalars['String']['output']>;
};

export type PhysicalCount = {
  __typename?: 'PhysicalCount';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  dateTrans?: Maybe<Scalars['Instant']['output']>;
  department?: Maybe<Department>;
  expiration_date?: Maybe<Scalars['Instant']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  isCancel?: Maybe<Scalars['Boolean']['output']>;
  isPosted?: Maybe<Scalars['Boolean']['output']>;
  item?: Maybe<Item>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  /** List of Logs Count */
  monthlyCount?: Maybe<Scalars['Int']['output']>;
  onHand?: Maybe<Scalars['Int']['output']>;
  physicalTransaction?: Maybe<PhysicalTransaction>;
  quantity?: Maybe<Scalars['Int']['output']>;
  refLedgerId?: Maybe<Scalars['UUID']['output']>;
  refNo?: Maybe<Scalars['String']['output']>;
  unitCost?: Maybe<Scalars['BigDecimal']['output']>;
  variance?: Maybe<Scalars['Int']['output']>;
  wcost?: Maybe<Scalars['BigDecimal']['output']>;
};

export type PhysicalCountView = {
  __typename?: 'PhysicalCountView';
  category_description?: Maybe<Scalars['String']['output']>;
  dateTrans?: Maybe<Scalars['Instant']['output']>;
  department?: Maybe<Department>;
  descLong?: Maybe<Scalars['String']['output']>;
  expiration_date?: Maybe<Scalars['Instant']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  isCancel?: Maybe<Scalars['Boolean']['output']>;
  isPosted?: Maybe<Scalars['Boolean']['output']>;
  itemId?: Maybe<Scalars['UUID']['output']>;
  monthlyCount?: Maybe<Scalars['Int']['output']>;
  onHand?: Maybe<Scalars['Int']['output']>;
  physicalTransaction?: Maybe<PhysicalTransaction>;
  sku?: Maybe<Scalars['String']['output']>;
  unitCost?: Maybe<Scalars['BigDecimal']['output']>;
  unit_of_purchase?: Maybe<Scalars['String']['output']>;
  unit_of_usage?: Maybe<Scalars['String']['output']>;
  variance?: Maybe<Scalars['Int']['output']>;
};

export type PhysicalTherapyNote = {
  __typename?: 'PhysicalTherapyNote';
  assessment?: Maybe<Scalars['String']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  employee?: Maybe<Employee>;
  entryDateTime?: Maybe<Scalars['Instant']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  objective?: Maybe<Scalars['String']['output']>;
  parentCase?: Maybe<Case>;
  plan?: Maybe<Scalars['String']['output']>;
  subjective?: Maybe<Scalars['String']['output']>;
};

export type PhysicalTransaction = {
  __typename?: 'PhysicalTransaction';
  accType?: Maybe<Scalars['UUID']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  department?: Maybe<Department>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  posted?: Maybe<Scalars['Boolean']['output']>;
  postedBy?: Maybe<Scalars['String']['output']>;
  postedLedger?: Maybe<Scalars['UUID']['output']>;
  remarksNotes?: Maybe<Scalars['String']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  transBy?: Maybe<Employee>;
  transDate?: Maybe<Scalars['Instant']['output']>;
  transNo?: Maybe<Scalars['String']['output']>;
};

export type Physician = {
  __typename?: 'Physician';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  firstName?: Maybe<Scalars['String']['output']>;
  fullnameWithTitle?: Maybe<Scalars['String']['output']>;
  generalPractitioner?: Maybe<Scalars['Boolean']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  lastName?: Maybe<Scalars['String']['output']>;
  middleName?: Maybe<Scalars['String']['output']>;
  specialization?: Maybe<Specialty>;
  suffix?: Maybe<Scalars['String']['output']>;
  title?: Maybe<Scalars['String']['output']>;
};

export type PhysicianInput = {
  firstName?: InputMaybe<Scalars['String']['input']>;
  fullnameWithTitle?: InputMaybe<Scalars['String']['input']>;
  generalPractitioner?: InputMaybe<Scalars['Boolean']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  lastName?: InputMaybe<Scalars['String']['input']>;
  middleName?: InputMaybe<Scalars['String']['input']>;
  specialization?: InputMaybe<SpecialtyInput>;
  suffix?: InputMaybe<Scalars['String']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
};

export type PoItemMonitoring = {
  __typename?: 'PoItemMonitoring';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  delBalance?: Maybe<Scalars['Int']['output']>;
  delQty?: Maybe<Scalars['Int']['output']>;
  deliveryStatus?: Maybe<Scalars['Int']['output']>;
  descLong?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  item?: Maybe<Item>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  poNumber?: Maybe<Scalars['String']['output']>;
  prNos?: Maybe<Scalars['String']['output']>;
  purchaseOrder?: Maybe<PurchaseOrder>;
  qtyInSmall?: Maybe<Scalars['Int']['output']>;
  quantity?: Maybe<Scalars['Int']['output']>;
  receivingReport?: Maybe<ReceivingReport>;
  supplier?: Maybe<Scalars['UUID']['output']>;
  supplierFullName?: Maybe<Scalars['String']['output']>;
  supplierLastPrice?: Maybe<Scalars['BigDecimal']['output']>;
  type?: Maybe<Scalars['String']['output']>;
  type_text?: Maybe<Scalars['String']['output']>;
  unitMeasurement?: Maybe<Scalars['String']['output']>;
};

export type PositionCountDto = {
  __typename?: 'PositionCountDTO';
  activerotatingaffiliate?: Maybe<Scalars['Int']['output']>;
  fulltime40contractual?: Maybe<Scalars['Int']['output']>;
  fulltime40permanent?: Maybe<Scalars['Int']['output']>;
  isothers?: Maybe<Scalars['Boolean']['output']>;
  outsourced?: Maybe<Scalars['Int']['output']>;
  parttimecontractual?: Maybe<Scalars['Int']['output']>;
  parttimepermanent?: Maybe<Scalars['Int']['output']>;
  positiondesc?: Maybe<Scalars['String']['output']>;
  professiondesignation?: Maybe<Scalars['String']['output']>;
  reportingyear?: Maybe<Scalars['String']['output']>;
  specialtyboardcertified?: Maybe<Scalars['Int']['output']>;
};

export type PriceTierDetail = {
  __typename?: 'PriceTierDetail';
  accommodationType?: Maybe<Scalars['String']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  department?: Maybe<Department>;
  departments?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  forSenior?: Maybe<Scalars['Boolean']['output']>;
  fromDatetime?: Maybe<Scalars['Instant']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  isVatable?: Maybe<Scalars['Boolean']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  octUse?: Maybe<Scalars['Boolean']['output']>;
  registryType?: Maybe<Scalars['String']['output']>;
  roomTypes?: Maybe<Scalars['String']['output']>;
  targetAudience?: Maybe<Scalars['String']['output']>;
  tierCode?: Maybe<Scalars['String']['output']>;
  toDatetime?: Maybe<Scalars['Instant']['output']>;
  vatRate?: Maybe<Scalars['BigDecimal']['output']>;
};

export type PriceTierDetailInput = {
  accommodationType?: InputMaybe<Scalars['String']['input']>;
  department?: InputMaybe<DepartmentInput>;
  departments?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  forSenior?: InputMaybe<Scalars['Boolean']['input']>;
  fromDatetime?: InputMaybe<Scalars['Instant']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  isVatable?: InputMaybe<Scalars['Boolean']['input']>;
  octUse?: InputMaybe<Scalars['Boolean']['input']>;
  registryType?: InputMaybe<Scalars['String']['input']>;
  roomTypes?: InputMaybe<Scalars['String']['input']>;
  targetAudience?: InputMaybe<Scalars['String']['input']>;
  tierCode?: InputMaybe<Scalars['String']['input']>;
  toDatetime?: InputMaybe<Scalars['Instant']['input']>;
  vatRate?: InputMaybe<Scalars['BigDecimal']['input']>;
};

export type PriceTierModifier = {
  __typename?: 'PriceTierModifier';
  categoryType?: Maybe<Scalars['String']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  employee?: Maybe<Employee>;
  fromCost?: Maybe<Scalars['BigDecimal']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  percentageValue?: Maybe<Scalars['BigDecimal']['output']>;
  priceTierDetail?: Maybe<PriceTierDetail>;
  testAmount?: Maybe<Scalars['BigDecimal']['output']>;
  toCost?: Maybe<Scalars['BigDecimal']['output']>;
};

export type Province = {
  __typename?: 'Province';
  id?: Maybe<Scalars['Long']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  provinceName?: Maybe<Scalars['String']['output']>;
};

export type ProvinceState = {
  __typename?: 'ProvinceState';
  id?: Maybe<Scalars['UUID']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  region?: Maybe<Region>;
};

export type PurchaseOrder = {
  __typename?: 'PurchaseOrder';
  approvedBy?: Maybe<Employee>;
  approvedBy2?: Maybe<Scalars['UUID']['output']>;
  approvedBy2Date?: Maybe<Scalars['LocalDateTime']['output']>;
  approvedBy2Position?: Maybe<Scalars['String']['output']>;
  approvedBy2Signature?: Maybe<Array<Maybe<Scalars['Byte']['output']>>>;
  approvedBy3?: Maybe<Scalars['UUID']['output']>;
  approvedBy3Date?: Maybe<Scalars['LocalDateTime']['output']>;
  approvedBy3Position?: Maybe<Scalars['String']['output']>;
  approvedBy3Signature?: Maybe<Array<Maybe<Scalars['Byte']['output']>>>;
  approvedBy4?: Maybe<Scalars['UUID']['output']>;
  approvedBy4Date?: Maybe<Scalars['LocalDateTime']['output']>;
  approvedBy4Position?: Maybe<Scalars['String']['output']>;
  approvedBy4Signature?: Maybe<Array<Maybe<Scalars['Byte']['output']>>>;
  approvedByPosition?: Maybe<Scalars['String']['output']>;
  approvedDate?: Maybe<Scalars['LocalDateTime']['output']>;
  consignment?: Maybe<Scalars['Boolean']['output']>;
  created?: Maybe<Scalars['Instant']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  deliveryTerms?: Maybe<Scalars['String']['output']>;
  departmentFrom?: Maybe<Department>;
  departmentTo?: Maybe<Department>;
  etaDate?: Maybe<Scalars['LocalDateTime']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  isCompleted?: Maybe<Scalars['Boolean']['output']>;
  isFixedAsset?: Maybe<Scalars['Boolean']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  lastRevisionBy?: Maybe<Scalars['UUID']['output']>;
  lastRevisionDate?: Maybe<Scalars['LocalDateTime']['output']>;
  noPr?: Maybe<Scalars['Boolean']['output']>;
  paymentTerms?: Maybe<PaymentTerm>;
  poNumber?: Maybe<Scalars['String']['output']>;
  poSentNotes?: Maybe<Scalars['String']['output']>;
  poSentToSupplier?: Maybe<Scalars['Boolean']['output']>;
  prNos?: Maybe<Scalars['String']['output']>;
  preparedBy?: Maybe<Employee>;
  preparedBySignature?: Maybe<Array<Maybe<Scalars['Byte']['output']>>>;
  preparedDate?: Maybe<Scalars['LocalDateTime']['output']>;
  purchaseRequest?: Maybe<PurchaseRequest>;
  remarks?: Maybe<Scalars['String']['output']>;
  reviewdBy?: Maybe<Employee>;
  reviewedDate?: Maybe<Scalars['LocalDateTime']['output']>;
  revisionByHistory?: Maybe<Scalars['String']['output']>;
  revisionNote?: Maybe<Scalars['String']['output']>;
  revisionNumber?: Maybe<Scalars['Int']['output']>;
  sentBy?: Maybe<Employee>;
  sentDate?: Maybe<Scalars['LocalDateTime']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  supplier?: Maybe<Supplier>;
};

export type PurchaseOrderDto = {
  __typename?: 'PurchaseOrderDto';
  dept?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  itemCode?: Maybe<Scalars['String']['output']>;
  pkg?: Maybe<Scalars['String']['output']>;
  pkg_price?: Maybe<Scalars['String']['output']>;
  prNo?: Maybe<Scalars['String']['output']>;
  qty?: Maybe<Scalars['Int']['output']>;
  refItemId?: Maybe<Scalars['UUID']['output']>;
  totalAmount?: Maybe<Scalars['BigDecimal']['output']>;
};

export type PurchaseOrderInput = {
  approvedBy?: InputMaybe<EmployeeInput>;
  approvedBy2?: InputMaybe<Scalars['UUID']['input']>;
  approvedBy2Date?: InputMaybe<Scalars['LocalDateTime']['input']>;
  approvedBy2Position?: InputMaybe<Scalars['String']['input']>;
  approvedBy2Signature?: InputMaybe<Array<InputMaybe<Scalars['Byte']['input']>>>;
  approvedBy3?: InputMaybe<Scalars['UUID']['input']>;
  approvedBy3Date?: InputMaybe<Scalars['LocalDateTime']['input']>;
  approvedBy3Position?: InputMaybe<Scalars['String']['input']>;
  approvedBy3Signature?: InputMaybe<Array<InputMaybe<Scalars['Byte']['input']>>>;
  approvedBy4?: InputMaybe<Scalars['UUID']['input']>;
  approvedBy4Date?: InputMaybe<Scalars['LocalDateTime']['input']>;
  approvedBy4Position?: InputMaybe<Scalars['String']['input']>;
  approvedBy4Signature?: InputMaybe<Array<InputMaybe<Scalars['Byte']['input']>>>;
  approvedByPosition?: InputMaybe<Scalars['String']['input']>;
  approvedDate?: InputMaybe<Scalars['LocalDateTime']['input']>;
  consignment?: InputMaybe<Scalars['Boolean']['input']>;
  deliveryTerms?: InputMaybe<Scalars['String']['input']>;
  departmentFrom?: InputMaybe<DepartmentInput>;
  departmentTo?: InputMaybe<DepartmentInput>;
  etaDate?: InputMaybe<Scalars['LocalDateTime']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  isCompleted?: InputMaybe<Scalars['Boolean']['input']>;
  isFixedAsset?: InputMaybe<Scalars['Boolean']['input']>;
  lastRevisionBy?: InputMaybe<Scalars['UUID']['input']>;
  lastRevisionDate?: InputMaybe<Scalars['LocalDateTime']['input']>;
  noPr?: InputMaybe<Scalars['Boolean']['input']>;
  paymentTerms?: InputMaybe<PaymentTermInput>;
  poNumber?: InputMaybe<Scalars['String']['input']>;
  poSentNotes?: InputMaybe<Scalars['String']['input']>;
  poSentToSupplier?: InputMaybe<Scalars['Boolean']['input']>;
  prNos?: InputMaybe<Scalars['String']['input']>;
  preparedBy?: InputMaybe<EmployeeInput>;
  preparedBySignature?: InputMaybe<Array<InputMaybe<Scalars['Byte']['input']>>>;
  preparedDate?: InputMaybe<Scalars['LocalDateTime']['input']>;
  purchaseRequest?: InputMaybe<PurchaseRequestInput>;
  remarks?: InputMaybe<Scalars['String']['input']>;
  reviewdBy?: InputMaybe<EmployeeInput>;
  reviewedDate?: InputMaybe<Scalars['LocalDateTime']['input']>;
  revisionByHistory?: InputMaybe<Scalars['String']['input']>;
  revisionNote?: InputMaybe<Scalars['String']['input']>;
  revisionNumber?: InputMaybe<Scalars['Int']['input']>;
  sentBy?: InputMaybe<EmployeeInput>;
  sentDate?: InputMaybe<Scalars['LocalDateTime']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  supplier?: InputMaybe<SupplierInput>;
};

export type PurchaseOrderItems = {
  __typename?: 'PurchaseOrderItems';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  dateCompleted?: Maybe<Scalars['LocalDateTime']['output']>;
  delBalance?: Maybe<Scalars['Int']['output']>;
  delQty?: Maybe<Scalars['Int']['output']>;
  deliveredQty?: Maybe<Scalars['Int']['output']>;
  deliveryBalance?: Maybe<Scalars['Int']['output']>;
  deliveryStatus?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  item?: Maybe<Item>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  prNos?: Maybe<Scalars['String']['output']>;
  purchaseOrder?: Maybe<PurchaseOrder>;
  qtyInSmall?: Maybe<Scalars['Int']['output']>;
  quantity?: Maybe<Scalars['Int']['output']>;
  receivingReport?: Maybe<ReceivingReport>;
  supplierLastPrice?: Maybe<Scalars['BigDecimal']['output']>;
  type?: Maybe<Scalars['String']['output']>;
  type_text?: Maybe<Scalars['String']['output']>;
  unitMeasure?: Maybe<Scalars['Int']['output']>;
  unitMeasurement?: Maybe<Scalars['String']['output']>;
  uou?: Maybe<Scalars['String']['output']>;
};

export type PurchaseOrderItemsInput = {
  dateCompleted?: InputMaybe<Scalars['LocalDateTime']['input']>;
  deliveredQty?: InputMaybe<Scalars['Int']['input']>;
  deliveryBalance?: InputMaybe<Scalars['Int']['input']>;
  deliveryStatus?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  item?: InputMaybe<ItemInput>;
  prNos?: InputMaybe<Scalars['String']['input']>;
  purchaseOrder?: InputMaybe<PurchaseOrderInput>;
  qtyInSmall?: InputMaybe<Scalars['Int']['input']>;
  quantity?: InputMaybe<Scalars['Int']['input']>;
  receivingReport?: InputMaybe<ReceivingReportInput>;
  supplierLastPrice?: InputMaybe<Scalars['BigDecimal']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  type_text?: InputMaybe<Scalars['String']['input']>;
  unitMeasure?: InputMaybe<Scalars['Int']['input']>;
};

export type PurchaseRequest = {
  __typename?: 'PurchaseRequest';
  approver?: Maybe<Scalars['UUID']['output']>;
  approverFullname?: Maybe<Scalars['String']['output']>;
  asset?: Maybe<Scalars['Boolean']['output']>;
  consignment?: Maybe<Scalars['Boolean']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  isApprove?: Maybe<Scalars['Boolean']['output']>;
  isPoCreated?: Maybe<Scalars['Boolean']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  prDateNeeded?: Maybe<Scalars['Instant']['output']>;
  prDateRequested?: Maybe<Scalars['Instant']['output']>;
  prNo?: Maybe<Scalars['String']['output']>;
  prType?: Maybe<Scalars['String']['output']>;
  requestedDepartment?: Maybe<Department>;
  requestingDepartment?: Maybe<Department>;
  status?: Maybe<Scalars['String']['output']>;
  supplier?: Maybe<Supplier>;
  userFullname?: Maybe<Scalars['String']['output']>;
  userId?: Maybe<Scalars['UUID']['output']>;
};

export type PurchaseRequestInput = {
  approver?: InputMaybe<Scalars['UUID']['input']>;
  approverFullname?: InputMaybe<Scalars['String']['input']>;
  asset?: InputMaybe<Scalars['Boolean']['input']>;
  consignment?: InputMaybe<Scalars['Boolean']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  isApprove?: InputMaybe<Scalars['Boolean']['input']>;
  isPoCreated?: InputMaybe<Scalars['Boolean']['input']>;
  prDateNeeded?: InputMaybe<Scalars['Instant']['input']>;
  prDateRequested?: InputMaybe<Scalars['Instant']['input']>;
  prNo?: InputMaybe<Scalars['String']['input']>;
  prType?: InputMaybe<Scalars['String']['input']>;
  requestedDepartment?: InputMaybe<DepartmentInput>;
  requestingDepartment?: InputMaybe<DepartmentInput>;
  status?: InputMaybe<Scalars['String']['input']>;
  supplier?: InputMaybe<SupplierInput>;
  userFullname?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['UUID']['input']>;
};

export type PurchaseRequestItem = {
  __typename?: 'PurchaseRequestItem';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  deals?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  item?: Maybe<Item>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  lastUnitPrice?: Maybe<Scalars['BigDecimal']['output']>;
  onHandQty?: Maybe<Scalars['Int']['output']>;
  purchaseRequest?: Maybe<PurchaseRequest>;
  refPo?: Maybe<PurchaseOrder>;
  refSupItemId?: Maybe<Scalars['UUID']['output']>;
  remarks?: Maybe<Scalars['String']['output']>;
  requestedQty?: Maybe<Scalars['Int']['output']>;
  total?: Maybe<Scalars['BigDecimal']['output']>;
  unitCost?: Maybe<Scalars['BigDecimal']['output']>;
  unitMeasurement?: Maybe<Scalars['String']['output']>;
};

export type PurchaseRequestItemInput = {
  deals?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  item?: InputMaybe<ItemInput>;
  lastUnitPrice?: InputMaybe<Scalars['BigDecimal']['input']>;
  onHandQty?: InputMaybe<Scalars['Int']['input']>;
  purchaseRequest?: InputMaybe<PurchaseRequestInput>;
  refPo?: InputMaybe<PurchaseOrderInput>;
  refSupItemId?: InputMaybe<Scalars['UUID']['input']>;
  remarks?: InputMaybe<Scalars['String']['input']>;
  requestedQty?: InputMaybe<Scalars['Int']['input']>;
  total?: InputMaybe<Scalars['BigDecimal']['input']>;
  unitCost?: InputMaybe<Scalars['BigDecimal']['input']>;
};

export type QualityManagementType = {
  __typename?: 'QualityManagementType';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  title?: Maybe<Scalars['String']['output']>;
};

export type QuantityAdjustment = {
  __typename?: 'QuantityAdjustment';
  accountingCategory?: Maybe<AccountingCategory>;
  adj_1?: Maybe<Scalars['BigDecimal']['output']>;
  adj_2?: Maybe<Scalars['BigDecimal']['output']>;
  adj_3?: Maybe<Scalars['BigDecimal']['output']>;
  adj_4?: Maybe<Scalars['BigDecimal']['output']>;
  adj_5?: Maybe<Scalars['BigDecimal']['output']>;
  adj_6?: Maybe<Scalars['BigDecimal']['output']>;
  adj_7?: Maybe<Scalars['BigDecimal']['output']>;
  adj_8?: Maybe<Scalars['BigDecimal']['output']>;
  adj_9?: Maybe<Scalars['BigDecimal']['output']>;
  adj_10?: Maybe<Scalars['BigDecimal']['output']>;
  adj_11?: Maybe<Scalars['BigDecimal']['output']>;
  adj_12?: Maybe<Scalars['BigDecimal']['output']>;
  adj_13?: Maybe<Scalars['BigDecimal']['output']>;
  adj_14?: Maybe<Scalars['BigDecimal']['output']>;
  adj_15?: Maybe<Scalars['BigDecimal']['output']>;
  adj_16?: Maybe<Scalars['BigDecimal']['output']>;
  adj_17?: Maybe<Scalars['BigDecimal']['output']>;
  adj_18?: Maybe<Scalars['BigDecimal']['output']>;
  adj_19?: Maybe<Scalars['BigDecimal']['output']>;
  adj_20?: Maybe<Scalars['BigDecimal']['output']>;
  adj_21?: Maybe<Scalars['BigDecimal']['output']>;
  adj_22?: Maybe<Scalars['BigDecimal']['output']>;
  adj_23?: Maybe<Scalars['BigDecimal']['output']>;
  adj_24?: Maybe<Scalars['BigDecimal']['output']>;
  adj_25?: Maybe<Scalars['BigDecimal']['output']>;
  adj_26?: Maybe<Scalars['BigDecimal']['output']>;
  adj_27?: Maybe<Scalars['BigDecimal']['output']>;
  adj_28?: Maybe<Scalars['BigDecimal']['output']>;
  adj_29?: Maybe<Scalars['BigDecimal']['output']>;
  adj_30?: Maybe<Scalars['BigDecimal']['output']>;
  adj_31?: Maybe<Scalars['BigDecimal']['output']>;
  adj_32?: Maybe<Scalars['BigDecimal']['output']>;
  adj_33?: Maybe<Scalars['BigDecimal']['output']>;
  adj_34?: Maybe<Scalars['BigDecimal']['output']>;
  adj_35?: Maybe<Scalars['BigDecimal']['output']>;
  adj_36?: Maybe<Scalars['BigDecimal']['output']>;
  adj_37?: Maybe<Scalars['BigDecimal']['output']>;
  adj_38?: Maybe<Scalars['BigDecimal']['output']>;
  adj_39?: Maybe<Scalars['BigDecimal']['output']>;
  adj_40?: Maybe<Scalars['BigDecimal']['output']>;
  adj_41?: Maybe<Scalars['BigDecimal']['output']>;
  adj_42?: Maybe<Scalars['BigDecimal']['output']>;
  adj_43?: Maybe<Scalars['BigDecimal']['output']>;
  adj_44?: Maybe<Scalars['BigDecimal']['output']>;
  adj_45?: Maybe<Scalars['BigDecimal']['output']>;
  adj_46?: Maybe<Scalars['BigDecimal']['output']>;
  adj_47?: Maybe<Scalars['BigDecimal']['output']>;
  adj_48?: Maybe<Scalars['BigDecimal']['output']>;
  adj_49?: Maybe<Scalars['BigDecimal']['output']>;
  adj_50?: Maybe<Scalars['BigDecimal']['output']>;
  adj_51?: Maybe<Scalars['BigDecimal']['output']>;
  adj_52?: Maybe<Scalars['BigDecimal']['output']>;
  adj_53?: Maybe<Scalars['BigDecimal']['output']>;
  adj_54?: Maybe<Scalars['BigDecimal']['output']>;
  adj_55?: Maybe<Scalars['BigDecimal']['output']>;
  adj_56?: Maybe<Scalars['BigDecimal']['output']>;
  adj_57?: Maybe<Scalars['BigDecimal']['output']>;
  adj_58?: Maybe<Scalars['BigDecimal']['output']>;
  adj_59?: Maybe<Scalars['BigDecimal']['output']>;
  adj_60?: Maybe<Scalars['BigDecimal']['output']>;
  adj_61?: Maybe<Scalars['BigDecimal']['output']>;
  adj_62?: Maybe<Scalars['BigDecimal']['output']>;
  adj_63?: Maybe<Scalars['BigDecimal']['output']>;
  adj_64?: Maybe<Scalars['BigDecimal']['output']>;
  adj_65?: Maybe<Scalars['BigDecimal']['output']>;
  adj_66?: Maybe<Scalars['BigDecimal']['output']>;
  adj_67?: Maybe<Scalars['BigDecimal']['output']>;
  adj_68?: Maybe<Scalars['BigDecimal']['output']>;
  adj_69?: Maybe<Scalars['BigDecimal']['output']>;
  adj_70?: Maybe<Scalars['BigDecimal']['output']>;
  adj_71?: Maybe<Scalars['BigDecimal']['output']>;
  adj_72?: Maybe<Scalars['BigDecimal']['output']>;
  adj_73?: Maybe<Scalars['BigDecimal']['output']>;
  adj_74?: Maybe<Scalars['BigDecimal']['output']>;
  adj_75?: Maybe<Scalars['BigDecimal']['output']>;
  adj_76?: Maybe<Scalars['BigDecimal']['output']>;
  adj_77?: Maybe<Scalars['BigDecimal']['output']>;
  adj_78?: Maybe<Scalars['BigDecimal']['output']>;
  adj_79?: Maybe<Scalars['BigDecimal']['output']>;
  adj_80?: Maybe<Scalars['BigDecimal']['output']>;
  adj_81?: Maybe<Scalars['BigDecimal']['output']>;
  adj_82?: Maybe<Scalars['BigDecimal']['output']>;
  adj_83?: Maybe<Scalars['BigDecimal']['output']>;
  adj_84?: Maybe<Scalars['BigDecimal']['output']>;
  adj_85?: Maybe<Scalars['BigDecimal']['output']>;
  adj_86?: Maybe<Scalars['BigDecimal']['output']>;
  adj_87?: Maybe<Scalars['BigDecimal']['output']>;
  adj_88?: Maybe<Scalars['BigDecimal']['output']>;
  adj_89?: Maybe<Scalars['BigDecimal']['output']>;
  adj_90?: Maybe<Scalars['BigDecimal']['output']>;
  adj_91?: Maybe<Scalars['BigDecimal']['output']>;
  adj_92?: Maybe<Scalars['BigDecimal']['output']>;
  adj_93?: Maybe<Scalars['BigDecimal']['output']>;
  adj_94?: Maybe<Scalars['BigDecimal']['output']>;
  adj_95?: Maybe<Scalars['BigDecimal']['output']>;
  adj_96?: Maybe<Scalars['BigDecimal']['output']>;
  adj_97?: Maybe<Scalars['BigDecimal']['output']>;
  adj_98?: Maybe<Scalars['BigDecimal']['output']>;
  adj_99?: Maybe<Scalars['BigDecimal']['output']>;
  adj_100?: Maybe<Scalars['BigDecimal']['output']>;
  asset_a?: Maybe<Scalars['BigDecimal']['output']>;
  asset_b?: Maybe<Scalars['BigDecimal']['output']>;
  asset_c?: Maybe<Scalars['BigDecimal']['output']>;
  asset_d?: Maybe<Scalars['BigDecimal']['output']>;
  asset_e?: Maybe<Scalars['BigDecimal']['output']>;
  asset_f?: Maybe<Scalars['BigDecimal']['output']>;
  asset_g?: Maybe<Scalars['BigDecimal']['output']>;
  asset_h?: Maybe<Scalars['BigDecimal']['output']>;
  asset_i?: Maybe<Scalars['BigDecimal']['output']>;
  asset_j?: Maybe<Scalars['BigDecimal']['output']>;
  asset_k?: Maybe<Scalars['BigDecimal']['output']>;
  asset_l?: Maybe<Scalars['BigDecimal']['output']>;
  asset_m?: Maybe<Scalars['BigDecimal']['output']>;
  asset_n?: Maybe<Scalars['BigDecimal']['output']>;
  asset_o?: Maybe<Scalars['BigDecimal']['output']>;
  asset_p?: Maybe<Scalars['BigDecimal']['output']>;
  asset_q?: Maybe<Scalars['BigDecimal']['output']>;
  asset_r?: Maybe<Scalars['BigDecimal']['output']>;
  asset_s?: Maybe<Scalars['BigDecimal']['output']>;
  asset_t?: Maybe<Scalars['BigDecimal']['output']>;
  asset_u?: Maybe<Scalars['BigDecimal']['output']>;
  asset_v?: Maybe<Scalars['BigDecimal']['output']>;
  asset_w?: Maybe<Scalars['BigDecimal']['output']>;
  asset_x?: Maybe<Scalars['BigDecimal']['output']>;
  asset_y?: Maybe<Scalars['BigDecimal']['output']>;
  asset_z?: Maybe<Scalars['BigDecimal']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  dateTrans?: Maybe<Scalars['Instant']['output']>;
  department?: Maybe<Department>;
  details?: Maybe<Scalars['Map_String_StringScalar']['output']>;
  domain?: Maybe<Scalars['String']['output']>;
  flagValue?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  isCancel?: Maybe<Scalars['Boolean']['output']>;
  isPosted?: Maybe<Scalars['Boolean']['output']>;
  item?: Maybe<Item>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  postedBy?: Maybe<Scalars['String']['output']>;
  postedLedger?: Maybe<Scalars['UUID']['output']>;
  quantity?: Maybe<Scalars['Int']['output']>;
  quantityAdjustmentType?: Maybe<QuantityAdjustmentType>;
  refNum?: Maybe<Scalars['String']['output']>;
  remarks?: Maybe<Scalars['String']['output']>;
  unit_cost?: Maybe<Scalars['BigDecimal']['output']>;
  uou?: Maybe<Scalars['String']['output']>;
};

export type QuantityAdjustmentType = {
  __typename?: 'QuantityAdjustmentType';
  code?: Maybe<Scalars['String']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  flagValue?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  is_active?: Maybe<Scalars['Boolean']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  reverse?: Maybe<Scalars['Boolean']['output']>;
  sourceValue?: Maybe<Scalars['String']['output']>;
};

/** Query root */
export type Query = {
  __typename?: 'Query';
  AccReceivableItemForPhic?: Maybe<Page_ReceivablesItems>;
  AccReceivableItemPerGuarantorList?: Maybe<Page_ReceivablesItems>;
  /** Ancillary Notes by OrderSlipItem */
  AncillaryByOrderSlipItem?: Maybe<Array<Maybe<AncillaryNote>>>;
  /** Ancillary notes */
  AncillaryNotes?: Maybe<Array<Maybe<AncillaryNote>>>;
  BillingSchedulePerGroupGuarantor?: Maybe<Page_BillingSchedule>;
  /** get ER consultation */
  ErConsultation?: Maybe<Array<Maybe<ErConsultationDto>>>;
  /** opd consultation report */
  ErdConsultationV2?: Maybe<Array<Maybe<ErdConsultation2Dto>>>;
  IncomeStatementByFormat?: Maybe<Array<Maybe<IncomeStatementFormat>>>;
  /** Get Active Config */
  IntegrationConfig?: Maybe<Array<Maybe<IntegrationConfig>>>;
  /** List of item expense */
  ItemExpense?: Maybe<Array<Maybe<DepartmentStockIssueItems>>>;
  /** List of item issue */
  ItemIssue?: Maybe<Array<Maybe<DepartmentStockIssueItems>>>;
  /** opd consultation report */
  OpdConsultation?: Maybe<Array<Maybe<OpdConsultationDto>>>;
  /** opd consultation report */
  OpdConsultationV2?: Maybe<Array<Maybe<OpdConsultation2Dto>>>;
  /** List of Departmental Request Incoming */
  RequestIncoming?: Maybe<Array<Maybe<DepartmentStockRequest>>>;
  /** List of Departmental Request Outgoing */
  RequestOutgoing?: Maybe<Array<Maybe<DepartmentStockRequest>>>;
  /** Get Service By Id */
  Service?: Maybe<Service>;
  /** List of Departmental Request items By Issue */
  StockIssueItemsById?: Maybe<Array<Maybe<DepartmentStockIssueItems>>>;
  /** List of Departmental Request items By Request */
  StockRequestItemsById?: Maybe<Array<Maybe<DepartmentStockRequestItem>>>;
  /** List of Departmental Request items By Stock Issue */
  StockRequestItemsByStockIssueId?: Maybe<Array<Maybe<DepartmentStockRequestItem>>>;
  /** Get All Orderslips */
  TestString?: Maybe<Scalars['String']['output']>;
  /** Get User by login */
  account?: Maybe<Employee>;
  accountBalancesById?: Maybe<AccountBalances>;
  /** List of charts of Accounts */
  accountBalancesCoaList?: Maybe<Array<Maybe<ChartOfAccountGenerate>>>;
  accountBalancesList?: Maybe<Array<Maybe<AccountBalances>>>;
  accountConfigById?: Maybe<AccountConfig>;
  /** transaction type by tag */
  accountConfigByTag?: Maybe<Array<Maybe<AccountConfig>>>;
  /** transaction type by tag */
  accountConfigByTypeId?: Maybe<Array<Maybe<AccountConfig>>>;
  /** Transaction List */
  accountConfigList?: Maybe<Array<Maybe<AccountConfig>>>;
  /** Account List by id */
  accountConfigParent?: Maybe<Array<Maybe<AccountList>>>;
  /** Account List */
  accountList?: Maybe<Array<Maybe<AccountList>>>;
  accountListById?: Maybe<AccountList>;
  /** List of ar */
  accountReceivable?: Maybe<AccountReceivable>;
  accountReceivableManual?: Maybe<Page_AccountReceivable>;
  accountReceivablePerCompany?: Maybe<Page_AccountReceivable>;
  accountReceivablePerGroupGuarantor?: Maybe<Page_AccountReceivable>;
  accountReceivablePerPersonalAccount?: Maybe<Page_AccountReceivable>;
  /** List of Accounting Category */
  accountingCategoryList?: Maybe<Array<Maybe<AccountingCategory>>>;
  /** List of Page Generics */
  accountingCategoryPage?: Maybe<Page_AccountingCategory>;
  /** List of Active Accounting Category */
  activeAccountingCategories?: Maybe<Array<Maybe<AccountingCategory>>>;
  /** Get all All Active billing record and still open */
  activeBillingList?: Maybe<Array<Maybe<Billing>>>;
  /** List of Active Items */
  activeItemsFilter?: Maybe<Array<Maybe<Item>>>;
  /** get doctor specialties */
  activeSpecialties?: Maybe<Array<Maybe<Specialty>>>;
  adjQuantityAccountView?: Maybe<Array<Maybe<JournalEntryViewDto>>>;
  /** Get Administration By Id */
  administration?: Maybe<Administration>;
  /** Get All Administration */
  administrations?: Maybe<Array<Maybe<Administration>>>;
  /** get admission config */
  admission_config?: Maybe<AdmissionConfiguration>;
  ageReceivableArByDate?: Maybe<ArTransaction>;
  agtDashboard?: Maybe<Array<Maybe<AppointmentSummary>>>;
  agtDashboardSummaryPerCurrentDate?: Maybe<Array<Maybe<AppointmentSummary>>>;
  agtPatientAll?: Maybe<Array<Maybe<AgtPatient>>>;
  agtPatientById?: Maybe<AgtPatient>;
  agtPatientPage?: Maybe<Page_AgtPatient>;
  /** Ancillary notes */
  allAncillaryNotes?: Maybe<Array<Maybe<AncillaryNote>>>;
  /** Get Results by PatientId */
  allAttachment?: Maybe<Array<Maybe<AttachmentDto>>>;
  allPurchaseRequestItems?: Maybe<Array<Maybe<PurchaseRequestItem>>>;
  /** List of Supplies */
  allSupplyItemsBySupplier?: Maybe<Array<Maybe<SupplierItem>>>;
  apAccountView?: Maybe<Array<Maybe<JournalEntryViewDto>>>;
  apAgingDetailed?: Maybe<Array<Maybe<ApAgingDetailedDto>>>;
  apAgingSummary?: Maybe<Array<Maybe<ApAgingSummaryDto>>>;
  apAppByDis?: Maybe<Array<Maybe<DisbursementAp>>>;
  apApplicationById?: Maybe<DisbursementAp>;
  apByDis?: Maybe<Array<Maybe<DisbursementAp>>>;
  apById?: Maybe<AccountsPayable>;
  apDebitMemo?: Maybe<Array<Maybe<DisbursementAp>>>;
  apDetailsById?: Maybe<AccountsPayableDetails>;
  apLedger?: Maybe<Array<Maybe<ApLedgerDto>>>;
  apLedgerById?: Maybe<ApLedger>;
  /** Find Ap Ledger Include */
  apLedgerByRef?: Maybe<ApLedger>;
  /** Find Ap Transaction Active */
  apLedgerBySupplier?: Maybe<Array<Maybe<ApLedger>>>;
  /** Transaction List */
  apLedgerFilter?: Maybe<Array<Maybe<ApLedger>>>;
  /** Find Ap Ledger Include */
  apLedgerInclude?: Maybe<Array<Maybe<ApLedger>>>;
  /** List of AP Pageable By Supplier */
  apListBySupplierFilter?: Maybe<Page_AccountsPayable>;
  /** List of AP Pageable */
  apListFilter?: Maybe<Page_AccountsPayable>;
  /** Find Ap posted */
  apListPosted?: Maybe<Array<Maybe<AccountsPayable>>>;
  apReadersFeeById?: Maybe<ApReadersFee>;
  /** List of AP Readers Fee */
  apReadersFeeList?: Maybe<Page_ApReadersFee>;
  /** List of AP Readers Fee */
  apReadersList?: Maybe<Array<Maybe<ApReadersFee>>>;
  apReapplication?: Maybe<Array<Maybe<DisbursementAp>>>;
  /** Find Ap Transaction Active */
  apTransactionActive?: Maybe<Array<Maybe<ApTransaction>>>;
  apTransactionById?: Maybe<ApTransaction>;
  /** Find Ap Transaction Active */
  apTransactionByType?: Maybe<Array<Maybe<ApTransaction>>>;
  /** Transaction List */
  apTransactionList?: Maybe<Array<Maybe<ApTransaction>>>;
  /** Find Ap Transaction Active */
  apTransactionOthers?: Maybe<Array<Maybe<ApTransaction>>>;
  appointmentAll?: Maybe<Array<Maybe<Appointment>>>;
  appointmentByID?: Maybe<Appointment>;
  appointmentByPatient?: Maybe<Array<Maybe<Appointment>>>;
  appointmentByStatus?: Maybe<Array<Maybe<Appointment>>>;
  appointmentCheck?: Maybe<GraphQlRetValAppointment_Boolean>;
  appointmentPage?: Maybe<Page_Appointment>;
  appointmentPageByPatient?: Maybe<Page_Appointment>;
  arInvoiceItemUUIDList?: Maybe<Array<Maybe<Scalars['UUID']['output']>>>;
  arLedgerSave?: Maybe<Scalars['ObjectScalar']['output']>;
  /** Get all Authorities */
  authorities?: Maybe<Array<Maybe<Authority>>>;
  /** Get all available Rooms */
  availableRooms?: Maybe<Array<Maybe<Room>>>;
  /** Get all available Rooms by Department */
  availableRoomsByDepartment?: Maybe<Array<Maybe<Room>>>;
  balances?: Maybe<Array<Maybe<Balances>>>;
  bankById?: Maybe<Bank>;
  bankList?: Maybe<Array<Maybe<Bank>>>;
  banks?: Maybe<Page_Bank>;
  /** Search all barangays */
  barangays?: Maybe<Array<Maybe<Barangay>>>;
  begById?: Maybe<BeginningTransaction>;
  begDetailsById?: Maybe<Array<Maybe<BeginningDetails>>>;
  beginningItemsList?: Maybe<Array<Maybe<BeginningItem>>>;
  beginningItemsPageable?: Maybe<Page_BeginningItem>;
  /** List of Beginning Balance by Item */
  beginningListByItem?: Maybe<Array<Maybe<BeginningBalance>>>;
  beginningTransPage?: Maybe<Page_BeginningTransaction>;
  billingById?: Maybe<Billing>;
  billingByPatient?: Maybe<Array<Maybe<Billing>>>;
  billingChargeBarcode?: Maybe<BillingBarcodeDto>;
  billingDeductions?: Maybe<BillingDeductionSummaryPage>;
  billingDeductionsNativeQuery?: Maybe<Array<Maybe<BillingDeductionSummary>>>;
  billingItemById?: Maybe<BillingItem>;
  billingItemByTypes?: Maybe<Page_BillingItem>;
  billingItemWithBSchNativeQuery?: Maybe<BillingItemWithBsDtoPage>;
  billingItems?: Maybe<Page_BillingItem>;
  billingItemsAll?: Maybe<Array<Maybe<BillingItem>>>;
  billingItemsByBill?: Maybe<Array<Maybe<BillingItem>>>;
  billingItemsClaims?: Maybe<Page_BillingItem>;
  billingItemsDeductions?: Maybe<Page_BillingItem>;
  billingItemsDetails?: Maybe<Scalars['Map_String_StringScalar']['output']>;
  billingItemsEligibleForMiscGrouping?: Maybe<Array<Maybe<BillingItem>>>;
  billingScheduleItemsPerCompanyById?: Maybe<Page_BillingScheduleItems>;
  billingScheduleItemsPerParent?: Maybe<Array<Maybe<BillingScheduleItems>>>;
  billingSchedulePerCompany?: Maybe<Page_BillingSchedule>;
  billingServices?: Maybe<Page_Service>;
  billingSnapshotHistory?: Maybe<Array<Maybe<Hisd3EntityVersionInfoHistory>>>;
  bsPhilClaimsAll?: Maybe<Array<Maybe<BsPhilClaims>>>;
  bsPhilClaimsPageable?: Maybe<Page_BsPhilClaims>;
  /** Get Case By Id */
  case?: Maybe<Case>;
  casePhotosByCase?: Maybe<Array<Maybe<FileAttachment>>>;
  case_by_patient_list_pageable?: Maybe<Page_Case>;
  case_by_patient_pageable?: Maybe<Page_Case>;
  /** Get all o2_administrations by case */
  case_o2_administrations?: Maybe<Array<Maybe<O2Administration>>>;
  /** Get all Cases */
  cases?: Maybe<Array<Maybe<Case>>>;
  cashierTerminal?: Maybe<CashierTerminal>;
  cashierTerminals?: Maybe<Page_CashierTerminal>;
  cashierTerminalsById?: Maybe<CashierTerminal>;
  /** Get CathLab Nurse Note By Id */
  cathlabNurseNote?: Maybe<CathLabNote>;
  /** Get Transfers by Date range */
  census?: Maybe<Array<Maybe<Transfer>>>;
  checkARItemExist?: Maybe<BsPhilClaimsItems>;
  checkAppByPatientSchedule?: Maybe<Scalars['Long']['output']>;
  checkBalancesByPO?: Maybe<Array<Maybe<PoItemMonitoring>>>;
  checkClaimsExist?: Maybe<BsPhilClaims>;
  /** Check Doctor Accreditation Validation */
  checkDrAccredValidation?: Maybe<Scalars['ObjectScalar']['output']>;
  checkIfARItemIdExist?: Maybe<Scalars['Boolean']['output']>;
  /** Get medication if it exists */
  checkMedicationIfExist?: Maybe<Scalars['Boolean']['output']>;
  checkPatientDuplicate?: Maybe<Scalars['Int']['output']>;
  /** Filter Checks */
  checksFilter?: Maybe<Page_DisbursementCheck>;
  cheqEncashmentByOneShiftId?: Maybe<Array<Maybe<ChequeEncashment>>>;
  cheqEncashmentByShiftId?: Maybe<Array<Maybe<ChequeEncashment>>>;
  cheqEncashmentTransPageable?: Maybe<Page_ChequeEncashment>;
  /** Search all cities */
  cities?: Maybe<Array<Maybe<City>>>;
  claim?: Maybe<Claim>;
  claimItems?: Maybe<Array<Maybe<ClaimItem>>>;
  claimItemsByClaimPageable?: Maybe<Page_ClaimItem>;
  claimsPageable?: Maybe<Page_Claim>;
  /** List of charts of Accounts */
  coaList?: Maybe<Array<Maybe<ChartOfAccount>>>;
  collectionDeposit?: Maybe<Page_CollectionDeposit>;
  collectionDepositById?: Maybe<CollectionDeposit>;
  collectionDepositRecordById?: Maybe<CollectionDepositBreakDown>;
  collectionDetailById?: Maybe<CollectionDetail>;
  /** Get combined Medication Administrations */
  combinedMedicationAdministrations?: Maybe<Array<Maybe<AdministrationDto>>>;
  /** get list of comlogik medicines */
  comlogik_medicines?: Maybe<Array<Maybe<ComlogikMedicineDto>>>;
  comlogik_refId?: Maybe<Scalars['ObjectScalar']['output']>;
  comlogik_settings?: Maybe<Array<Maybe<ComlogikSetting>>>;
  /** Get Companion Diet List */
  companionDietsList?: Maybe<Array<Maybe<DietList>>>;
  companyAccountById?: Maybe<CompanyAccount>;
  companyAccounts?: Maybe<Page_CompanyAccount>;
  companyTypeById?: Maybe<CompanyType>;
  companyTypes?: Maybe<Page_CompanyType>;
  /** config List */
  configAllList?: Maybe<Array<Maybe<AppointmentConfig>>>;
  configById?: Maybe<AppointmentConfig>;
  configListPage?: Maybe<Page_AppointmentConfig>;
  /** config List */
  configTimeActive?: Maybe<Array<Maybe<AppointmentConfig>>>;
  /** list of all constants */
  constants?: Maybe<Array<Maybe<Constant>>>;
  /** list of all constants */
  constantsById?: Maybe<Array<Maybe<Constant>>>;
  /** list of all constants */
  constantsByName?: Maybe<Array<Maybe<Constant>>>;
  /** Get Constants by type */
  constantsByType?: Maybe<Array<Maybe<Constant>>>;
  /** list of all constants types */
  constants_types?: Maybe<Array<Maybe<ConstantType>>>;
  countEmpByPosition?: Maybe<Array<Maybe<Scalars['Map_String_ObjectScalar']['output']>>>;
  countEmpByPositionOthers?: Maybe<Array<Maybe<Scalars['Map_String_ObjectScalar']['output']>>>;
  countEmpByPositionV2?: Maybe<Array<Maybe<PositionCountDto>>>;
  countEmpByPositionV2_OLD?: Maybe<Array<Maybe<PositionCountDto>>>;
  countPatient?: Maybe<Scalars['Long']['output']>;
  countPhysicalItems?: Maybe<Scalars['Long']['output']>;
  count_all_death_by_type?: Maybe<Array<Maybe<Scalars['Map_String_ObjectScalar']['output']>>>;
  count_all_surgical_procedure?: Maybe<Array<Maybe<Scalars['Map_String_ObjectScalar']['output']>>>;
  count_all_testing?: Maybe<Array<Maybe<DohTestingDto>>>;
  count_cases_by_discharge_disposition?: Maybe<Array<Maybe<TransfersCountDto>>>;
  count_cases_by_registry_type?: Maybe<Array<Maybe<EmergencyVisitsDto>>>;
  count_confirmed_dengue_cases?: Maybe<Array<Maybe<DengueConfirmedCasesDto>>>;
  count_deaths?: Maybe<TotalDeathsDto>;
  count_deaths_by_registry?: Maybe<Array<Maybe<EmergencyVisitsDto>>>;
  count_deaths_v2?: Maybe<Array<Maybe<Scalars['Map_String_ObjectScalar']['output']>>>;
  count_deaths_v3?: Maybe<DohDeathsPageDto>;
  count_deliveries?: Maybe<Array<Maybe<Scalars['Map_String_ObjectScalar']['output']>>>;
  count_discharges?: Maybe<Array<Maybe<Scalars['Map_String_ObjectScalar']['output']>>>;
  count_doa?: Maybe<Scalars['Int']['output']>;
  count_inpt_care?: Maybe<Array<Maybe<Scalars['Map_String_ObjectScalar']['output']>>>;
  count_patient_reports?: Maybe<Array<Maybe<Scalars['Map_String_ObjectScalar']['output']>>>;
  counters?: Maybe<Array<Maybe<Counter>>>;
  /** Search all countries */
  countries?: Maybe<Array<Maybe<Country>>>;
  /** Search all countries */
  countriesFilter?: Maybe<Array<Maybe<Country>>>;
  createChequeEncasmentJournalEntry?: Maybe<HeaderLedger>;
  creditArLedgerFromAr?: Maybe<Scalars['ObjectScalar']['output']>;
  creditArLedgerPerAr?: Maybe<Scalars['ObjectScalar']['output']>;
  creditNoteItemUUIDList?: Maybe<Array<Maybe<Scalars['UUID']['output']>>>;
  customerBalance?: Maybe<Scalars['BigDecimal']['output']>;
  customerRemainingBalance?: Maybe<ArTransactionLedgerRemainingBalanceDto>;
  debitArLedgerFromAr?: Maybe<Scalars['ObjectScalar']['output']>;
  debitArLedgerPerAr?: Maybe<Scalars['ObjectScalar']['output']>;
  debitMemoById?: Maybe<DebitMemo>;
  /** List of DM Pageable */
  debitMemoFilter?: Maybe<Page_DebitMemo>;
  deductionsTable?: Maybe<DeductionsTableData>;
  /** Get all Purchasing Department */
  defaultClearingDepartments?: Maybe<Array<Maybe<Department>>>;
  depIssuanceById?: Maybe<DepartmentStockIssue>;
  /** List of Department By Item */
  depListByItem?: Maybe<Array<Maybe<DepartmentItem>>>;
  /** Departmental Request */
  depRequestById?: Maybe<DepartmentStockRequest>;
  /** Get Department By Id */
  department?: Maybe<Department>;
  /** Get Department By Id */
  departmentPage?: Maybe<Page_Department>;
  /** List of Departmental Stock Issue By Department */
  departmentStockIssueByDep?: Maybe<Array<Maybe<DepartmentStockIssue>>>;
  /** List of Departmental Request Items */
  departmentStockIssueItems?: Maybe<Array<Maybe<DepartmentStockIssueItems>>>;
  /** List of Departmental Stock Issue */
  departmentStockIssueList?: Maybe<Array<Maybe<DepartmentStockIssue>>>;
  /** List of Departmental Request */
  departmentStockRequest?: Maybe<Array<Maybe<DepartmentStockRequest>>>;
  /** List of Departmental Request Items */
  departmentStockRequestItems?: Maybe<Array<Maybe<DepartmentStockRequestItem>>>;
  /** Get All Departments */
  departments?: Maybe<Array<Maybe<Department>>>;
  /** Get Departments by filter */
  departmentsByFilter?: Maybe<Array<Maybe<Department>>>;
  /** Get Departments with diagnostics */
  departmentsWithDiagnostics?: Maybe<Array<Maybe<Department>>>;
  /** Get Departments with Rooms */
  departmentsWithRooms?: Maybe<Array<Maybe<Department>>>;
  /** Find Ap posted */
  detailsByAp?: Maybe<Array<Maybe<AccountsPayableDetails>>>;
  /** Get All Diagnostics Results */
  diagnosticResults?: Maybe<Array<Maybe<DiagnosticResult>>>;
  /** Get All Diets */
  diets?: Maybe<Array<Maybe<Diet>>>;
  /** Get All Diets List */
  dietsList?: Maybe<Array<Maybe<DietList>>>;
  disAccountView?: Maybe<Array<Maybe<JournalEntryViewDto>>>;
  disCheckById?: Maybe<DisbursementCheck>;
  /** Find DisbursementCheck by Parent */
  disCheckByParent?: Maybe<Array<Maybe<DisbursementCheck>>>;
  disExpById?: Maybe<DisbursementExpense>;
  /** Find DisbursementExpense by Parent */
  disExpByParent?: Maybe<Array<Maybe<DisbursementExpense>>>;
  disWtxById?: Maybe<DisbursementWtx>;
  /** Find DisbursementWtx by Parent */
  disWtxByParent?: Maybe<Array<Maybe<DisbursementWtx>>>;
  disbursementById?: Maybe<Disbursement>;
  /** List of Disbursement Pageable */
  disbursementFilter?: Maybe<Page_Disbursement>;
  /** List of AP Pageable By Supplier */
  disbursementFilterPosted?: Maybe<Page_Disbursement>;
  /** Get DischargeClearance By Id */
  dischargeClearance?: Maybe<DischargeClearance>;
  /** Get all DischargeClearance */
  dischargeClearances?: Maybe<Array<Maybe<DischargeClearance>>>;
  /** Get all DischargeClearance by Case Id */
  dischargeClearancesByCase?: Maybe<Array<Maybe<DischargeClearance>>>;
  discharge_report?: Maybe<GraphQlRetVal_Page_Case>;
  discountById?: Maybe<Discount>;
  discounts?: Maybe<Page_Discount>;
  dmAccountView?: Maybe<Array<Maybe<JournalEntryViewDto>>>;
  dmDetailsById?: Maybe<DebitMemoDetails>;
  dmDetials?: Maybe<Array<Maybe<DebitMemoDetails>>>;
  /** Get DoctorNote By Id */
  doctorNote?: Maybe<DoctorNote>;
  doctorNotesByCasePageable?: Maybe<Page_DoctorNote>;
  /** Get DoctorOrder By Id */
  doctorOrder?: Maybe<DoctorOrder>;
  /** Get doctor's orders by case */
  doctorOrderByCase?: Maybe<Array<Maybe<DoctorOrder>>>;
  /** Get DoctorOrderItem By Id */
  doctorOrderItem?: Maybe<DoctorOrderItem>;
  /** Get all DoctorOrders */
  doctorOrders?: Maybe<Array<Maybe<DoctorOrder>>>;
  /** Get doctor's orders by case with sort */
  doctorOrdersWithSort?: Maybe<Array<Maybe<DoctorOrder>>>;
  /** Get doctor's orders by case by page */
  doctorsOrdersPageable?: Maybe<Page_DoctorOrder>;
  /** List of Document Type */
  documentTypeList?: Maybe<Array<Maybe<DocumentTypes>>>;
  dohIcd10Custom?: Maybe<Array<Maybe<DohIcdCodeDto>>>;
  dohIcd10CustomMortality?: Maybe<Array<Maybe<DohIcdCodeDto>>>;
  dohProgressLogs?: Maybe<Array<Maybe<DohProgressLogs>>>;
  dohTestingPerYear?: Maybe<DohTestingDto>;
  /** Get Employee By Id */
  employee?: Maybe<Employee>;
  /** Get one Employee add-ons */
  employeeAddOns?: Maybe<Array<Maybe<AddOn>>>;
  /** Get Employee Diet List */
  employeeDietsList?: Maybe<Array<Maybe<DietList>>>;
  /** Get All Employees */
  employees?: Maybe<Array<Maybe<Employee>>>;
  /** Get Employee By Department */
  employeesByDep?: Maybe<Array<Maybe<Employee>>>;
  /** Transaction List */
  exTransList?: Maybe<Array<Maybe<ExpenseTransaction>>>;
  expenseTypeById?: Maybe<ExpenseTransaction>;
  /** Fetch active patients */
  fetchActivePatients?: Maybe<Page_Case>;
  /** Fetch patient medication stock */
  fetchPatientMedicationStock?: Maybe<Medication>;
  /** Get all Medications by Case Id and Type */
  fetchPatientMedications?: Maybe<Array<Maybe<Medication>>>;
  /** List of Active Accounting Category */
  filterAccountingCategories?: Maybe<Array<Maybe<AccountingCategory>>>;
  /** List of filtered quantity adjustment type */
  filterAdjustmentType?: Maybe<Array<Maybe<QuantityAdjustmentType>>>;
  /** List of Gas items */
  filterAllGasItems?: Maybe<Array<Maybe<Item>>>;
  /** List of O2 flow rates */
  filterAllO2FlowRates?: Maybe<Array<Maybe<FlowRate>>>;
  filterDiets?: Maybe<Array<Maybe<Diet>>>;
  /** List of fluid Medicines */
  filterFluidMedicines?: Maybe<Array<Maybe<Item>>>;
  /** List of Medicines */
  filterMedicines?: Maybe<Array<Maybe<Item>>>;
  /** List of non-fluid Medicines */
  filterNonFluidMedicines?: Maybe<Array<Maybe<Item>>>;
  /** Search patients pageable */
  filterPatientsPageable?: Maybe<Page_Patient>;
  /** list of all material production with pagination by dept */
  filterableMaterialProductionByDept?: Maybe<Page_MaterialProduction>;
  /** list of all material production with pagination by dept */
  filterableMaterialProductionByDeptPage?: Maybe<Page_MaterialProduction>;
  financialReports?: Maybe<Page_FinancialReport>;
  findARTransactionById?: Maybe<ArTransaction>;
  findAccountReceivablePerId?: Maybe<AccountReceivable>;
  findAdmissionKitByType?: Maybe<Array<Maybe<DefaultAdmissionItems>>>;
  /** find All Allowance */
  findAllAllowance?: Maybe<Array<Maybe<Allowance>>>;
  /** Find all classification */
  findAllBedCapacity?: Maybe<Array<Maybe<BedCapacity>>>;
  /** findAllBiometricInEmployee */
  findAllBiometricInEmployee?: Maybe<Array<Maybe<EmployeeBiometricConfig>>>;
  /** Find all classification */
  findAllClassification?: Maybe<Array<Maybe<Classification>>>;
  /** Find all clinics */
  findAllClinics?: Maybe<Array<Maybe<Clinic>>>;
  /** Find all classification */
  findAllCreateRsvAccount?: Maybe<Array<Maybe<CreateRsvAccount>>>;
  findAllCreditNote?: Maybe<Page_ArCreditNote>;
  findAllCustomerReference?: Maybe<Array<Maybe<OptionsDto>>>;
  findAllCustomers?: Maybe<Page_ArCustomers>;
  /** Find all Diet Category */
  findAllDietCategory?: Maybe<Array<Maybe<DietCategory>>>;
  /** Find all Discharge OPD */
  findAllDischareOpd?: Maybe<Array<Maybe<DischargeOpd>>>;
  /** Find all Discharge EV */
  findAllDischargeEv?: Maybe<Array<Maybe<DischargeEv>>>;
  /** Find all Discharge Mobidity */
  findAllDischargeMobidity?: Maybe<Array<Maybe<DischargeMobidity>>>;
  /** Find all classification */
  findAllDischargeNumberDeliveries?: Maybe<Array<Maybe<DischargeNumberDeliveries>>>;
  /** Find all classification */
  findAllDischargeOpv?: Maybe<Array<Maybe<OptDischargeOpv>>>;
  /** Find all Discharge Specialty */
  findAllDischargeSpecialty?: Maybe<Array<Maybe<HospOptDischargeSpecialty>>>;
  /** Find all discharges Specialty others */
  findAllDischargeSpecialtyOthers?: Maybe<Array<Maybe<HospOptDischargeSpecialtyOthers>>>;
  /** get all employee Allowance */
  findAllEmployeeAllowance?: Maybe<Array<Maybe<EmployeeAllowance>>>;
  /** Search Biometric Device */
  findAllEmployeeBiometric?: Maybe<Array<Maybe<EmployeeBiometricConfig>>>;
  /** Find all Er */
  findAllEr?: Maybe<Array<Maybe<DischargesEr>>>;
  /** Find all Expenses */
  findAllExpenses?: Maybe<Array<Maybe<DohExpenses>>>;
  findAllInvoice?: Maybe<Page_ArInvoice>;
  findAllInvoiceItemUUIDById?: Maybe<Array<Maybe<Scalars['UUID']['output']>>>;
  /** find All Allowance */
  findAllLikeAllowance?: Maybe<Array<Maybe<Allowance>>>;
  /** Find all Diet Category */
  findAllLikeCategory?: Maybe<Array<Maybe<DietCategory>>>;
  /** Find all doh logs */
  findAllLogs?: Maybe<Array<Maybe<DohLogs>>>;
  /** Find all classification */
  findAllMortalityDeathsRepository?: Maybe<Array<Maybe<OperationMortalityDeaths>>>;
  /** Find all classification */
  findAllOperationDeaths?: Maybe<Array<Maybe<OperationDeaths>>>;
  /** Find all classification */
  findAllOperationHai?: Maybe<Array<Maybe<OperationHai>>>;
  /** Find all Operation Major */
  findAllOperationMajor?: Maybe<Array<Maybe<OperationMajorOpt>>>;
  /** Find all classification */
  findAllOperationMinor?: Maybe<Array<Maybe<OperationMinorOpt>>>;
  findAllPaymentTransactionTypes?: Maybe<Array<Maybe<PaymentTransactionType>>>;
  /** Find all General Info Quality Management */
  findAllQualityManagement?: Maybe<Array<Maybe<GenInfoQualityManagements>>>;
  /** Find all classification */
  findAllRevenues?: Maybe<Array<Maybe<Revenues>>>;
  /** Find all Staffing Pattern */
  findAllStaffingPattern?: Maybe<Array<Maybe<StaffingPattern>>>;
  /** Find all classification */
  findAllStaffingPatternOthers?: Maybe<Array<Maybe<StaffingPatternOthers>>>;
  /** Find all classification */
  findAllSubmittedReports?: Maybe<Array<Maybe<SubmittedReports>>>;
  /** Find all Summary Of Patient  */
  findAllSummaryOfPatient?: Maybe<Array<Maybe<SummaryOfPatient>>>;
  /** Find all classification */
  findAllTesting?: Maybe<Array<Maybe<DischargesTesting>>>;
  findArDetailItemPaymentByID?: Maybe<Array<Maybe<ArTransactionDetails>>>;
  findArPTTByTransId?: Maybe<ArPaymentTrackerTransaction>;
  findArPaymentTrackerPerID?: Maybe<ArPaymentTracker>;
  findArTransactionTypeById?: Maybe<ArTransactionType>;
  findByPaymentTrackerId?: Maybe<Array<Maybe<InvestorPaymentLedger>>>;
  findBySourceValue?: Maybe<Scalars['Long']['output']>;
  findCreditNoteItems?: Maybe<Page_ArCreditNoteItems>;
  findCreditNoteItemsByCNId?: Maybe<Array<Maybe<ArCreditNoteItems>>>;
  findCreditNoteItemsByCNIdByItemType?: Maybe<Array<Maybe<ArCreditNoteItems>>>;
  findCreditNoteItemsByCustomer?: Maybe<Page_ArCreditNoteItems>;
  findDuplicateItem?: Maybe<Scalars['Long']['output']>;
  findEmployeeRequestByHrApprovedEmployee?: Maybe<Page_EmployeeRequest>;
  findEmployeeRequestByRequestedEmployee?: Maybe<Page_EmployeeRequest>;
  findEmployeeRequests?: Maybe<Page_EmployeeRequest>;
  /** Find Fiscal By id */
  findFiscalActive?: Maybe<Fiscal>;
  findInvoiceItemsByCustomer?: Maybe<Page_ArInvoiceItems>;
  findInvoiceItemsByInvoice?: Maybe<Page_ArInvoiceItems>;
  findORForAccountReceivable?: Maybe<Page_PaymentTracker>;
  findORIfExistARPT?: Maybe<ArPaymentTracker>;
  findOneAccountBalancesItem?: Maybe<Array<Maybe<AccountBalancesItem>>>;
  /** find Adjustment Type */
  findOneAdjustmentType?: Maybe<QuantityAdjustmentType>;
  findOneByRefId?: Maybe<Wtx2307>;
  findOneCreditNote?: Maybe<ArCreditNote>;
  findOneCustomer?: Maybe<ArCustomers>;
  findOneInvoice?: Maybe<ArInvoice>;
  findOneInvoiceItems?: Maybe<ArInvoiceItems>;
  findOnePaymentTransactionType?: Maybe<PaymentTransactionType>;
  /** find signature by id */
  findOneSignature?: Maybe<Signature>;
  findPaymentTrackerById?: Maybe<PaymentTracker>;
  findPaymentTrackerDetailsById?: Maybe<PaymentTrackerDetails>;
  findPendingCNPerInvoice?: Maybe<ArCreditNote>;
  findPostedCNPerInvoice?: Maybe<Array<Maybe<ArCreditNote>>>;
  /** Find all top 10 major operations */
  findTop10MajorOperations?: Maybe<GraphQlRetVal_List_MajorOpDto>;
  /** Find all top 10 minor operations */
  findTop10MinorOperations?: Maybe<GraphQlRetVal_List_OpdMinorOpDto>;
  findTransactionDetailsByParentId?: Maybe<Array<Maybe<ArTransactionDetails>>>;
  fiscalById?: Maybe<Fiscal>;
  fiscals?: Maybe<Page_Fiscal>;
  fixedAssetCategoryPageable?: Maybe<Page_FixedAssetCategory>;
  /** List of fluid Medicines */
  fluidMedicines?: Maybe<Array<Maybe<Item>>>;
  fsById?: Maybe<FinancialReport>;
  /** List of fluid Medicines */
  gasItems?: Maybe<Array<Maybe<Item>>>;
  /** Generate MEdicines from HIS */
  generateHISClaimsMeds?: Maybe<Scalars['ObjectScalar']['output']>;
  /** List of Active Generics */
  genericActive?: Maybe<Array<Maybe<Generic>>>;
  /** List of Active Generics */
  genericActiveFilter?: Maybe<Page_Generic>;
  /** List of Generics */
  genericFilter?: Maybe<Array<Maybe<Generic>>>;
  /** List of Generics */
  genericList?: Maybe<Array<Maybe<Generic>>>;
  /** List of Page Generics */
  genericPageFilter?: Maybe<Page_Generic>;
  getARCompanyDetails?: Maybe<Array<Maybe<AccountReceivable>>>;
  getARCompanyDetailsBySchedule?: Maybe<AccountReceivable>;
  getARInvoiceItemPerPatientGroupById?: Maybe<Array<Maybe<ArInvoiceDto>>>;
  getAccRecYear?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  /** Get accumulated Log by ID */
  getAccumulatedLogById?: Maybe<AccumulatedLog>;
  /** Get saved employee logs with computed in and out */
  getAccumulatedLogs?: Maybe<Array<Maybe<AccumulatedLogSummary>>>;
  /** Get saved employee logs with computed in and out */
  getAccumulatedLogsOld?: Maybe<Array<Maybe<EmployeeAccumulatedAttendanceDto>>>;
  /** list of all active allowance templates where total > 1 */
  getActiveAllowanceTemplates?: Maybe<Array<Maybe<AllowanceTemplate>>>;
  getActiveOnDueCheques?: Maybe<Page_ChequeEncashment>;
  /** accommodation date and Time */
  getAllAccommodationType?: Maybe<Array<Maybe<Case>>>;
  /** find All Add on */
  getAllAddOn?: Maybe<Array<Maybe<AddOn>>>;
  getAllArManualDeductions?: Maybe<Page_ArManualDeductions>;
  getAllArTransactionType?: Maybe<Array<Maybe<ArTransactionType>>>;
  getAllArTransactionTypePageable?: Maybe<Page_ArTransactionType>;
  getAllArTransfer?: Maybe<Page_ArTransfer>;
  getAllBsPhilClaimsBy?: Maybe<Page_BsPhilClaims>;
  /** Get price */
  getAllCaseByEntryDatetime?: Maybe<MyCensusDto>;
  getAllCashieringCollectionReport?: Maybe<Array<Maybe<DailySalesDataExtracted>>>;
  getAllCdctr?: Maybe<Page_Cdctr>;
  getAllChartOfAccountGenerate?: Maybe<Array<Maybe<ChartOfAccountGenerate>>>;
  /** Get all Clinic Doctor */
  getAllClinicDoctor?: Maybe<Array<Maybe<ClinicDoctor>>>;
  /** Search Config */
  getAllConfig?: Maybe<Array<Maybe<AncillaryConfig>>>;
  getAllDefaultAdmissionItems?: Maybe<Page_DefaultAdmissionItems>;
  getAllDeliveryCounts?: Maybe<GraphQlRetVal_DischargeNumberDeliveries>;
  /** Get all Discharge */
  getAllDischarged?: Maybe<Array<Maybe<Case>>>;
  /** Get employees with department schedules */
  getAllEmployeeSchedule?: Maybe<Page_EmployeeDto>;
  /** Get all in patients */
  getAllInPatients?: Maybe<Array<Maybe<Case>>>;
  getAllIntegrationPageable?: Maybe<Page_Integration>;
  /** object for material production */
  getAllMaterialProductionItems?: Maybe<Array<Maybe<MaterialProductionItem>>>;
  /** Get all the new borns */
  getAllNewborn?: Maybe<Array<Maybe<Case>>>;
  /** get all unbilled orderSlip  */
  getAllOrderSlipNoFalse?: Maybe<Array<Maybe<OrderSlipItem>>>;
  getAllOutstandingClaims?: Maybe<Page_BillingItem>;
  getAllOutstandingClaimsByCompany?: Maybe<Page_BillingItem>;
  getAllOutstandingClaimsByCompany_v2?: Maybe<Page_BillingItem>;
  getAllPatientByDepartment?: Maybe<Page_PatientCaseView>;
  getAllPatientByPhysician?: Maybe<Page_PatientCaseView>;
  getAllPaymentsPerAR?: Maybe<Array<Maybe<ArPaymentTrackerTransaction>>>;
  /** Get all the payrolls */
  getAllPayrolls?: Maybe<Array<Maybe<Payroll>>>;
  getAllPriceControlItems?: Maybe<Page_ItemPriceControlDto>;
  getAllPriceControlServices?: Maybe<Page_ServicePriceControlDto>;
  getAllPriceTier?: Maybe<Array<Maybe<PriceTierDetail>>>;
  getAllPriceTierForOTC?: Maybe<Array<Maybe<PriceTierDetail>>>;
  getAllReceivableAccounts?: Maybe<Array<Maybe<MergeReceivableAccount>>>;
  getAllShiftingRecords?: Maybe<Page_Shifting>;
  getAllShiftingRecordsArchive?: Maybe<Page_Shifting>;
  getAllShiftingRecordsForCdctr?: Maybe<Page_Shifting>;
  /** Search Visits */
  getAllVisits?: Maybe<VisitsDto>;
  /** list of all allowances with pagination */
  getAllowanceByPagination?: Maybe<Page_Allowance>;
  /** get allowance template items  by their template id */
  getAllowanceTemplateItemsByTemplateId?: Maybe<Array<Maybe<AllowanceTemplateItem>>>;
  /** list of all Allowance Templates with pagination */
  getAllowanceTemplatesByPagination?: Maybe<Page_AllowanceTemplate>;
  /** Authorized Bed Capacity (This will be from the settings/configuration) */
  getAuthorizedBedCapacity?: Maybe<Scalars['Long']['output']>;
  getAutoIntegrateableFromDomain?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  /** Blood Stream Infection (BSI) */
  getBSI?: Maybe<Scalars['BigDecimal']['output']>;
  getBSchItemPerBillItem?: Maybe<BillingScheduleItems>;
  getBalanceSheets?: Maybe<BalanceSheetPage>;
  getBasedAuthorizedBeds?: Maybe<Scalars['BigDecimal']['output']>;
  getBedCapacityOccupancy?: Maybe<BedCapacityOccupancy>;
  getBigDecimalFieldsFromDomain?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  getBilling?: Maybe<Billing>;
  getBillingItemSales?: Maybe<Page_BillingItem>;
  getBillingItemSales2?: Maybe<Page_Salesreportitem>;
  getBillingItemSales2Totals?: Maybe<SalesreportitemTotals>;
  getBillingItemSalesList?: Maybe<Array<Maybe<BillingItem>>>;
  getBillingItemsAllNoType?: Maybe<Array<Maybe<BillingItem>>>;
  getBillingScheduleDetails?: Maybe<BScheduleEditPage>;
  getBsPhilClaimsByCaseNo?: Maybe<BsPhilClaims>;
  /** Get all calendar events */
  getCalendarEvents?: Maybe<Array<Maybe<EventCalendar>>>;
  /** Get all insurance by case */
  getCaseInsurancesByCase?: Maybe<Array<Maybe<CaseInsurance>>>;
  getCaseRatesFromBilling?: Maybe<Array<Maybe<PhicCaseRate>>>;
  /** Get Patient Id */
  getCashBasisPatientById?: Maybe<CashBasis>;
  /** List of Cash Basis Patient Pageable */
  getCashBasisPatientList?: Maybe<Page_CashBasis>;
  getCashFlowGuarantorList?: Maybe<Array<Maybe<CashFlowGuarantor>>>;
  getCashProvidedByOperatingActivities?: Maybe<Array<Maybe<CashFlowFields>>>;
  getCashierData?: Maybe<CashierData>;
  getCashierDataByMacAddress?: Maybe<ChequeEncashmentCashier>;
  getCashieringCollectionByTypeOnList?: Maybe<Array<Maybe<PaymentTrackerDetails>>>;
  getCashieringCollectionByTypePage?: Maybe<Page_PaymentTrackerDetails>;
  getCashieringCollectionReport?: Maybe<Page_PaymentTrackerDetails>;
  getCathLabNotePageable?: Maybe<Page_CathLabNote>;
  /** Get all Catheter Records */
  getCatheterRecords?: Maybe<Array<Maybe<CatheterRecord>>>;
  /** Search Transfers */
  getCensus?: Maybe<CensusDto>;
  /** Get all Central Line Records */
  getCentralLineRecords?: Maybe<Array<Maybe<CentralLineRecord>>>;
  /** Get External Cf4 */
  getCf4?: Maybe<Scalars['ObjectScalar']['output']>;
  getChecksForDeposit?: Maybe<Page_PaymentTrackerDetails>;
  /** Get External Claims Library */
  getClaimLibrary?: Maybe<Scalars['ObjectScalar']['output']>;
  /** Get External Claims Data */
  getClaims?: Maybe<Scalars['ObjectScalar']['output']>;
  /** Get External Claims Data Using Case Number */
  getClaimsCaseNo?: Maybe<Scalars['ObjectScalar']['output']>;
  /** Get getCoaById */
  getCoaById?: Maybe<ChartOfAccount>;
  /** Search Config */
  getConfigByDepartment?: Maybe<Array<Maybe<AncillaryConfig>>>;
  /** Search Config */
  getConfigByEntityName?: Maybe<Array<Maybe<AncillaryConfig>>>;
  getCountDeliveries?: Maybe<DeliveriesDto>;
  getCountMonitoring?: Maybe<Scalars['Long']['output']>;
  /** Count PO Items Where not Yet Delivered */
  getCountPoItem?: Maybe<Scalars['Int']['output']>;
  getCreditCardsAndCheck?: Maybe<Page_PaymentTrackerDetails>;
  getDCRPageable?: Maybe<Page_DailySalesDataExtracted>;
  /** Get all DOH Positions */
  getDOHPositions?: Maybe<Array<Maybe<DohPosition>>>;
  getDOHProgressRate?: Maybe<Scalars['Map_String_ObjectScalar']['output']>;
  /** Get all DOH Service Types */
  getDOHServiceTypes?: Maybe<Array<Maybe<DohServiceType>>>;
  getDataTable?: Maybe<GraphQlRetVal_String>;
  /** Get Default ParValue */
  getDefaultParValue?: Maybe<InvestorConfig>;
  /** get incoming request list by dep */
  getDepItemIssuance?: Maybe<Page_DepartmentStockIssue>;
  /** get req items */
  getDepRequestItems?: Maybe<Array<Maybe<DepartmentStockRequestItem>>>;
  /** get department schedule config */
  getDepartmentSchedule?: Maybe<Array<Maybe<Department>>>;
  /** List of Departmental Request by issue dept */
  getDepartmentStockRequestByIssueDept?: Maybe<Array<Maybe<DepartmentStockRequest>>>;
  /** List of Departmental Request */
  getDepartmentStockRequestByReqDept?: Maybe<Array<Maybe<DepartmentStockRequest>>>;
  /** List of Departmental Request by request no from requested dept */
  getDepartmentStockRequestReqNoByReqDept?: Maybe<Array<Maybe<DepartmentStockRequest>>>;
  /** Get All Tree Departments */
  getDepartmentTree?: Maybe<Scalars['ObjectScalar']['output']>;
  /** Get Departments with Price Tiers */
  getDepartmentWithTiers?: Maybe<Array<Maybe<Department>>>;
  /** get Selected Department for assigning employee allowance */
  getDepartmentsInId?: Maybe<Array<Maybe<Department>>>;
  /** Get All Order Slips by Case */
  getDiagnosticExamsByCase?: Maybe<Array<Maybe<Service>>>;
  /** Get Dic */
  getDicNumber?: Maybe<Array<Maybe<DicNumber>>>;
  getDietNotesByCasePageable?: Maybe<Page_DietNotes>;
  getDischargeMobidity?: Maybe<Array<Maybe<Scalars['Map_String_ObjectScalar']['output']>>>;
  getDischargeMorbidityByAgeAndGender?: Maybe<Array<Maybe<Scalars['Map_String_ObjectScalar']['output']>>>;
  getDischargeSpecialty?: Maybe<Array<Maybe<Scalars['Map_String_ObjectScalar']['output']>>>;
  /** Find all doh logs */
  getDohConfig?: Maybe<DohConfiguration>;
  getEClaimsVoucher?: Maybe<Scalars['ObjectScalar']['output']>;
  getERDTotalNumOfPatientsTransferredFromOtherPerYear?: Maybe<Scalars['Long']['output']>;
  getERDTotalNumOfPatientsTransferredToOtherPerYear?: Maybe<Scalars['Long']['output']>;
  getERDTotalNumberOfPatientsAdultPerYear?: Maybe<Scalars['Long']['output']>;
  getERDTotalNumberOfPatientsPediatricPerYear?: Maybe<Scalars['Long']['output']>;
  getERDTotalNumberOfPatientsVisitsPerYear?: Maybe<Scalars['Long']['output']>;
  getERDVisitsReport?: Maybe<Array<Maybe<Scalars['Map_String_ObjectScalar']['output']>>>;
  getEclaimAccount?: Maybe<EclaimsIntegrationAccount>;
  getEclaimCaseRef?: Maybe<EclaimsCaseRef>;
  getEclaimProvider?: Maybe<Scalars['ObjectScalar']['output']>;
  /** Get External Eligibility Data */
  getEligibility?: Maybe<Scalars['ObjectScalar']['output']>;
  /** Get all employee isActive */
  getEmployeeActiveAndIncldInPayrollAndDeptExcldUser?: Maybe<Array<Maybe<Employee>>>;
  /** Search employees */
  getEmployeeAttendance?: Maybe<Array<Maybe<EmployeeAttendance>>>;
  /** Get all employee isActive */
  getEmployeeIsActiveAndIncludeInPayroll?: Maybe<Page_Employee>;
  /** Search employees */
  getEmployeeLoanById?: Maybe<Array<Maybe<EmployeeLoan>>>;
  /** Search employees */
  getEmployeeLoanByIdWithFilter?: Maybe<Array<Maybe<EmployeeLoan>>>;
  /** Compute the employee's performance summary */
  getEmployeePerformanceSummary?: Maybe<EmployeeAccumulatedAttendanceDto>;
  /** Compute the employee's performance summary */
  getEmployeePerformanceSummaryOld?: Maybe<EmployeeAccumulatedAttendanceDto>;
  /** Search employees */
  getEmployeeSchedule?: Maybe<Array<Maybe<EmployeeSchedule>>>;
  /** Get the schedule of the day of employee */
  getEmployeeScheduleDetails?: Maybe<EmployeeDto>;
  /** Get all possible legends in the give time range. */
  getEmployeeScheduleLegend?: Maybe<Array<Maybe<EmployeeScheduleDto>>>;
  /** get Selected Employees for assigning employee allowance */
  getEmployeesInIdsByFilter?: Maybe<Page_Employee>;
  getEncashmentById?: Maybe<ChequeEncashment>;
  getEncashmentWithActiveShift?: Maybe<ChequeEncashmentResponse>;
  /** Filter Event Calendar between two dates. */
  getEventsBetweenTwoDates?: Maybe<Array<Maybe<EventCalendar>>>;
  getExistBillItemsInReceivables?: Maybe<Array<Maybe<AccountReceivableItems>>>;
  /** Get depreciation of a fixed item. */
  getFixedAssetDepreciation?: Maybe<GraphQlRetVal_List_FixedAssetDepreciation>;
  /** Get all active fixed asset items */
  getFixedAssetItems?: Maybe<GraphQlRetVal_Page_FixedAssetItem>;
  /** list of all fixed asset purchase order */
  getFixedAssetPurchaseOrder?: Maybe<Page_PurchaseOrder>;
  /** get fixed asset transfer */
  getFixedAssetTransfer?: Maybe<GraphQlRetVal_List_FixedAssetTransfer>;
  getFixedAssetsFromItems?: Maybe<Page_Item>;
  getFlattenDepartment?: Maybe<Array<Maybe<Subaccountable>>>;
  getFolioByPage?: Maybe<Page_Billing>;
  getFolioByPageWithRegistryType?: Maybe<Page_Billing>;
  getFolioOTCByPage?: Maybe<Page_Billing>;
  getForParentLineTypes?: Maybe<Array<Maybe<LineType>>>;
  getGeneralLedger?: Maybe<GeneralLedgerDtoContainer>;
  /** Get Group Policy by name */
  getGroupPolicyById?: Maybe<Array<Maybe<GroupPolicy>>>;
  getGuarantorPerPeriod?: Maybe<Array<Maybe<CashFlowFields>>>;
  /** Implementing Beds (This will be from the settings/configurations) */
  getImplementedBeds?: Maybe<Scalars['Long']['output']>;
  getIncomeStatementByCode?: Maybe<Array<Maybe<ReportDetailsDto>>>;
  getIncomeStatements?: Maybe<IncomeStatementPage>;
  /** get incoming request list by dep */
  getIncomingRequest?: Maybe<Page_DepartmentStockRequest>;
  getIncomingRequestCount?: Maybe<Scalars['Long']['output']>;
  /** get incoming request list by dep */
  getIncomingRequestList?: Maybe<Page_DepartmentStockRequest>;
  /** Inpatient remaining at midnight (number of patient that are admitted as of dec 31 11:59:59 currently or  Admission Date time is before dec 31 11:59:59 of reporting year and discharge date/time is after dec 31 11:59:59) */
  getInpatientRemainingAtMidnight?: Maybe<Scalars['Long']['output']>;
  /** Inpatient remaining at midnight (number of patient that are admitted as of dec 31 11:59:59 currently or  Admission Date time is before dec 31 11:59:59 of reporting year and discharge date/time is after dec 31 11:59:59) */
  getInpatientRemainingAtMidnightPrev?: Maybe<Scalars['Long']['output']>;
  /** Get Insurances by filter */
  getInsurancesByFilter?: Maybe<Array<Maybe<InsuranceCompany>>>;
  /** List of Departmental Request items By Issue */
  getIssuanceItemsForPosting?: Maybe<Array<Maybe<DepartmentStockIssueItems>>>;
  /** getItemBarcode */
  getItemBarcode?: Maybe<Array<Maybe<Inventory>>>;
  /** Get price */
  getItemPrice?: Maybe<TierDto>;
  getItemReturnInfo?: Maybe<ReturnItemInfo>;
  getItemsThatAreCashBasis?: Maybe<Array<Maybe<BillingItem>>>;
  getItemsWithExpiry?: Maybe<Page_ReceivingReportItem>;
  /** Find the latest submitted expenses report */
  getLatestExpensesData?: Maybe<DohLogs>;
  /** Find the latest submitted revenues report */
  getLatestRevenuesData?: Maybe<DohLogs>;
  /** Search Leading ER Consult */
  getLeadingERConsult?: Maybe<Array<Maybe<LeadingErConsult>>>;
  getLedgerByAR?: Maybe<Array<Maybe<ArLedger>>>;
  getLedgerByHeaderId?: Maybe<Array<Maybe<Ledger>>>;
  getLedgerReference?: Maybe<ArLedger>;
  getLoanScheduleById?: Maybe<Page_LoanAmortization>;
  getMemoAndPaymentList?: Maybe<Array<Maybe<ArTransaction>>>;
  /** List of Physical Count By Date */
  getMonthlyCountByDate?: Maybe<Array<Maybe<PhysicalCount>>>;
  /** List of Physical Count By Date */
  getMonthlyCountByDatePaged?: Maybe<Page_PhysicalCount>;
  /** List of Physical Count By Date */
  getMonthlyCountList?: Maybe<Array<Maybe<PhysicalCount>>>;
  /** Check if getNextSupplierSubAccountCode Type Name exists */
  getNextSupplierSubAccountCode?: Maybe<Scalars['String']['output']>;
  getNumberOfOPDAdult?: Maybe<Scalars['Long']['output']>;
  getNumberOfOPDAdultGeneralMedicine?: Maybe<Scalars['Long']['output']>;
  getNumberOfOPDNewVisits?: Maybe<Scalars['Long']['output']>;
  getNumberOfOPDNewVisitsAdult?: Maybe<Scalars['Long']['output']>;
  getNumberOfOPDNewVisitsPediatric?: Maybe<Scalars['Long']['output']>;
  getNumberOfOPDPediatric?: Maybe<Scalars['Long']['output']>;
  getNumberOfOPDReVisits?: Maybe<Scalars['Long']['output']>;
  getNumberOfOPDReVisitsAdult?: Maybe<Scalars['Long']['output']>;
  getNumberOfOPDReVisitsPediatric?: Maybe<Scalars['Long']['output']>;
  getNumberOfOPDVisitsAntenatalPostnatal?: Maybe<Scalars['Long']['output']>;
  getNumberOfOPDVisitsAntenatalPrenatal?: Maybe<Scalars['Long']['output']>;
  getNumberOfOPDVisitsNonSurgical?: Maybe<Scalars['Long']['output']>;
  getNumberOfOPDVisitsSurgical?: Maybe<Scalars['Long']['output']>;
  /** Number of admissions and discharges on the same day = admission date/time (information) and discharge date/time (discharge) is on the same day per case for the whole reporting year. */
  getNumberOfSameDayAdmissionAndDischarge?: Maybe<Scalars['Long']['output']>;
  getOPDVisitsReport?: Maybe<Array<Maybe<Scalars['Map_String_ObjectScalar']['output']>>>;
  getOccupationalTherapyNotePageable?: Maybe<Page_OccupationalTherapyNote>;
  /** get on hand by Item */
  getOnHandByItem?: Maybe<Inventory>;
  /** get one allowance */
  getOneAllowance?: Maybe<GraphQlResVal_Allowance>;
  /** get one allowance Template */
  getOneAllowanceTemplate?: Maybe<GraphQlResVal_AllowanceTemplate>;
  /** get one department schedule config */
  getOneDepartmentSchedule?: Maybe<Array<Maybe<DepartmentSchedule>>>;
  /** get one other deduction */
  getOneOtherDeduction?: Maybe<OtherDeduction>;
  /** Get/View one payroll */
  getOnePayroll?: Maybe<Payroll>;
  getOneRawLog?: Maybe<EmployeeAttendance>;
  /** list of all Allowance Templates with pagination */
  getOneTemplateItem?: Maybe<AllowanceTemplateItem>;
  getOrderSlipItemByGroup?: Maybe<Array<Maybe<OrderSlipDto>>>;
  /** Get  OrderSlip Items */
  getOrderSlipItems?: Maybe<Array<Maybe<OrderSlipItem>>>;
  getOslipItem?: Maybe<OrderSlipItem>;
  /** list of all other deductions with pagination */
  getOtherDeductionByPagination?: Maybe<Page_OtherDeduction>;
  getOtherDeductionEmployees?: Maybe<Page_Employee>;
  /** Get all ids of employees of other deduction */
  getOtherDeductionEmployeesId?: Maybe<Array<Maybe<Scalars['UUID']['output']>>>;
  /** Get all doh positions */
  getOtherPositions?: Maybe<Array<Maybe<DohPosition>>>;
  /** get outgoing request list by dep */
  getOutgoingRequest?: Maybe<Page_DepartmentStockRequest>;
  /** Get PF */
  getPF?: Maybe<ManagingPhysician>;
  /** Get All PHIC Group */
  getPHICGroup?: Maybe<Array<Maybe<PhicGroup>>>;
  getPOByDel?: Maybe<PoItemMonitoring>;
  getPOItemMonitoring?: Maybe<Array<Maybe<PoItemMonitoring>>>;
  getPOItemMonitoringPage?: Maybe<Page_PoItemMonitoring>;
  getPOItemsReport?: Maybe<Array<Maybe<PurchaseOrderItems>>>;
  getPOMonitoringByPoItemFilter?: Maybe<Array<Maybe<PoDeliveryMonitoring>>>;
  getPOMonitoringByRec?: Maybe<Array<Maybe<PoDeliveryMonitoring>>>;
  getPRItemsReport?: Maybe<Array<Maybe<PurchaseRequestItem>>>;
  /** Search Item Contents */
  getPackageContent?: Maybe<Array<Maybe<PackageContent>>>;
  getPaidToDoctorsPerPeriod?: Maybe<Array<Maybe<CashFlowFields>>>;
  /** Search Child Services */
  getPanelComponent?: Maybe<Array<Maybe<PanelContent>>>;
  getPatient?: Maybe<AgtPatient>;
  getPatientCensus?: Maybe<Array<Maybe<DepartmentCensusDto>>>;
  getPatientInfoByStockCard?: Maybe<StockCardTransaction>;
  getPatientPerPeriod?: Maybe<CashFlowFields>;
  getPatientReport?: Maybe<GraphQlRetVal_Page_Map_String_Object>;
  getPatientsForCreditLimit?: Maybe<Page_Billing>;
  getPatientsForDischarge?: Maybe<Page_Billing>;
  getPaymentComponents?: Maybe<Array<Maybe<PaymentComponent>>>;
  getPaymentsByBillingId?: Maybe<Array<Maybe<PaymentTracker>>>;
  /** Get payroll by ID */
  getPayrollById?: Maybe<Payroll>;
  /** list of all allowances with pagination */
  getPayrollByPagination?: Maybe<Page_Payroll>;
  /** Gets all the employees by payroll id */
  getPayrollEmployee?: Maybe<Array<Maybe<Employee>>>;
  /** Gets all the ids of the employees of the Payroll */
  getPayrollEmployeeIds?: Maybe<Array<Maybe<Scalars['UUID']['output']>>>;
  getPhyItemCountById?: Maybe<PhysicalCountView>;
  getPhysicalCountByCode?: Maybe<PhysicalCountView>;
  /** List of Physical Count By Id */
  getPhysicalCountById?: Maybe<PhysicalCount>;
  getPhysicalItem?: Maybe<PhysicalCountView>;
  getPhysicalItemById?: Maybe<Array<Maybe<PhysicalCountView>>>;
  getPhysicalTherapyNotePageable?: Maybe<Page_PhysicalTherapyNote>;
  /** get po object */
  getPoByStatus?: Maybe<Array<Maybe<PurchaseOrder>>>;
  /** po item list */
  getPoItemsById?: Maybe<Array<Maybe<PurchaseOrderItems>>>;
  /** list of all purchase order */
  getPoList?: Maybe<Page_PurchaseOrder>;
  getPostedBeginningItems?: Maybe<Array<Maybe<BeginningDetails>>>;
  /** List of Purchase Request Items Not Yet Po */
  getPrItemsNotYetPo?: Maybe<Array<Maybe<PurchaseRequest>>>;
  /** List of Purchase Request Items Not Yet Po */
  getPrItemsNotYetPoCS?: Maybe<Array<Maybe<PurchaseRequest>>>;
  getPriceTier?: Maybe<PriceTierDetail>;
  getPriceTierByCaseId?: Maybe<PriceTierDetail>;
  /** Get all price tier details by title */
  getPriceTierDetails?: Maybe<Array<Maybe<PriceTierDetail>>>;
  /** Get all price tier details by title */
  getPriceTierDetailsPageable?: Maybe<Page_PriceTierDetail>;
  /** Get all price tier modifiers */
  getPriceTierModifiers?: Maybe<Page_PriceTierModifier>;
  /** get quality management title */
  getQualityManagement?: Maybe<Array<Maybe<QualityManagementType>>>;
  /** get quality management description */
  getQualityManagementDesc?: Maybe<Array<Maybe<QualityManagementType>>>;
  /** get quality management type */
  getQualityManagementType?: Maybe<Array<Maybe<QualityManagementType>>>;
  /** get quality management type */
  getQualityManagementTypes?: Maybe<Array<Maybe<QualityManagementType>>>;
  getReceivableDetailedReport?: Maybe<ReceivableDetailedReport>;
  getReceivableLedgerReport?: Maybe<ReceivableLedgerWithAgingReport>;
  /** get receiving report list by dep */
  getReceivingByDepRange?: Maybe<Array<Maybe<ReceivingReport>>>;
  /** get receiving report page by dep */
  getReceivingByDepRangePage?: Maybe<Page_ReceivingReport>;
  /** get receiving report */
  getReceivingById?: Maybe<ReceivingReport>;
  getReceivingNo?: Maybe<Array<Maybe<ReceivingReport>>>;
  getReceivingReportItem?: Maybe<Page_ReceivingReportItem>;
  /** Get all Registry Types */
  getRegistryTypes?: Maybe<Array<Maybe<RegistryType>>>;
  getReportPeriodRange?: Maybe<PeriodRangeParent>;
  /** List of SR Items by SR Id */
  getSRItemsBySRId?: Maybe<Array<Maybe<StockRequestItem>>>;
  /** Surgical Site Infection (SSI) */
  getSSI?: Maybe<Scalars['BigDecimal']['output']>;
  /** Get the values of salary rate multiplier. */
  getSalaryRateMultiplier?: Maybe<SalaryRateMultiplier>;
  /** Get employee Attendance saved from database. */
  getSavedEmployeeAttendance?: Maybe<Page_EmployeeAttendance>;
  getSavedTrialBalance?: Maybe<GraphQlRetVal_TrialBalanceDto2Array>;
  getSavedTrialBalanceByDate?: Maybe<Array<Maybe<TrialBalanceDto2>>>;
  /** Get one schedule. */
  getSchedule?: Maybe<EmployeeSchedule>;
  getScheduleDateList?: Maybe<Array<Maybe<AppointmentSchedule>>>;
  getScheduleDateListAll?: Maybe<Array<Maybe<AppointmentSchedule>>>;
  getScheduleLock?: Maybe<Scalars['Map_String_ScheduleLockScalar']['output']>;
  /** Get price */
  getServicePrice?: Maybe<TierDto>;
  getSetupBySubAccountType?: Maybe<Array<Maybe<SubAccountSetup>>>;
  getSetupBySubAccountTypeAll?: Maybe<Array<Maybe<SubAccountSetup>>>;
  getShiftById?: Maybe<Shifting>;
  getShiftingRecords?: Maybe<Page_Shifting>;
  getSoaGroupingsById?: Maybe<SoaGrouping>;
  getSoaGroupingsbyBillingId?: Maybe<Array<Maybe<SoaGrouping>>>;
  getSpecificFieldsFromDomain?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  getSpeechTherapyNotePageable?: Maybe<Page_SpeechTherapyNote>;
  /** List of receiving report list per date range */
  getSrrByDateRange?: Maybe<Array<Maybe<ReceivingReport>>>;
  /** List of receiving report list per date range */
  getSrrItemByDateRange?: Maybe<Array<Maybe<ReceivingReportItem>>>;
  getStockCardEntryList?: Maybe<Array<Maybe<StockCardTransactionsNSql>>>;
  getStockIssueJournalEntries?: Maybe<Array<Maybe<HeaderLedger>>>;
  /** List of  */
  getStockRequest?: Maybe<StockRequest>;
  /** getStockRequestCountWithStatus */
  getStockRequestCountWithStatus?: Maybe<StockRequestStatusCountDto>;
  /** List of  */
  getStockRequestItems?: Maybe<Array<Maybe<StockRequestItem>>>;
  /** List of Stock Requests with patient */
  getStockRequestsByPatient?: Maybe<Array<Maybe<StockRequest>>>;
  /** List of Stock Requests with patient and status */
  getStockRequestsByPatientAndStatus?: Maybe<Array<Maybe<StockRequest>>>;
  /** List of Stock Requests with status */
  getStockRequestsByStatus?: Maybe<Array<Maybe<StockRequest>>>;
  getStringFieldsFromDomain?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  /** Get Sub Departments */
  getSubDepartments?: Maybe<Array<Maybe<Department>>>;
  getSubaccountForParent?: Maybe<Array<Maybe<SubAccountSetup>>>;
  getSubaccountableFromDomain?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  /** get inpatient more than 24 hrs */
  getSummaryPatientHospital?: Maybe<Array<Maybe<SummaryPatientDto>>>;
  /** Supplier Items */
  getSupItemByBarcode?: Maybe<Array<Maybe<SupplierItem>>>;
  /** Supplier Items */
  getSupplierByItem?: Maybe<Array<Maybe<SupplierItem>>>;
  /** Supply Item */
  getSupplyItem?: Maybe<SupplierItem>;
  /** Get all Surgical Site Records */
  getSurgicalSiteRecords?: Maybe<Array<Maybe<SurgicalSiteRecord>>>;
  /** Get All timekeepings */
  getTimekeepingAndEmployees?: Maybe<Timekeeping>;
  /** Get timekeeping by ID */
  getTimekeepingById?: Maybe<Timekeeping>;
  /** Get timekeeping by ID */
  getTimekeepingByPayrollId?: Maybe<Timekeeping>;
  /** Gets all the ids of the employees of the timekeeping */
  getTimekeepingEmployee?: Maybe<Array<Maybe<Employee>>>;
  /** Get timekeeping by ID */
  getTimekeepingEmployeeAccumulatedLogsById?: Maybe<Array<Maybe<AccumulatedLogSummary>>>;
  /** Gets all the ids of the employees of the timekeeping */
  getTimekeepingEmployeesV2?: Maybe<Array<Maybe<TimekeepingEmployee>>>;
  /** All cases that has service type = inpatient from (January 1, 12:01 am to December 31, 11:59:59 midnight/ for the whole reporting year) */
  getTotalAdmission?: Maybe<Scalars['Long']['output']>;
  getTotalCashFlowPatientPerPeriod?: Maybe<CashFlowFields>;
  /** Total number of catheter days */
  getTotalCatheterDays?: Maybe<Scalars['Long']['output']>;
  /** Total number of central line days */
  getTotalCentralLineDays?: Maybe<Scalars['Long']['output']>;
  /** Total days in the period */
  getTotalDaysInPeriod?: Maybe<Scalars['Int']['output']>;
  /** Total discharges (including death and admitted) =  outcome of treatment/disposition is discharged or expired for the whole reporting year */
  getTotalDischarged?: Maybe<Scalars['Long']['output']>;
  /** Total Discharges (Alive) Include HAMA and Absconded */
  getTotalDischargedAlive?: Maybe<Scalars['Long']['output']>;
  getTotalGuarantorPerPeriod?: Maybe<CashFlowFields>;
  /** Total number of inpatients transferred FROM THIS FACILITY to another facility for inpatients care. */
  getTotalInPatientTransferFromThisFacility?: Maybe<Scalars['Long']['output']>;
  /** Total number of inpatients transferred TO THIS FACILITY from another facility for inpatient care) */
  getTotalInPatientTransferToThisFacility?: Maybe<Scalars['Long']['output']>;
  /** Total admission (status is IN-PATIENT or registry type is inpatient for the whole reporting year) */
  getTotalInpatientAdmission?: Maybe<Scalars['Long']['output']>;
  /** Total Inpatient service days */
  getTotalInpatientServiceDays?: Maybe<Scalars['Long']['output']>;
  /** Total Newborn (In facility Deliveries) - not in the Annual Statistical Report but asked in the DOH Web Service. */
  getTotalNewborn?: Maybe<Scalars['Long']['output']>;
  getTotalPaidToDoctorsPerPeriod?: Maybe<CashFlowFields>;
  /** Total number of patients with BSI */
  getTotalPatientsWithBsi?: Maybe<Scalars['Long']['output']>;
  /** Total number of patients with UTI */
  getTotalPatientsWithUti?: Maybe<Scalars['Long']['output']>;
  /** Total number of patients with VAP */
  getTotalPatientsWithVap?: Maybe<Scalars['Long']['output']>;
  /** Total number of procedures done */
  getTotalProceduresDone?: Maybe<Scalars['Long']['output']>;
  /** Total number of surgical site infections */
  getTotalSurgicalSiteInfections?: Maybe<Scalars['Long']['output']>;
  /** Total number of ventilator days */
  getTotalVentilatorDays?: Maybe<Scalars['Long']['output']>;
  getTrialBalanceByCode?: Maybe<Array<Maybe<ReportDetailsDto>>>;
  getTrialBalanceSubAccountsSummary?: Maybe<Array<Maybe<TrialBalanceDto2>>>;
  getTrialBalanceSubSubAccountsSummary?: Maybe<Array<Maybe<TrialBalanceDto2>>>;
  /** Urinary Tract Infection (UTI) */
  getUTI?: Maybe<Scalars['BigDecimal']['output']>;
  getUnProcessClaims?: Maybe<Array<Maybe<BsPhilClaims>>>;
  /** Ventilator Acquired Pneumonia (VAP) */
  getVAP?: Maybe<Scalars['BigDecimal']['output']>;
  getVaccinationRecordsByPatient?: Maybe<Array<Maybe<PatientVaccination>>>;
  /** Get all Ventilator Record Items */
  getVentilatorRecordItems?: Maybe<Array<Maybe<VentilatorRecordItem>>>;
  /** Get all Ventilator Records */
  getVentilatorRecords?: Maybe<Array<Maybe<VentilatorRecord>>>;
  get_all_biometric_device?: Maybe<Array<Maybe<BiometricDevice>>>;
  get_all_comlogik_items?: Maybe<JsonObject>;
  get_all_diet_logs?: Maybe<Page_DietLog>;
  get_all_diets?: Maybe<Page_Diet>;
  get_attlog?: Maybe<GraphQlRetVal_List_AttLogDto>;
  get_biometric_service_config?: Maybe<GraphQlRetVal_BiometricServiceConfig>;
  get_biometrics_attlog?: Maybe<GraphQlRetVal_List_AttLogDto>;
  get_bundy_users?: Maybe<GraphQlRetVal_BundyUserDtoArray>;
  /** object for material production */
  get_material_production?: Maybe<MaterialProduction>;
  /** object for material production */
  get_material_production_items?: Maybe<Page_MaterialProductionItem>;
  /** Get all physician */
  get_physician?: Maybe<Array<Maybe<Physician>>>;
  /** get po object */
  get_po?: Maybe<PurchaseOrder>;
  /** get po Item List Where reportReceiving is null */
  get_poItems?: Maybe<Array<Maybe<PurchaseOrderItems>>>;
  /** get pr items */
  get_pr_items_by_id?: Maybe<Array<Maybe<PurchaseRequestItem>>>;
  /** get pr items */
  get_pr_items_by_multiple_prNos?: Maybe<Array<Maybe<PurchaseRequestItem>>>;
  /** get all purchase request */
  get_pr_list?: Maybe<Array<Maybe<PurchaseRequest>>>;
  /** Get all rooms */
  get_rooms?: Maybe<Array<Maybe<ClinicRoom>>>;
  /** Get all Group Policies */
  groupPolicies?: Maybe<Array<Maybe<GroupPolicy>>>;
  guaranteedListFiltered?: Maybe<GuaranteedDto>;
  hciInvoiceItemTotalCWT?: Maybe<Scalars['BigDecimal']['output']>;
  hciInvoiceItemTotalVat?: Maybe<Scalars['BigDecimal']['output']>;
  hospOptDischargesMorbidity?: Maybe<HospitalDischargeMorbidityDto>;
  hospOptDischargesMorbidityV2?: Maybe<HospitalDischargeMorbidityDto>;
  hospOptDischargesMortalityV2?: Maybe<HospitalDischargeMorbidityDto>;
  /** This function allow users to push II. Hospital Operations: B. Discharges - Type of Service and Total Discharges According to Specialty */
  hospOptDischargesSpecialty?: Maybe<Array<Maybe<HospOptDischargesSpecialty>>>;
  /** This function allow users to push II. Hospital Operations: B. Discharges - Type of Service and Total Discharges According to Specialty */
  hospOptDischargesSpecialtyOthers?: Maybe<Array<Maybe<HospOptDischargesSpecialtyOthers>>>;
  /** This function allow users to push II. Hospital Operations: Summary of Patients in the Hospital. */
  hospOptSummaryOfPatients?: Maybe<HospOptSummaryOfPatients>;
  hospitalItems?: Maybe<Page_BillingItem>;
  /** get hospital information */
  hospital_info?: Maybe<HospitalInfo>;
  incomeStatementDetails?: Maybe<ReportDetailsPageDto>;
  /** Get all insurance companies */
  insuranceCompanies?: Maybe<Array<Maybe<InsuranceCompany>>>;
  /** Get Intake By Id */
  intake?: Maybe<Intake>;
  /** Get all intakes */
  intakes?: Maybe<Array<Maybe<Intake>>>;
  /** Get all Intakes by Case Id */
  intakesByCase?: Maybe<Array<Maybe<Intake>>>;
  /** Get all Intakes by Case Id */
  intakesByCasePageable?: Maybe<Page_Intake>;
  /** Get all intakes grouped by date */
  intakesGroupedByDate?: Maybe<Array<Maybe<ShiftDto>>>;
  /** Get all intakes grouped by date */
  intakesGroupedByDateV2?: Maybe<Array<Maybe<GroupedIntakes>>>;
  /** Get all today Intakes */
  intakesToday?: Maybe<Intake>;
  /** Get all 24hrs Intakes */
  intakesWithin24hrs?: Maybe<Intake>;
  integrationById?: Maybe<Integration>;
  integrationGroupItemList?: Maybe<Page_Integration>;
  integrationGroupList?: Maybe<Array<Maybe<IntegrationGroup>>>;
  integrationItemsByIntegrationId?: Maybe<Page_IntegrationItem>;
  /** Integration List */
  integrationList?: Maybe<Array<Maybe<Integration>>>;
  /** transaction type by tag */
  inventoryBarcode?: Maybe<Inventory>;
  /** List of Inventiry by dep */
  inventoryByDate?: Maybe<InventoryDto>;
  /** List of Inventory Items */
  inventoryItemsByFilter?: Maybe<Array<Maybe<Inventory>>>;
  /** List of Inventory Ledger */
  inventoryLedgerList?: Maybe<Array<Maybe<InventoryLedger>>>;
  /** transaction type by tag */
  inventoryListByDepStatus?: Maybe<Array<Maybe<Inventory>>>;
  inventoryListPageable?: Maybe<Page_Inventory>;
  inventoryListPageableByDep?: Maybe<Page_Inventory>;
  inventoryListPageableByDepStatus?: Maybe<Page_Inventory>;
  inventoryOutputPageable?: Maybe<Page_Inventory>;
  inventorySourcePageable?: Maybe<Page_Inventory>;
  inventorySupplierListPageable?: Maybe<Page_SupplierInventory>;
  /** List of Inventory filtered by department */
  inventory_list?: Maybe<Array<Maybe<Inventory>>>;
  /** List of Inventory Medicine filtered by department */
  inventory_list_by_medicine?: Maybe<Array<Maybe<Inventory>>>;
  /** List of Inventory Medicine filtered by department Pageable */
  inventory_list_by_medicine_pageable?: Maybe<Page_InventoryItem>;
  /** List of Inventory Supplies filtered by department */
  inventory_list_by_supplies?: Maybe<Array<Maybe<Inventory>>>;
  /** List of Inventory Supplies filtered by department Pageable */
  inventory_list_by_supplies_pageable?: Maybe<Page_InventoryItem>;
  /** List of Inventory filtered by department */
  inventory_list_pageable?: Maybe<Page_Inventory>;
  /** List of Inventory filtered by department */
  inventory_list_pageable_non_production?: Maybe<Page_Inventory>;
  /** List of Inventory filtered by department */
  inventory_list_paged?: Maybe<Page_Inventory>;
  investorAttachments?: Maybe<Array<Maybe<InvestorAttachment>>>;
  investorById?: Maybe<Investor>;
  investorIdFullnameDtoList?: Maybe<Array<Maybe<InvestorIdFullNameDto>>>;
  investorSubscriptions?: Maybe<Investor>;
  investors?: Maybe<Page_Investor>;
  /** List of Inventory filtered by department */
  invetory_list_all_pageable?: Maybe<Page_Inventory>;
  invoiceItemAmountSum?: Maybe<Scalars['BigDecimal']['output']>;
  /** Summary of intakes/ouputs by shifts */
  ioByShifts?: Maybe<Array<Maybe<IntakeOutputDto>>>;
  /** Check if Category Code exists */
  isAcctCategoryCodeUnique?: Maybe<Scalars['Boolean']['output']>;
  /** Check if Category Name exists */
  isAcctCategoryNameUnique?: Maybe<Scalars['Boolean']['output']>;
  /** status of  */
  isCreditLimitReached?: Maybe<CreditLimitDto>;
  /** Check if departmentCode exists */
  isDepartmentCodeUnique?: Maybe<Scalars['Boolean']['output']>;
  /** Check if departmentName exists */
  isDepartmentNameUnique?: Maybe<Scalars['Boolean']['output']>;
  /** Check if Generic Code exists */
  isGenericCodeUnique?: Maybe<Scalars['Boolean']['output']>;
  /** Check if Generic Name exists */
  isGenericNameUnique?: Maybe<Scalars['Boolean']['output']>;
  /** Check if Item Category Code exists */
  isItemCategoryCodeUnique?: Maybe<Scalars['Boolean']['output']>;
  /** Check if itemCategoryName exists */
  isItemCategoryNameUnique?: Maybe<Scalars['Boolean']['output']>;
  /** Check if Item Group exists */
  isItemGroupCodeUnique?: Maybe<Scalars['Boolean']['output']>;
  /** Check if itemGroupName exists */
  isItemGroupNameUnique?: Maybe<Scalars['Boolean']['output']>;
  /** Check if username exists */
  isLoginUnique?: Maybe<Scalars['Boolean']['output']>;
  /** Check if PaymentTermCode exists */
  isPaymentTermCodeUnique?: Maybe<Scalars['Boolean']['output']>;
  /** Check if PaymentTermName exists */
  isPaymentTermNameUnique?: Maybe<Scalars['Boolean']['output']>;
  /** Check if Supplier Code exists */
  isSupplierCodeUnique?: Maybe<Scalars['Boolean']['output']>;
  /** Check if Supplier Name exists */
  isSupplierNameUnique?: Maybe<Scalars['Boolean']['output']>;
  /** Check if Supplier Type Name exists */
  isSupplierTypeNameUnique?: Maybe<Scalars['Boolean']['output']>;
  /** Check if Supplier Type Code exists */
  isSupplierTypeUnique?: Maybe<Scalars['Boolean']['output']>;
  /** Check if Unit Measurement exists */
  isUnitMeasurementCodeUnique?: Maybe<Scalars['Boolean']['output']>;
  /** Check if Unit Measurement exists */
  isUnitMeasurementNameUnique?: Maybe<Scalars['Boolean']['output']>;
  issuanceBarcode?: Maybe<IssuanceBarcodeItemDto>;
  issuanceJournalView?: Maybe<Array<Maybe<JournalEntryViewDto>>>;
  /** Get Item By Id */
  item?: Maybe<Item>;
  /** List of Category by Group */
  itemCategoryByGroup?: Maybe<Array<Maybe<ItemCategory>>>;
  /** List of Item Category */
  itemCategoryFilter?: Maybe<Array<Maybe<ItemCategory>>>;
  /** List of Item Category */
  itemCategoryList?: Maybe<Array<Maybe<ItemCategory>>>;
  itemCategoryPage?: Maybe<Page_ItemCategory>;
  /** List of Active Item Groups */
  itemGroupActive?: Maybe<Array<Maybe<ItemGroup>>>;
  /** List of Item Groups */
  itemGroupFilter?: Maybe<Array<Maybe<ItemGroup>>>;
  /** List of Item Groups */
  itemGroupList?: Maybe<Array<Maybe<ItemGroup>>>;
  /** List of Supplies/Medicine Price List */
  itemPriceList?: Maybe<Array<Maybe<ItemPriceList>>>;
  /** List of Items */
  items?: Maybe<Array<Maybe<Item>>>;
  /** List of Items */
  itemsByFilter?: Maybe<Array<Maybe<Item>>>;
  /** List of Production Items */
  itemsByFilterAndIsNotProductionPageable?: Maybe<Page_Item>;
  /** List of Items Limit 10 */
  itemsByFilterLimited?: Maybe<Array<Maybe<Item>>>;
  /** List of Production Items */
  itemsByFilterOnly?: Maybe<Page_Item>;
  /** List of Items */
  itemsFilter?: Maybe<Array<Maybe<Item>>>;
  /** List of Items */
  itemsFilterPageable?: Maybe<Page_Item>;
  /** List of Items */
  itemsPageFilter?: Maybe<Page_Item>;
  /** List of Items */
  itemsPageable?: Maybe<Page_Item>;
  /** Get active job titles */
  jobTitleActive?: Maybe<Array<Maybe<JobTitle>>>;
  /** Get job title by id */
  jobTitleById?: Maybe<JobTitle>;
  /** Get all job titles */
  jobTitleList?: Maybe<Array<Maybe<JobTitle>>>;
  /** Get latest NeuroVitalSign */
  latestNeuroVitalSign?: Maybe<NeuroVitalSign>;
  /** Get latest VitalSign */
  latestVitalSign?: Maybe<VitalSign>;
  /** Get one employee leave request */
  leaveRequest?: Maybe<EmployeeRequest>;
  ledgerView?: Maybe<Array<Maybe<JournalEntryViewDto>>>;
  /** Ledger View Listing */
  ledgerViewList?: Maybe<LedgerViewContainer>;
  /** Ledger View Listing */
  ledgerViewListV2?: Maybe<LedgerView>;
  listPageablePaymentTransactionTypes?: Maybe<Page_PaymentTransactionType>;
  listSalesReportDetailed?: Maybe<Array<Maybe<SalesReportDetailedDto>>>;
  loanAccountById?: Maybe<GraphQlRetVal_LoanAccounts>;
  loanAccounts?: Maybe<Page_LoanAccounts>;
  loanMCostOFLoan?: Maybe<Scalars['BigDecimal']['output']>;
  loanMFV?: Maybe<Scalars['BigDecimal']['output']>;
  loanMIPMT?: Maybe<Scalars['BigDecimal']['output']>;
  loanMInterestRate?: Maybe<Scalars['BigDecimal']['output']>;
  loanMLoanAmortization?: Maybe<Array<Maybe<Scalars['Map_String_ObjectScalar']['output']>>>;
  loanMLoanPayments?: Maybe<Scalars['Map_String_ObjectScalar']['output']>;
  loanMNumberOfPayments?: Maybe<Scalars['Int']['output']>;
  /** One of the financial functions, calculates the payment for a loan based on constant payments and a constant interest rate. */
  loanMPMT?: Maybe<Scalars['Map_String_BigDecimalScalar']['output']>;
  loanMViewPaidLoan?: Maybe<GraphQlRetVal_List_Map_String_Object>;
  loanMViewStartingEntry?: Maybe<GraphQlRetVal_List_Map_String_Object>;
  loanManagementById?: Maybe<GraphQlRetVal_Loan>;
  loanManagements?: Maybe<Page_Loan>;
  /** get login configuration */
  login_config?: Maybe<LoginConfiguration>;
  /** Get Managing Physician By Id */
  managingPhysician?: Maybe<ManagingPhysician>;
  /** Get all patient managing physicians by Case Id */
  managingPhysiciansByCase?: Maybe<Array<Maybe<ManagingPhysician>>>;
  /** Get all patient managing staff by Case Id */
  managingStaffByCase?: Maybe<Array<Maybe<ManagingPhysician>>>;
  /** Filter Event Calendar between two dates. */
  mapEventsToDates?: Maybe<Scalars['Map_String_List_EventCalendarScalar']['output']>;
  markupItemList?: Maybe<Array<Maybe<Markup>>>;
  /** List of Markups Items */
  markupList?: Maybe<Array<Maybe<Markup>>>;
  /** List of Markups Items */
  markupListPageable?: Maybe<Page_Markup>;
  markupPageable?: Maybe<Page_Markup>;
  materialAccountView?: Maybe<Array<Maybe<JournalEntryViewDto>>>;
  /** list of all material production with pagination */
  material_production_list?: Maybe<Page_MaterialProduction>;
  /** List of Items */
  measureFilterPage?: Maybe<Page_UnitMeasurement>;
  /** Get Medication By Id */
  medication?: Maybe<Medication>;
  /** Get all Administrations by Medication Id */
  medicationAdministrations?: Maybe<Array<Maybe<Administration>>>;
  /** Get all Administrations by Case Id */
  medicationAdministrationsByCase?: Maybe<Array<Maybe<Administration>>>;
  /** Get all Medications */
  medications?: Maybe<Array<Maybe<Medication>>>;
  /** Get all Medications by Case Id */
  medicationsByCase?: Maybe<Array<Maybe<Medication>>>;
  /** Get all Medications by Case Id and Type */
  medicationsByCaseAndType?: Maybe<Array<Maybe<Medication>>>;
  /** List of Medicines */
  medicines?: Maybe<Array<Maybe<Item>>>;
  motherAccountsListWithNoSetup?: Maybe<Array<Maybe<ChartOfAccount>>>;
  /** List of Mother Accounts */
  motherAccountsPage?: Maybe<Page_ChartOfAccount>;
  /** Search all cities */
  municipalities?: Maybe<Array<Maybe<Municipality>>>;
  /** Get All My Notifications */
  mynotifications?: Maybe<Array<Maybe<Notification>>>;
  /** Get All My Notifications */
  myownnotifications?: Maybe<Array<Maybe<Notification>>>;
  /** Get NeuroVitalSign By Id */
  neuroVitalSign?: Maybe<NeuroVitalSign>;
  /** Get all NeuroVitalSigns */
  neuroVitalSigns?: Maybe<Array<Maybe<NeuroVitalSign>>>;
  /** Get all NeuroVitalSigns by Case Id */
  neuroVitalSignsByCase?: Maybe<Array<Maybe<NeuroVitalSign>>>;
  /** List of non-fluid Medicines */
  nonFluidMedicines?: Maybe<Array<Maybe<Item>>>;
  /** Get NurseNote By Id */
  nurseNote?: Maybe<NurseNote>;
  /** Get all NurseNotes */
  nurseNotes?: Maybe<Array<Maybe<NurseNote>>>;
  /** Get all NurseNotes by Case Id */
  nurseNotesByCase?: Maybe<Array<Maybe<NurseNote>>>;
  nurseNotesByCasePageable?: Maybe<Page_NurseNote>;
  nurseNotesById?: Maybe<NurseNoteService>;
  /** Get all O2 flow rates */
  o2FlowRates?: Maybe<Array<Maybe<FlowRate>>>;
  /** Get all o2_administrations */
  o2_administrations?: Maybe<Array<Maybe<O2Administration>>>;
  /** Get Occupational Therapy Note By Id */
  occupationalTherapyNote?: Maybe<OccupationalTherapyNote>;
  /** List of Inventory filtered by department */
  onHandReport?: Maybe<Array<Maybe<OnHandReport>>>;
  oneInvestorAttachments?: Maybe<InvestorAttachment>;
  /** get operational config */
  operational_config?: Maybe<OperationalConfiguration>;
  /** Get OrderSlip By Id */
  orderSlip?: Maybe<Orderslip>;
  orderSlipItemPackageByParent?: Maybe<Array<Maybe<OrderSlipItemPackageContent>>>;
  orderSlipItemPackageList?: Maybe<Array<Maybe<OrderSlipItemPackageContent>>>;
  /** Get all OrderSlip Items */
  orderSlipItemsByCategory?: Maybe<Page_OrderSlipItem>;
  /** Get All Orderslips by OrderSlip No */
  orderSlipItemsByOrderSlipNo?: Maybe<Array<Maybe<OrderSlipItem>>>;
  /** Get All Order Slips by Case */
  orderSlipsByCase?: Maybe<Array<Maybe<Orderslip>>>;
  /** Get All OrderslipItem Items by Department */
  orderSlipsByDepartment?: Maybe<Array<Maybe<OrderSlipItem>>>;
  /** Get All Orderslip Items by Department */
  orderSlipsByDepartment_old?: Maybe<Array<Maybe<Orderslip>>>;
  /** Get All Orderslips by OrderSlip No */
  orderSlipsByNo?: Maybe<Array<Maybe<Orderslip>>>;
  /** Get All Orderslips by OrderSlip No and User Department */
  orderSlipsByNoAndDepartment?: Maybe<Array<Maybe<OrderSlipItem>>>;
  /** Get All Orderslips */
  orderslips?: Maybe<Array<Maybe<Orderslip>>>;
  /** Get All Orderslips by Filters By Page */
  orderslipsByPatientTypeByPage?: Maybe<Page_Orderslip>;
  /** Get OtherVitalSign By Id */
  otherVitalSign?: Maybe<OtherVitalSign>;
  /** Get all OtherVitalSigns */
  otherVitalSigns?: Maybe<Array<Maybe<OtherVitalSign>>>;
  /** Get all OtherVitalSigns by Case Id */
  otherVitalSignsByCase?: Maybe<Array<Maybe<OtherVitalSign>>>;
  othersById?: Maybe<PettyCashOther>;
  othersByPetty?: Maybe<Array<Maybe<PettyCashOther>>>;
  /** Get Output By Id */
  output?: Maybe<Output>;
  /** Get all Outputs */
  outputs?: Maybe<Array<Maybe<Output>>>;
  /** Get all Outputs by Case Id */
  outputsByCase?: Maybe<Array<Maybe<Output>>>;
  /** Get all Outputs by Case Id */
  outputsByCasePageable?: Maybe<Page_Output>;
  /** Get all outputs grouped by date */
  outputsGroupedByDate?: Maybe<Array<Maybe<ShiftOutputsDto>>>;
  /** Get all outputs grouped by date */
  outputsGroupedByDateV2?: Maybe<Array<Maybe<GroupedOutputs>>>;
  /** Get all today Outputs */
  outputsToday?: Maybe<Output>;
  /** Get all 24hrs Outputs */
  outputsWithin24hrs?: Maybe<Output>;
  /** Get combined Medication Administrations */
  ownMedicationAdministrations?: Maybe<Array<Maybe<AdministrationDto>>>;
  packageById?: Maybe<Package>;
  packageinBilling?: Maybe<Array<Maybe<Package>>>;
  packages?: Maybe<Page_Package>;
  /** Get Parent Departments */
  parentDepartments?: Maybe<Array<Maybe<Department>>>;
  /** Get Patient By Id */
  patient?: Maybe<Patient>;
  patientActiveBillingByCase?: Maybe<Array<Maybe<Billing>>>;
  patientActiveBillingItems?: Maybe<Page_BillingItem>;
  /** Get Patient active Case */
  patientActiveCase?: Maybe<Case>;
  patientCaseSnapshotHistory?: Maybe<Array<Maybe<Hisd3EntityVersionInfoHistory>>>;
  patientCaseView?: Maybe<Page_PatientCaseView>;
  patientCaseViewForReport?: Maybe<Page_PatientCaseView>;
  patientCaseViewForReportList?: Maybe<Array<Maybe<PatientCaseView>>>;
  /** Get Patient Dashboard Census */
  patientDashboardCensus?: Maybe<DashboardCensusDto>;
  /** Get all patientOwnMedicationAdministrations by Medication Id */
  patientOwnMedicationAdministrations?: Maybe<Array<Maybe<PatientOwnMedicineAdministration>>>;
  patientSearchFuzzy?: Maybe<GraphQlRetVal_List_MatchPatientResultDto>;
  patientSearchFuzzyWithOthers?: Maybe<GraphQlRetVal_List_MatchPatientResultDto>;
  patientSnapshotHistory?: Maybe<Array<Maybe<Hisd3EntityVersionInfoHistory>>>;
  /** get all billed medications and outside purchase meds */
  patient_medications?: Maybe<Array<Maybe<ComlogikItemDto>>>;
  /** Get Patient Own Medication By Case ID */
  patient_own_medications?: Maybe<Array<Maybe<PatientOwnMedicine>>>;
  /** Get All Patients */
  patients?: Maybe<Array<Maybe<Patient>>>;
  /** Filter patients */
  patientsByFilter?: Maybe<Array<Maybe<Patient>>>;
  /** Patients Daily Summary */
  patientsDailySummary?: Maybe<Scalars['Map_String_IntegerScalar']['output']>;
  /** Get All Patients */
  patientsListByFilter?: Maybe<Array<Maybe<Patient>>>;
  /** List of Active Payment Term */
  paymentTermActive?: Maybe<Array<Maybe<PaymentTerm>>>;
  /** List of Payment Term */
  paymentTermFilter?: Maybe<Array<Maybe<PaymentTerm>>>;
  /** List of Page Payment */
  paymentTermFilterPage?: Maybe<Page_PaymentTerm>;
  /** List of Payment Term */
  paymentTermList?: Maybe<Array<Maybe<PaymentTerm>>>;
  paymentsTransactionByARId?: Maybe<Array<Maybe<ArTransaction>>>;
  /** Get All payroll */
  payrolls?: Maybe<Array<Maybe<Payroll>>>;
  /** Get all Permissions */
  permissions?: Maybe<Array<Maybe<Permission>>>;
  pettyCashById?: Maybe<PettyCash>;
  pettyCashItemById?: Maybe<PettyCashItem>;
  pettyCashPage?: Maybe<Page_PettyCash>;
  pfCompanyById?: Maybe<ApPfCompany>;
  /** List of AP Pageable */
  pfCompanyPage?: Maybe<Page_ApPfCompany>;
  pfItems?: Maybe<Page_BillingItem>;
  pfNonCompanyById?: Maybe<ApPfNonCompany>;
  /** List of AP Pageable for Non Company PF */
  pfNonCompanyPage?: Maybe<Page_ApPfNonCompany>;
  pharmaInventoryList?: Maybe<Page_PharmaItemList>;
  /** List of pharmacy inventory */
  pharmacyInventoryList?: Maybe<Page_Inventory>;
  /** get pharmacy config */
  pharmacy_config?: Maybe<PharmacyConfiguration>;
  philhealth_details?: Maybe<Array<Maybe<PatientPhilhealthData>>>;
  physicalCountViewPage?: Maybe<Page_PhysicalCountView>;
  /** List of Physical Logs */
  physicalLogs?: Maybe<Array<Maybe<LogsCount>>>;
  /** Get Physical Therapy Note By Id */
  physicalTherapyNote?: Maybe<PhysicalTherapyNote>;
  physicalTransList?: Maybe<Array<Maybe<PhysicalTransaction>>>;
  physicalTransPage?: Maybe<Page_PhysicalTransaction>;
  physicalTransactionById?: Maybe<PhysicalTransaction>;
  /** list of all purchase order */
  poItemList?: Maybe<Array<Maybe<PurchaseOrderItems>>>;
  poItemNotReceiveMonitoring?: Maybe<Array<Maybe<PoItemMonitoring>>>;
  /** list of all purchase order */
  poItemPage?: Maybe<Page_PurchaseOrderItems>;
  /** list of all purchase order */
  poList?: Maybe<Page_PurchaseOrder>;
  poListAll?: Maybe<Array<Maybe<PurchaseOrder>>>;
  /** list of all purchase order */
  poListRange?: Maybe<Page_PurchaseOrder>;
  poNotYetCompleted?: Maybe<Array<Maybe<PurchaseOrder>>>;
  poNotYetCompletedCS?: Maybe<Array<Maybe<PurchaseOrder>>>;
  postItemsBeginning?: Maybe<Array<Maybe<BeginningDetails>>>;
  postPhysicalCountItems?: Maybe<Array<Maybe<PhysicalCountView>>>;
  /** Purchase Request By ID */
  prById?: Maybe<PurchaseRequest>;
  /** Filter Checks */
  printChecks?: Maybe<Page_DisbursementCheck>;
  /** List of pr items by supplier */
  pritem_by_supplier?: Maybe<Array<Maybe<PurchaseOrderDto>>>;
  /** Get all DoctorOrder DoctorOrderItems */
  procedureDoctorOrderItems?: Maybe<Array<Maybe<DoctorOrderItem>>>;
  /** List of Production Items */
  productionItems?: Maybe<Array<Maybe<Item>>>;
  /** Search all provinces */
  provinces?: Maybe<Array<Maybe<Province>>>;
  /** Search all provinces */
  provincesFilter?: Maybe<Array<Maybe<Province>>>;
  purchaseItemsByPetty?: Maybe<Array<Maybe<PettyCashItem>>>;
  /** List of Purchase Request Items By PR Id */
  purchaseRequestItemByPr?: Maybe<Array<Maybe<PurchaseRequestItem>>>;
  /** List of Purchase Request Items */
  purchaseRequestItemList?: Maybe<Array<Maybe<PurchaseRequestItem>>>;
  /** List of Purchase Request */
  purchaseRequestList?: Maybe<Array<Maybe<PurchaseRequest>>>;
  /** List of Purchase Request by Dep */
  purchaseRequestListByDep?: Maybe<Array<Maybe<PurchaseRequest>>>;
  /** List of Purchase Request by Dep */
  purchaseRequestListByDepRange?: Maybe<Array<Maybe<PurchaseRequest>>>;
  /** List of Purchase Request by Dep */
  purchaseRequestListByDepRangePage?: Maybe<Page_PurchaseRequest>;
  /** Get all Purchasing Department */
  purchasingDepartments?: Maybe<Array<Maybe<Department>>>;
  /** List of quantity adjustment type */
  quantityAdjustmentTypeFilter?: Maybe<Array<Maybe<QuantityAdjustmentType>>>;
  /** List of quantity adjustment type */
  quantityAdjustmentTypeList?: Maybe<Array<Maybe<QuantityAdjustmentType>>>;
  /** List of Quantity Adjustment by Item */
  quantityListByItem?: Maybe<Array<Maybe<QuantityAdjustment>>>;
  /** Get all ranged constants */
  rangedConstants?: Maybe<Array<Maybe<RangedConstant>>>;
  reapplicationById?: Maybe<Reapplication>;
  reapplicationPage?: Maybe<Page_Reapplication>;
  reapplicationPageFilter?: Maybe<Page_Reapplication>;
  reapplyAccountView?: Maybe<Array<Maybe<JournalEntryViewDto>>>;
  recAccountView?: Maybe<Array<Maybe<JournalEntryViewDto>>>;
  recJournalView?: Maybe<Array<Maybe<JournalEntryViewDto>>>;
  receiptIssuanceById?: Maybe<ReceiptIssuance>;
  receiptIssuances?: Maybe<Page_ReceiptIssuance>;
  receiptIssuancesByCashier?: Maybe<Page_ReceiptIssuance>;
  receivableDetailedQuery?: Maybe<Array<Maybe<ReceivableDetailedList>>>;
  receivableGuarantorPaymentList?: Maybe<Page_ArTransaction>;
  receivableItemsByARId?: Maybe<Array<Maybe<AccountReceivableItems>>>;
  receivableItemsPersonalList?: Maybe<Page_AccountReceivableItems>;
  receivablePersonalPaymentList?: Maybe<Page_ArTransaction>;
  /** Get all Receiving Department */
  receivingDepartments?: Maybe<Array<Maybe<Department>>>;
  /** list of receiving report */
  receivingReport?: Maybe<Array<Maybe<ReceivingReport>>>;
  /** get receiving report list by dep */
  receivingReportByDep?: Maybe<Array<Maybe<ReceivingReport>>>;
  /** get receiving report items */
  receivingReportItemLists?: Maybe<Array<Maybe<ReceivingReportItem>>>;
  /** get receiving report posted list */
  receivingReportPosted?: Maybe<Array<Maybe<ReceivingReport>>>;
  releaseCheckById?: Maybe<ReleaseCheck>;
  /** Filter Checks */
  releaseChecksFilter?: Maybe<Page_ReleaseCheck>;
  /** Get Results by OrderSilp */
  resultsByCaseId?: Maybe<Array<Maybe<DiagnosticResult>>>;
  /** Get Results by OrderSilp */
  resultsByOrderSlip?: Maybe<Array<Maybe<DiagnosticResult>>>;
  /** Get Results by OrderSilp */
  resultsByPatientId?: Maybe<Array<Maybe<DiagnosticResult>>>;
  /** Get Results by OrderSilp */
  resultsDataByService?: Maybe<Array<Maybe<DiagnosticResult>>>;
  returnJournalView?: Maybe<Array<Maybe<JournalEntryViewDto>>>;
  /** get return supplier list by dep */
  returnSupplierByDep?: Maybe<Array<Maybe<ReturnSupplier>>>;
  /** get return supplier list by dep */
  returnSupplierByDepPage?: Maybe<Page_ReturnSupplier>;
  returnSupplierById?: Maybe<ReturnSupplier>;
  /** get return supplier list Item by Id */
  returnSupplierItemById?: Maybe<Array<Maybe<ReturnSupplierItem>>>;
  /** Get All Department with Revenue Servers flag on */
  revenueCenters?: Maybe<Array<Maybe<Department>>>;
  reverseArLedgerByReference?: Maybe<Scalars['ObjectScalar']['output']>;
  /** Get All Rf Rees */
  rffees?: Maybe<Page_RfFees>;
  /** Get Room By Id */
  room?: Maybe<Room>;
  /** Get all Rooms */
  rooms?: Maybe<Array<Maybe<Room>>>;
  /** Get all Rooms by Department */
  roomsByDepartment?: Maybe<Array<Maybe<Room>>>;
  /** Get Rooms by filter */
  roomsByFilters?: Maybe<Array<Maybe<Room>>>;
  /** Get All RVS Codes */
  rvs_codes?: Maybe<Array<Maybe<RvsCode>>>;
  /** Sales Transaction */
  sales_transaction?: Maybe<SalesTransaction>;
  /** Sales Transaction */
  sales_transaction_item?: Maybe<SalesTransactionItem>;
  /** List of Sale Transaction Items */
  sales_transaction_items?: Maybe<Array<Maybe<SalesTransactionItem>>>;
  /** List of Sale Transaction */
  sales_transaction_list?: Maybe<Array<Maybe<SalesTransaction>>>;
  sampleConvert?: Maybe<Scalars['Instant']['output']>;
  sampleVatIin?: Maybe<Scalars['BigDecimal']['output']>;
  scheduleAllList?: Maybe<Array<Maybe<AppointmentSchedule>>>;
  scheduleById?: Maybe<AppointmentSchedule>;
  scheduleByStatus?: Maybe<Array<Maybe<AppointmentSchedule>>>;
  schedulePage?: Maybe<Page_AppointmentSchedule>;
  scheduleTimeAllList?: Maybe<Array<Maybe<AppointmentScheduleTime>>>;
  scheduleTimeById?: Maybe<AppointmentScheduleTime>;
  /** Search employees */
  searchActiveEmployeesPageable?: Maybe<Page_Employee>;
  searchBSchItemPerBillItemIdAndAmt?: Maybe<Array<Maybe<BillingScheduleItems>>>;
  /** Get All DOH ICD Categories */
  searchCategories?: Maybe<Array<Maybe<DohIcdCategory>>>;
  /** Get All DOH ICD Categories */
  searchCategoriesPageable?: Maybe<Page_DohIcdCategory>;
  /** Search COA by Page */
  searchCoaByPage?: Maybe<Page_ChartOfAccount>;
  /** Get All DOH ICD Codes */
  searchDOHICDCodes?: Maybe<Array<Maybe<DohIcdCode>>>;
  /** Get All DOH ICD Codes */
  searchDOHICDCodesPageable?: Maybe<Page_DohIcdCode>;
  /** Get All DOH Surgery Codes */
  searchDOHSurgeryCodes?: Maybe<Array<Maybe<DohSurgeryCode>>>;
  /** Get All DOH Surgery Codes */
  searchDOHSurgeryCodesPageable?: Maybe<Page_DohSurgeryCode>;
  searchEmployeePermissionRole?: Maybe<Page_Employee>;
  /** Search employees */
  searchEmployees?: Maybe<Array<Maybe<Employee>>>;
  /** Search employees by allowed to co-manage */
  searchEmployeesByAllowedCoManage?: Maybe<Array<Maybe<Employee>>>;
  /** Search employees by role */
  searchEmployeesByRole?: Maybe<Array<Maybe<Employee>>>;
  /** Search employees by role */
  searchEmployeesByRoleId?: Maybe<Array<Maybe<Employee>>>;
  /** Search employees */
  searchEmployeesPageable?: Maybe<Page_Employee>;
  /** Search employees salary */
  searchEmployeesSalaryPageable?: Maybe<Page_EmployeeDepartmentSalaryDto>;
  /** search ICD Codes */
  searchICDCodes?: Maybe<Array<Maybe<IcdCode>>>;
  /** search ICD Codes */
  searchICDCodesPageable?: Maybe<Page_IcdCode>;
  /**
   * Search by
   *  breaking down full name
   */
  searchMatchingIdentity?: Maybe<Array<Maybe<PatientCaseView>>>;
  searchORForApplication?: Maybe<PaymentTracker>;
  /** Search Patient Pin */
  searchPatientPin?: Maybe<Scalars['ObjectScalar']['output']>;
  /** Search patients */
  searchPatients?: Maybe<Array<Maybe<Patient>>>;
  /** Search patients pageable */
  searchPatientsPageable?: Maybe<Page_Patient>;
  /** search RVS Codes */
  searchRVSCodes?: Maybe<Array<Maybe<RvsCode>>>;
  /** search RVS Codes */
  searchRVSCodesPageable?: Maybe<Page_RvsCode>;
  /** Search Services */
  searchServices?: Maybe<Array<Maybe<Service>>>;
  /** Search Services by Page */
  searchServicesByDefaultPage?: Maybe<Page_Service>;
  /** Search Services by Department */
  searchServicesByDepartment?: Maybe<Array<Maybe<Service>>>;
  /** Search Services by Department */
  searchServicesByDepartmentPageable?: Maybe<Page_Service>;
  /** Search Services by Page */
  searchServicesByPage?: Maybe<Page_Service>;
  /** Search Services For Doctors Orders */
  searchServicesForDoctorsOrders?: Maybe<Array<Maybe<Service>>>;
  /** Search stock request */
  searchStockRequest?: Maybe<Array<Maybe<StockRequest>>>;
  /** Search Services by Department */
  searchTieredServicesByDepartment?: Maybe<Array<Maybe<TieredService>>>;
  /** Search Transfers */
  searchTransfers?: Maybe<Array<Maybe<Transfer>>>;
  /** Search Transfers by patient */
  searchTransfersByPatient?: Maybe<Array<Maybe<Transfer>>>;
  /** Get All Service */
  services?: Maybe<Array<Maybe<Service>>>;
  servicesByDepartment?: Maybe<Page_Service>;
  set_biometrics_uid?: Maybe<GraphQlRetVal_String>;
  /** Get Shift By Id */
  shift?: Maybe<Shift>;
  /** Get all shifts */
  shifts?: Maybe<Array<Maybe<Shift>>>;
  showAllArTransfer?: Maybe<Page_ArTransfer>;
  /** List of Signature per type */
  signatureList?: Maybe<Array<Maybe<Signature>>>;
  /** List of Signature per type */
  signatureListFilter?: Maybe<Array<Maybe<Signature>>>;
  /** get doctor specialties */
  specialties?: Maybe<Array<Maybe<Specialty>>>;
  /** Get Speech Therapy Note By Id */
  speechTherapyNote?: Maybe<SpeechTherapyNote>;
  /** Search all provinces */
  stateProvinces?: Maybe<Array<Maybe<ProvinceState>>>;
  /** List of Stock Card */
  stockCard?: Maybe<Array<Maybe<StockCard>>>;
  /** List of Stock Card */
  stockCardAll?: Maybe<Array<Maybe<StockCard>>>;
  /** List of Stock Card with filter */
  stockCardFilter?: Maybe<Array<Maybe<StockCard>>>;
  /** List of Stock Card List */
  stockCardList?: Maybe<Array<Maybe<StockCard>>>;
  /** Get all Department that allow request */
  stockRequestDepartments?: Maybe<Array<Maybe<Department>>>;
  /** List of Stock Requests */
  stockrequests?: Maybe<Array<Maybe<StockRequest>>>;
  subaccountTypeAll?: Maybe<Array<Maybe<Scalars['Map_String_StringScalar']['output']>>>;
  /** List of Suppliers */
  supplier?: Maybe<Supplier>;
  /** List of Active Supplier */
  supplierActive?: Maybe<Array<Maybe<Supplier>>>;
  supplierBarcode?: Maybe<SupplierBarcodeItemDto>;
  /** List of Suppliers */
  supplierById?: Maybe<Supplier>;
  /** Get one supplier by investor ID */
  supplierByInvstorId?: Maybe<Supplier>;
  /** List of Page Supplier Item */
  supplierItemPage?: Maybe<Page_SupplierItem>;
  /** List of Active Supplier Types */
  supplierTypeActive?: Maybe<Array<Maybe<SupplierType>>>;
  /** List of Active Supplier Types */
  supplierTypeActiveFilter?: Maybe<Array<Maybe<SupplierType>>>;
  /** List of Supplier Types */
  supplierTypeFilter?: Maybe<Array<Maybe<SupplierType>>>;
  /** List of Page Supplier Type */
  supplierTypeFilterPage?: Maybe<Page_SupplierType>;
  /** List of Supplier Types */
  supplierTypeList?: Maybe<Array<Maybe<SupplierType>>>;
  /** List of supplier base on pr items */
  supplier_by_pr?: Maybe<Array<Maybe<Supplier>>>;
  /** List of Suppliers */
  supplier_list?: Maybe<Array<Maybe<Supplier>>>;
  /** List of Suppliers per entity */
  supplier_list_by_supp_entity_pageable?: Maybe<Page_Supplier>;
  /** List of Suppliers */
  supplier_list_by_type_pageable_active?: Maybe<Page_Supplier>;
  /** List of Suppliers */
  supplier_list_pageable?: Maybe<Page_Supplier>;
  /** List of Suppliers */
  supplier_list_pageable_active?: Maybe<Page_Supplier>;
  /** List of Supplies */
  supplies?: Maybe<Array<Maybe<Item>>>;
  /** List of Supplies */
  supplyItemsBySupplier?: Maybe<Array<Maybe<SupplierItem>>>;
  terminals?: Maybe<Array<Maybe<CashierTerminal>>>;
  testLeaveSchedule?: Maybe<Scalars['Map_String_ObjectScalar']['output']>;
  testProcedurePageable?: Maybe<Page_TestProcedureType>;
  timeBySchedule?: Maybe<Array<Maybe<AppointmentScheduleTime>>>;
  timeByScheduleActive?: Maybe<Array<Maybe<AppointmentScheduleTime>>>;
  timeByScheduleFilter?: Maybe<Array<Maybe<AppointmentScheduleTime>>>;
  /** Get All timekeepings */
  timekeepings?: Maybe<Array<Maybe<Timekeeping>>>;
  top_10_morbidity_cases?: Maybe<Array<Maybe<Scalars['Map_String_ObjectScalar']['output']>>>;
  top_10_mortality_cases?: Maybe<Array<Maybe<Scalars['Map_String_ObjectScalar']['output']>>>;
  top_10_mortality_casesV2?: Maybe<Array<Maybe<Scalars['Map_String_ObjectScalar']['output']>>>;
  totalDiscount?: Maybe<Scalars['BigDecimal']['output']>;
  totalGross?: Maybe<Scalars['BigDecimal']['output']>;
  /** total all intakes */
  totalIntakes?: Maybe<Intake>;
  totalNetSales?: Maybe<Scalars['BigDecimal']['output']>;
  /** total all intakes */
  totalOutputs?: Maybe<Output>;
  totalSumPostBeginning?: Maybe<Scalars['BigDecimal']['output']>;
  transTypeById?: Maybe<TransactionType>;
  /** transaction type by tag */
  transTypeByTag?: Maybe<Array<Maybe<TransactionType>>>;
  /** transaction type by tag */
  transTypeByTagFilter?: Maybe<Array<Maybe<TransactionType>>>;
  /** transaction type by type */
  transTypeByType?: Maybe<Array<Maybe<ExpenseTransaction>>>;
  /** transaction type by tag */
  transTypeReceiving?: Maybe<Array<Maybe<TransactionType>>>;
  /** Transaction Journals */
  transactionJournal2?: Maybe<Page_TransactionJournalDto>;
  /** Transaction Journals */
  transactionJournalReferenceEntity?: Maybe<Page_HeaderLedger>;
  /** Transaction Journals */
  transactionJournalReferenceEntityWithPartition?: Maybe<Page_HeaderLedger>;
  /** Transaction Journals */
  transactionJournalWithPartition?: Maybe<Page_TransactionJournalDto>;
  /** Transaction List */
  transactionList?: Maybe<Array<Maybe<TransactionType>>>;
  /** Get Transfer By Id */
  transfer?: Maybe<Transfer>;
  /** Get All Transfers */
  transfers?: Maybe<Array<Maybe<Transfer>>>;
  /** Transfers by case ID */
  transfersByCase?: Maybe<Array<Maybe<Transfer>>>;
  /** Transfers by case ID */
  transfersByCaseWithRooms?: Maybe<Array<Maybe<Transfer>>>;
  /** Transfers by case ID */
  transfersDepartmentsByCase?: Maybe<Array<Maybe<Department>>>;
  trialBalanceAccounts?: Maybe<Array<Maybe<TrialBalanceDto>>>;
  trialBalanceAccountsDetails?: Maybe<ReportDetailsPageDto>;
  unTrackedClaims?: Maybe<Array<Maybe<AccountReceivableItems>>>;
  /** Get all Unbilled OrderSlip Items */
  unbilledOrderslipItems?: Maybe<Page_OrderSlipItem>;
  /** List of Active Unit Measurement */
  unitMeasurementActive?: Maybe<Array<Maybe<UnitMeasurement>>>;
  /** List of Unit Measurement */
  unitMeasurementFilter?: Maybe<Array<Maybe<UnitMeasurement>>>;
  /** List of Unit Measurement */
  unitMeasurementList?: Maybe<Array<Maybe<UnitMeasurement>>>;
  /** List of Unit Measurement (Big Unit) */
  unitOfPurchase?: Maybe<Array<Maybe<UnitMeasurement>>>;
  /** List of Unit Measurement (Small Unit) */
  unitOfUsage?: Maybe<Array<Maybe<UnitMeasurement>>>;
  unpaidSubscriptions?: Maybe<Array<Maybe<Subscription>>>;
  /** Get all Vaccination */
  vaccination?: Maybe<Array<Maybe<Vaccination>>>;
  /** Get Vaccination by Patient */
  vaccinationSearchByPatient?: Maybe<Array<Maybe<Vaccination>>>;
  version?: Maybe<Scalars['String']['output']>;
  viewARListDetails?: Maybe<Array<Maybe<Scalars['Map_String_List_JournalEntryViewDtoScalar']['output']>>>;
  viewARTransactionByType?: Maybe<Page_ArTransaction>;
  viewARTransactionJournal?: Maybe<Array<Maybe<JournalEntryViewDto>>>;
  viewNextPOCodeByType?: Maybe<GraphQlResVal_String>;
  viewTransactionAccountPosted?: Maybe<HeaderLedger>;
  viewTransactionJournalEntry?: Maybe<Array<Maybe<JournalEntryViewDto>>>;
  /** Get VitalSign By Id */
  vitalSign?: Maybe<VitalSign>;
  /** Get all VitalSigns */
  vitalSigns?: Maybe<Array<Maybe<VitalSign>>>;
  /** Get all VitalSigns by Case Id */
  vitalSignsByCase?: Maybe<Array<Maybe<VitalSign>>>;
  /** Get all VitalSigns by Case Id */
  vitalSignsForChart?: Maybe<Array<Maybe<VitalSign>>>;
  voidArLedgerByAr?: Maybe<Scalars['ObjectScalar']['output']>;
  voidStockIssueJournalEntry?: Maybe<Scalars['Boolean']['output']>;
  voidTransactionById?: Maybe<Scalars['ObjectScalar']['output']>;
  wtxById?: Maybe<Wtx2307>;
  wtxConById?: Maybe<Wtx2307Consolidated>;
  /** Transaction List */
  wtxConList?: Maybe<Array<Maybe<Wtx2307Consolidated>>>;
  wtxConListPage?: Maybe<Page_Wtx2307Consolidated>;
  /** Transaction List */
  wtxList?: Maybe<Array<Maybe<Wtx2307>>>;
  wtxListByRef?: Maybe<Array<Maybe<Wtx2307>>>;
  wtxListPage?: Maybe<Page_Wtx2307>;
};


/** Query root */
export type QueryAccReceivableItemForPhicArgs = {
  account?: InputMaybe<Scalars['UUID']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryAccReceivableItemPerGuarantorListArgs = {
  account?: InputMaybe<Scalars['UUID']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryAncillaryByOrderSlipItemArgs = {
  id?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryAncillaryNotesArgs = {
  pkId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryBillingSchedulePerGroupGuarantorArgs = {
  accounts?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


/** Query root */
export type QueryErConsultationArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryErdConsultationV2Args = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryIncomeStatementByFormatArgs = {
  end?: InputMaybe<Scalars['String']['input']>;
  format?: InputMaybe<Array<InputMaybe<IncomeStatementFormatInput>>>;
  period?: InputMaybe<Scalars['Int']['input']>;
  start?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryItemExpenseArgs = {
  end?: InputMaybe<Scalars['Instant']['input']>;
  expenseFrom?: InputMaybe<Scalars['UUID']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  start?: InputMaybe<Scalars['Instant']['input']>;
};


/** Query root */
export type QueryItemIssueArgs = {
  end?: InputMaybe<Scalars['Instant']['input']>;
  expenseFrom?: InputMaybe<Scalars['UUID']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  start?: InputMaybe<Scalars['Instant']['input']>;
};


/** Query root */
export type QueryOpdConsultationArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryOpdConsultationV2Args = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryRequestIncomingArgs = {
  dep?: InputMaybe<Scalars['UUID']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryRequestOutgoingArgs = {
  dep?: InputMaybe<Scalars['UUID']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryServiceArgs = {
  id?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryStockIssueItemsByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryStockRequestItemsByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryStockRequestItemsByStockIssueIdArgs = {
  stock_issue_id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryAccountBalancesByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryAccountBalancesCoaListArgs = {
  motherAccountCode?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


/** Query root */
export type QueryAccountConfigByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryAccountConfigByTagArgs = {
  tag?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryAccountConfigByTypeIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryAccountConfigParentArgs = {
  parent?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryAccountListByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryAccountReceivableArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryAccountReceivableManualArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryAccountReceivablePerCompanyArgs = {
  companyId?: InputMaybe<Scalars['UUID']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryAccountReceivablePerGroupGuarantorArgs = {
  accounts?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryAccountReceivablePerPersonalAccountArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  personalAccount?: InputMaybe<Scalars['UUID']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryAccountingCategoryPageArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryActiveBillingListArgs = {
  caseId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryActiveItemsFilterArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryAdjQuantityAccountViewArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryAdministrationArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryAgeReceivableArByDateArgs = {
  accountReceivable?: InputMaybe<Scalars['UUID']['input']>;
  dateEnd?: InputMaybe<Scalars['String']['input']>;
  dateStart?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryAgtPatientByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryAgtPatientPageArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryAllAttachmentArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryAllPurchaseRequestItemsArgs = {
  prId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryAllSupplyItemsBySupplierArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryApAccountViewArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  status?: InputMaybe<Scalars['Boolean']['input']>;
};


/** Query root */
export type QueryApAgingDetailedArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  posted?: InputMaybe<Scalars['Boolean']['input']>;
  supplier?: InputMaybe<Scalars['UUID']['input']>;
  supplierTypes?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryApAgingSummaryArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  posted?: InputMaybe<Scalars['Boolean']['input']>;
  supplierTypes?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryApAppByDisArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryApApplicationByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryApByDisArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryApByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryApDebitMemoArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryApDetailsByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryApLedgerArgs = {
  end?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  start?: InputMaybe<Scalars['String']['input']>;
  supplier?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryApLedgerByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryApLedgerByRefArgs = {
  refNo?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryApLedgerBySupplierArgs = {
  supplier?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryApLedgerFilterArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  supplier?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryApListBySupplierFilterArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
  supplier?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryApListFilterArgs = {
  end?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
  start?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['Boolean']['input']>;
  supplier?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryApReadersFeeByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryApReadersFeeListArgs = {
  dep?: InputMaybe<Scalars['UUID']['input']>;
  end?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
  start?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['Boolean']['input']>;
  supplier?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryApReadersListArgs = {
  dep?: InputMaybe<Scalars['UUID']['input']>;
  end?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  start?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['Boolean']['input']>;
  supplier?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryApReapplicationArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryApTransactionByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryApTransactionByTypeArgs = {
  category?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryApTransactionListArgs = {
  category?: InputMaybe<Scalars['String']['input']>;
  desc?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryApTransactionOthersArgs = {
  category?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryAppointmentByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryAppointmentByPatientArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryAppointmentByStatusArgs = {
  status?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryAppointmentCheckArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryAppointmentPageArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  schedtime?: InputMaybe<Scalars['UUID']['input']>;
  schedule?: InputMaybe<Scalars['UUID']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryAppointmentPageByPatientArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryArInvoiceItemUuidListArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryArLedgerSaveArgs = {
  ledger?: InputMaybe<ArLedgerInput>;
};


/** Query root */
export type QueryAvailableRoomsByDepartmentArgs = {
  departmentId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryBalancesArgs = {
  billingId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryBankByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryBanksArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryBarangaysArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryBegByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryBegDetailsByIdArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryBeginningItemsListArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryBeginningItemsPageableArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryBeginningListByItemArgs = {
  item?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryBeginningTransPageArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryBillingByIdArgs = {
  billingId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryBillingByPatientArgs = {
  patientId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryBillingChargeBarcodeArgs = {
  depId?: InputMaybe<Scalars['UUID']['input']>;
  priceTierId?: InputMaybe<Scalars['UUID']['input']>;
  sku?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryBillingDeductionsArgs = {
  accountId?: InputMaybe<Scalars['String']['input']>;
  endDate?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
  startDate?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryBillingDeductionsNativeQueryArgs = {
  accountId?: InputMaybe<Scalars['String']['input']>;
  endDate?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
  startDate?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryBillingItemByIdArgs = {
  billingItemId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryBillingItemByTypesArgs = {
  billingId?: InputMaybe<Scalars['UUID']['input']>;
  billingType?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryBillingItemWithBSchNativeQueryArgs = {
  account?: InputMaybe<Scalars['String']['input']>;
  dateEnd?: InputMaybe<Scalars['String']['input']>;
  dateStart?: InputMaybe<Scalars['String']['input']>;
  dateType?: InputMaybe<Scalars['String']['input']>;
  itemTypes?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  page?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
  patientType?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  search?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryBillingItemsArgs = {
  billingId?: InputMaybe<Scalars['UUID']['input']>;
  billingItemType?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryBillingItemsAllArgs = {
  billingId?: InputMaybe<Scalars['UUID']['input']>;
  billingItemType?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryBillingItemsByBillArgs = {
  billingId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryBillingItemsClaimsArgs = {
  billingItemType?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  companyId?: InputMaybe<Scalars['String']['input']>;
  dateType?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  filterDate?: InputMaybe<Scalars['String']['input']>;
  filterType?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  registryType?: InputMaybe<Scalars['String']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryBillingItemsDeductionsArgs = {
  admissionDate?: InputMaybe<Scalars['String']['input']>;
  billingId?: InputMaybe<Scalars['UUID']['input']>;
  billingItemType?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  companyId?: InputMaybe<Scalars['String']['input']>;
  dischargedDate?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  patientId?: InputMaybe<Scalars['UUID']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryBillingItemsDetailsArgs = {
  billingItemId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryBillingItemsEligibleForMiscGroupingArgs = {
  billingId?: InputMaybe<Scalars['UUID']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryBillingScheduleItemsPerCompanyByIdArgs = {
  billingSchedule?: InputMaybe<Scalars['UUID']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryBillingScheduleItemsPerParentArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryBillingSchedulePerCompanyArgs = {
  companyId?: InputMaybe<Scalars['UUID']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryBillingServicesArgs = {
  caseId?: InputMaybe<Scalars['UUID']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
  tag?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryBillingSnapshotHistoryArgs = {
  billingId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryBsPhilClaimsAllArgs = {
  dateType?: InputMaybe<Scalars['String']['input']>;
  from?: InputMaybe<Scalars['String']['input']>;
  sort?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  to?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryBsPhilClaimsPageableArgs = {
  dateType?: InputMaybe<Scalars['String']['input']>;
  from?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  search?: InputMaybe<Scalars['String']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  to?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryCaseArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  sort?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryCasePhotosByCaseArgs = {
  caseId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryCase_By_Patient_List_PageableArgs = {
  ids?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
  page?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryCase_By_Patient_PageableArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryCase_O2_AdministrationsArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryCashierTerminalArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryCashierTerminalsArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryCashierTerminalsByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryCathlabNurseNoteArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryCensusArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
};


/** Query root */
export type QueryCheckArItemExistArgs = {
  arRecItems?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryCheckAppByPatientScheduleArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  patient?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryCheckBalancesByPoArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryCheckClaimsExistArgs = {
  claimSeriesLhio?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryCheckDrAccredValidationArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
};


/** Query root */
export type QueryCheckIfArItemIdExistArgs = {
  arRec?: InputMaybe<AccountReceivableInput>;
};


/** Query root */
export type QueryCheckMedicationIfExistArgs = {
  caseId?: InputMaybe<Scalars['UUID']['input']>;
  medType?: InputMaybe<Scalars['String']['input']>;
  medicineId?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryCheckPatientDuplicateArgs = {
  contact?: InputMaybe<Scalars['String']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryChecksFilterArgs = {
  bank?: InputMaybe<Scalars['UUID']['input']>;
  end?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
  start?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryCheqEncashmentByOneShiftIdArgs = {
  shiftId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryCheqEncashmentByShiftIdArgs = {
  shiftIds?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
};


/** Query root */
export type QueryCheqEncashmentTransPageableArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  filterBank?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
  macAddress?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryCitiesArgs = {
  province?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryClaimArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryClaimItemsArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryClaimItemsByClaimPageableArgs = {
  ids?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
  page?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
  patient?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryClaimsPageableArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryCollectionDepositArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryCollectionDepositByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryCollectionDepositRecordByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryCollectionDetailByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryCombinedMedicationAdministrationsArgs = {
  caseId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryComlogik_MedicinesArgs = {
  page?: InputMaybe<Scalars['String']['input']>;
  rows?: InputMaybe<Scalars['String']['input']>;
  searchStr?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryComlogik_RefIdArgs = {
  caseNo?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryCompanionDietsListArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  meal?: InputMaybe<Scalars['String']['input']>;
  now?: InputMaybe<Scalars['String']['input']>;
  recent?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryCompanyAccountByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryCompanyAccountsArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryCompanyTypeByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryCompanyTypesArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryConfigByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryConfigListPageArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryConfigTimeActiveArgs = {
  status?: InputMaybe<Scalars['Boolean']['input']>;
};


/** Query root */
export type QueryConstantsArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryConstantsByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryConstantsByNameArgs = {
  name?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryConstantsByTypeArgs = {
  activeOnly?: InputMaybe<Scalars['Boolean']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryCountPhysicalItemsArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  tag?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryCount_All_Death_By_TypeArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryCount_All_Surgical_ProcedureArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryCount_All_TestingArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryCount_Cases_By_Discharge_DispositionArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryCount_Cases_By_Registry_TypeArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryCount_Confirmed_Dengue_CasesArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryCount_DeathsArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryCount_Deaths_By_RegistryArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryCount_Deaths_V2Args = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryCount_Deaths_V3Args = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryCount_DeliveriesArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryCount_DischargesArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryCount_Inpt_CareArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryCount_Patient_ReportsArgs = {
  registryType?: InputMaybe<Scalars['String']['input']>;
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryCountriesFilterArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryCreateChequeEncasmentJournalEntryArgs = {
  arg0?: InputMaybe<ChequeEncashmentInput>;
};


/** Query root */
export type QueryCreditArLedgerFromArArgs = {
  art?: InputMaybe<ArTransactionInput>;
};


/** Query root */
export type QueryCreditArLedgerPerArArgs = {
  accRec?: InputMaybe<AccountReceivableItemsInput>;
  art?: InputMaybe<ArTransactionDetailsInput>;
};


/** Query root */
export type QueryCreditNoteItemUuidListArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryCustomerBalanceArgs = {
  customerId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryCustomerRemainingBalanceArgs = {
  customerId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryDebitArLedgerFromArArgs = {
  accRec?: InputMaybe<AccountReceivableInput>;
};


/** Query root */
export type QueryDebitArLedgerPerArArgs = {
  accRec?: InputMaybe<AccountReceivableItemsInput>;
  art?: InputMaybe<ArTransactionDetailsInput>;
};


/** Query root */
export type QueryDebitMemoByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryDebitMemoFilterArgs = {
  end?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
  start?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['Boolean']['input']>;
  supplier?: InputMaybe<Scalars['UUID']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryDeductionsTableArgs = {
  billingId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryDepIssuanceByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryDepListByItemArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryDepRequestByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryDepartmentArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryDepartmentPageArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryDepartmentStockIssueByDepArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryDepartmentsByFilterArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryDetailsByApArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryDietsListArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  meal?: InputMaybe<Scalars['String']['input']>;
  now?: InputMaybe<Scalars['String']['input']>;
  recent?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryDisAccountViewArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  status?: InputMaybe<Scalars['Boolean']['input']>;
};


/** Query root */
export type QueryDisCheckByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryDisCheckByParentArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryDisExpByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryDisExpByParentArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryDisWtxByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryDisWtxByParentArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryDisbursementByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryDisbursementFilterArgs = {
  end?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
  start?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['Boolean']['input']>;
  supplier?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryDisbursementFilterPostedArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
  supplier?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryDischargeClearanceArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryDischargeClearancesByCaseArgs = {
  caseId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryDischarge_ReportArgs = {
  end?: InputMaybe<Scalars['Instant']['input']>;
  filterCode?: InputMaybe<Scalars['String']['input']>;
  filterStatus?: InputMaybe<Scalars['String']['input']>;
  page: Scalars['Int']['input'];
  search?: InputMaybe<Scalars['String']['input']>;
  size: Scalars['Int']['input'];
  sort?: InputMaybe<Scalars['String']['input']>;
  sortBy?: InputMaybe<Scalars['String']['input']>;
  start?: InputMaybe<Scalars['Instant']['input']>;
};


/** Query root */
export type QueryDiscountByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryDiscountsArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryDmAccountViewArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  status?: InputMaybe<Scalars['Boolean']['input']>;
};


/** Query root */
export type QueryDmDetailsByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryDmDetialsArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryDoctorNoteArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryDoctorNotesByCasePageableArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryDoctorOrderArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryDoctorOrderByCaseArgs = {
  caseId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryDoctorOrderItemArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryDoctorOrdersWithSortArgs = {
  caseId?: InputMaybe<Scalars['UUID']['input']>;
  sort?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryDoctorsOrdersPageableArgs = {
  caseId?: InputMaybe<Scalars['UUID']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryDohIcd10CustomMortalityArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryDohProgressLogsArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryDohTestingPerYearArgs = {
  year?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryEmployeeArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryEmployeeAddOnsArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryEmployeeDietsListArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  meal?: InputMaybe<Scalars['String']['input']>;
  now?: InputMaybe<Scalars['String']['input']>;
  recent?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryEmployeesByDepArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryExpenseTypeByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryFetchActivePatientsArgs = {
  firstName?: InputMaybe<Scalars['String']['input']>;
  lastName?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
  registryType?: InputMaybe<Scalars['String']['input']>;
  sort?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryFetchPatientMedicationStockArgs = {
  medId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryFetchPatientMedicationsArgs = {
  caseId?: InputMaybe<Scalars['UUID']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryFilterAccountingCategoriesArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryFilterAdjustmentTypeArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  is_active?: InputMaybe<Scalars['Boolean']['input']>;
};


/** Query root */
export type QueryFilterAllGasItemsArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryFilterAllO2FlowRatesArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryFilterDietsArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryFilterFluidMedicinesArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryFilterMedicinesArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryFilterNonFluidMedicinesArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryFilterPatientsPageableArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryFilterableMaterialProductionByDeptArgs = {
  deptID?: InputMaybe<Scalars['UUID']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryFilterableMaterialProductionByDeptPageArgs = {
  endDate?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
  startDate?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryFinancialReportsArgs = {
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryFindArTransactionByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryFindAccountReceivablePerIdArgs = {
  accountReceivableId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryFindAdmissionKitByTypeArgs = {
  type?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryFindAllCreditNoteArgs = {
  customerId?: InputMaybe<Scalars['UUID']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  search?: InputMaybe<Scalars['String']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryFindAllCustomerReferenceArgs = {
  search?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryFindAllCustomersArgs = {
  page?: InputMaybe<Scalars['Int']['input']>;
  search?: InputMaybe<Scalars['String']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryFindAllEmployeeBiometricArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryFindAllInvoiceArgs = {
  customerId?: InputMaybe<Scalars['UUID']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  search?: InputMaybe<Scalars['String']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


/** Query root */
export type QueryFindAllInvoiceItemUuidByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryFindAllLikeAllowanceArgs = {
  search?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryFindAllLikeCategoryArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryFindAllPaymentTransactionTypesArgs = {
  miscType?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryFindArDetailItemPaymentByIdArgs = {
  id?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
};


/** Query root */
export type QueryFindArPttByTransIdArgs = {
  arTransID?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryFindArPaymentTrackerPerIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryFindArTransactionTypeByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryFindByPaymentTrackerIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryFindBySourceValueArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  source?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryFindCreditNoteItemsArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  search?: InputMaybe<Scalars['String']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryFindCreditNoteItemsByCnIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryFindCreditNoteItemsByCnIdByItemTypeArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  itemType?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


/** Query root */
export type QueryFindCreditNoteItemsByCustomerArgs = {
  arCustomerId?: InputMaybe<Scalars['UUID']['input']>;
  itemType?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  page?: InputMaybe<Scalars['Int']['input']>;
  search?: InputMaybe<Scalars['String']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryFindDuplicateItemArgs = {
  desc?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  itemCode?: InputMaybe<Scalars['String']['input']>;
  sku?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryFindEmployeeRequestByHrApprovedEmployeeArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryFindEmployeeRequestByRequestedEmployeeArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryFindEmployeeRequestsArgs = {
  approvals?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
  datesType?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  department?: InputMaybe<Scalars['UUID']['input']>;
  endDate?: InputMaybe<Scalars['Instant']['input']>;
  hrApprovedBy?: InputMaybe<Scalars['UUID']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  requestedBy?: InputMaybe<Scalars['UUID']['input']>;
  revertedBy?: InputMaybe<Scalars['UUID']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
  startDate?: InputMaybe<Scalars['Instant']['input']>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type?: InputMaybe<Scalars['String']['input']>;
  withPay?: InputMaybe<Array<InputMaybe<Scalars['Boolean']['input']>>>;
};


/** Query root */
export type QueryFindInvoiceItemsByCustomerArgs = {
  customerId?: InputMaybe<Scalars['UUID']['input']>;
  invoiceId?: InputMaybe<Scalars['UUID']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  search?: InputMaybe<Scalars['String']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryFindInvoiceItemsByInvoiceArgs = {
  invoiceId?: InputMaybe<Scalars['UUID']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  search?: InputMaybe<Scalars['String']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryFindOrForAccountReceivableArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryFindOrIfExistArptArgs = {
  paymentTrackerId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryFindOneAccountBalancesItemArgs = {
  accountBalanceId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryFindOneAdjustmentTypeArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryFindOneByRefIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryFindOneCreditNoteArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryFindOneCustomerArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryFindOneInvoiceArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryFindOneInvoiceItemsArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryFindOnePaymentTransactionTypeArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryFindOneSignatureArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryFindPaymentTrackerByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryFindPaymentTrackerDetailsByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryFindPendingCnPerInvoiceArgs = {
  invoiceId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryFindPostedCnPerInvoiceArgs = {
  invoiceId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryFindTop10MajorOperationsArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryFindTop10MinorOperationsArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryFindTransactionDetailsByParentIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryFiscalByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryFiscalsArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryFixedAssetCategoryPageableArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryFsByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGenerateHisClaimsMedsArgs = {
  billingId?: InputMaybe<Scalars['UUID']['input']>;
  caseId?: InputMaybe<Scalars['UUID']['input']>;
  includePatientMeds?: InputMaybe<Scalars['Boolean']['input']>;
};


/** Query root */
export type QueryGenericActiveFilterArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGenericFilterArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGenericPageFilterArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetArCompanyDetailsArgs = {
  companyID?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetArCompanyDetailsByScheduleArgs = {
  billingScheduleId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetArInvoiceItemPerPatientGroupByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetAccRecYearArgs = {
  companyId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetAccumulatedLogByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetAccumulatedLogsArgs = {
  endDate?: InputMaybe<Scalars['Instant']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  startDate?: InputMaybe<Scalars['Instant']['input']>;
};


/** Query root */
export type QueryGetAccumulatedLogsOldArgs = {
  endDate?: InputMaybe<Scalars['Instant']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  startDate?: InputMaybe<Scalars['Instant']['input']>;
};


/** Query root */
export type QueryGetActiveOnDueChequesArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetAllAccommodationTypeArgs = {
  accommodation?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetAllArManualDeductionsArgs = {
  companyId?: InputMaybe<Scalars['UUID']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetAllArTransactionTypeArgs = {
  type?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetAllArTransactionTypePageableArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetAllArTransferArgs = {
  companyId?: InputMaybe<Scalars['UUID']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetAllBsPhilClaimsByArgs = {
  billingSchedule?: InputMaybe<Scalars['UUID']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetAllCaseByEntryDatetimeArgs = {
  allcasesbyregistrytype?: InputMaybe<Scalars['String']['input']>;
  from?: InputMaybe<Scalars['String']['input']>;
  to?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetAllCashieringCollectionReportArgs = {
  collectionEndDate?: InputMaybe<Scalars['String']['input']>;
  collectionStartDate?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  filterType?: InputMaybe<Scalars['String']['input']>;
  paymentType?: InputMaybe<Scalars['String']['input']>;
  terminalId?: InputMaybe<Scalars['UUID']['input']>;
  transactionCategory?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetAllCdctrArgs = {
  page?: InputMaybe<Scalars['Int']['input']>;
  recno?: InputMaybe<Scalars['String']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetAllChartOfAccountGenerateArgs = {
  accountType?: InputMaybe<Scalars['String']['input']>;
  department?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  excludeMotherAccount?: InputMaybe<Scalars['Boolean']['input']>;
  motherAccountCode?: InputMaybe<Scalars['String']['input']>;
  subaccountType?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetAllDefaultAdmissionItemsArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetAllDeliveryCountsArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetAllEmployeeScheduleArgs = {
  department?: InputMaybe<Scalars['UUID']['input']>;
  endDate?: InputMaybe<Scalars['Instant']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
  startDate?: InputMaybe<Scalars['Instant']['input']>;
  withChildren?: InputMaybe<Scalars['Boolean']['input']>;
};


/** Query root */
export type QueryGetAllIntegrationPageableArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetAllMaterialProductionItemsArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetAllOrderSlipNoFalseArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  orderSlipNo?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetAllOutstandingClaimsArgs = {
  companyAccountId?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetAllOutstandingClaimsByCompanyArgs = {
  billingType?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  companyId?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  patientType?: InputMaybe<Scalars['String']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetAllOutstandingClaimsByCompany_V2Args = {
  billingType?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  companyId?: InputMaybe<Scalars['String']['input']>;
  dateType?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  filterDate?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  patientType?: InputMaybe<Scalars['String']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetAllPatientByDepartmentArgs = {
  department?: InputMaybe<Scalars['UUID']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetAllPatientByPhysicianArgs = {
  page?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
  physician?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetAllPaymentsPerArArgs = {
  arId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetAllPriceControlItemsArgs = {
  costGroup?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  group?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
  tierId?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetAllPriceControlServicesArgs = {
  costGroup?: InputMaybe<Scalars['String']['input']>;
  deptId?: InputMaybe<Scalars['UUID']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
  tierId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetAllReceivableAccountsArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetAllShiftingRecordsArgs = {
  page?: InputMaybe<Scalars['Int']['input']>;
  shiftNo?: InputMaybe<Scalars['String']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetAllShiftingRecordsArchiveArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  shiftEndDate?: InputMaybe<Scalars['String']['input']>;
  shiftStartDate?: InputMaybe<Scalars['String']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
  terminalId?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
};


/** Query root */
export type QueryGetAllShiftingRecordsForCdctrArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  shiftEndDate?: InputMaybe<Scalars['String']['input']>;
  shiftStartDate?: InputMaybe<Scalars['String']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
  terminalId?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
};


/** Query root */
export type QueryGetAllVisitsArgs = {
  end?: InputMaybe<Scalars['String']['input']>;
  start?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetAllowanceByPaginationArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetAllowanceTemplateItemsByTemplateIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  showActive?: InputMaybe<Scalars['Boolean']['input']>;
};


/** Query root */
export type QueryGetAllowanceTemplatesByPaginationArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
  showActive?: InputMaybe<Scalars['Boolean']['input']>;
};


/** Query root */
export type QueryGetBsiArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetBSchItemPerBillItemArgs = {
  bSchId?: InputMaybe<Scalars['UUID']['input']>;
  billingItemId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetBalanceSheetsArgs = {
  end?: InputMaybe<Scalars['String']['input']>;
  period?: InputMaybe<Scalars['Int']['input']>;
  start?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetBasedAuthorizedBedsArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetBedCapacityOccupancyArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetBigDecimalFieldsFromDomainArgs = {
  domain?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetBillingArgs = {
  billingId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetBillingItemSalesArgs = {
  dateEnd?: InputMaybe<Scalars['String']['input']>;
  dateStart?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetBillingItemSales2Args = {
  dateEnd?: InputMaybe<Scalars['String']['input']>;
  dateStart?: InputMaybe<Scalars['String']['input']>;
  department?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  processcode?: InputMaybe<Scalars['String']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetBillingItemSales2TotalsArgs = {
  dateEnd?: InputMaybe<Scalars['String']['input']>;
  dateStart?: InputMaybe<Scalars['String']['input']>;
  department?: InputMaybe<Scalars['String']['input']>;
  processcode?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetBillingItemSalesListArgs = {
  dateEnd?: InputMaybe<Scalars['String']['input']>;
  dateStart?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetBillingItemsAllNoTypeArgs = {
  billingId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetBillingScheduleDetailsArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetBsPhilClaimsByCaseNoArgs = {
  billingScheduleId?: InputMaybe<Scalars['UUID']['input']>;
  caseNo?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetCaseInsurancesByCaseArgs = {
  caseId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetCaseRatesFromBillingArgs = {
  billingId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetCashBasisPatientByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetCashBasisPatientListArgs = {
  departmentId?: InputMaybe<Scalars['UUID']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetCashProvidedByOperatingActivitiesArgs = {
  end?: InputMaybe<Scalars['String']['input']>;
  period?: InputMaybe<Scalars['Int']['input']>;
  start?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetCashierDataArgs = {
  macAddress?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetCashierDataByMacAddressArgs = {
  macAddress?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetCashieringCollectionByTypeOnListArgs = {
  clearingDate?: InputMaybe<Scalars['Instant']['input']>;
  collectionDate?: InputMaybe<Scalars['Instant']['input']>;
  depositoryBank?: InputMaybe<Scalars['UUID']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  paymentType?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetCashieringCollectionByTypePageArgs = {
  clearingDate?: InputMaybe<Scalars['Instant']['input']>;
  collectionDate?: InputMaybe<Scalars['Instant']['input']>;
  depositoryBank?: InputMaybe<Scalars['UUID']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  paymentType?: InputMaybe<Scalars['String']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetCashieringCollectionReportArgs = {
  collectionEndDate?: InputMaybe<Scalars['String']['input']>;
  collectionStartDate?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  filterType?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  paymentType?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  size?: InputMaybe<Scalars['Int']['input']>;
  terminalId?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
  transactionCategoryId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetCathLabNotePageableArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetCatheterRecordsArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetCentralLineRecordsArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetCf4Args = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
};


/** Query root */
export type QueryGetChecksForDepositArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetClaimLibraryArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
};


/** Query root */
export type QueryGetClaimsArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
};


/** Query root */
export type QueryGetClaimsCaseNoArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
};


/** Query root */
export type QueryGetCoaByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetConfigByDepartmentArgs = {
  name?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetConfigByEntityNameArgs = {
  name?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetCountDeliveriesArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetCountMonitoringArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetCountPoItemArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetCreditCardsAndCheckArgs = {
  endDateTime?: InputMaybe<Scalars['Instant']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  showAll?: InputMaybe<Scalars['Boolean']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
  startDateTime?: InputMaybe<Scalars['Instant']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetDcrPageableArgs = {
  collectionEndDate?: InputMaybe<Scalars['String']['input']>;
  collectionStartDate?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  filterType?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  paymentType?: InputMaybe<Scalars['String']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
  terminalId?: InputMaybe<Scalars['UUID']['input']>;
  transactionCategory?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetDohProgressRateArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetDataTableArgs = {
  hfhudcode?: InputMaybe<Scalars['String']['input']>;
  reportingyear?: InputMaybe<Scalars['String']['input']>;
  table?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetDepItemIssuanceArgs = {
  endDate?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
  startDate?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetDepRequestItemsArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetDepartmentScheduleArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetDepartmentStockRequestByIssueDeptArgs = {
  dep?: InputMaybe<Scalars['UUID']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetDepartmentStockRequestByReqDeptArgs = {
  dep?: InputMaybe<Scalars['UUID']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetDepartmentStockRequestReqNoByReqDeptArgs = {
  fromDept?: InputMaybe<Scalars['UUID']['input']>;
  status?: InputMaybe<Scalars['Int']['input']>;
  toDept?: InputMaybe<Scalars['UUID']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetDepartmentsInIdArgs = {
  ids?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
};


/** Query root */
export type QueryGetDiagnosticExamsByCaseArgs = {
  caseId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetDicNumberArgs = {
  department?: InputMaybe<Scalars['String']['input']>;
  patientId?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetDietNotesByCasePageableArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetDischargeMobidityArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetDischargeMorbidityByAgeAndGenderArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetDischargeSpecialtyArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetEClaimsVoucherArgs = {
  caseNo?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetErdTotalNumOfPatientsTransferredFromOtherPerYearArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetErdTotalNumOfPatientsTransferredToOtherPerYearArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetErdTotalNumberOfPatientsAdultPerYearArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetErdTotalNumberOfPatientsPediatricPerYearArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetErdTotalNumberOfPatientsVisitsPerYearArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetErdVisitsReportArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetEclaimAccountArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetEclaimCaseRefArgs = {
  caseId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetEclaimProviderArgs = {
  provider?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetEligibilityArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
};


/** Query root */
export type QueryGetEmployeeActiveAndIncldInPayrollAndDeptExcldUserArgs = {
  department?: InputMaybe<Scalars['UUID']['input']>;
  excludeUser?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  option?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetEmployeeAttendanceArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetEmployeeIsActiveAndIncludeInPayrollArgs = {
  department?: InputMaybe<Scalars['UUID']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  option?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetEmployeeLoanByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetEmployeeLoanByIdWithFilterArgs = {
  search?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetEmployeePerformanceSummaryArgs = {
  endDate?: InputMaybe<Scalars['Instant']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  startDate?: InputMaybe<Scalars['Instant']['input']>;
};


/** Query root */
export type QueryGetEmployeePerformanceSummaryOldArgs = {
  endDate?: InputMaybe<Scalars['Instant']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  startDate?: InputMaybe<Scalars['Instant']['input']>;
};


/** Query root */
export type QueryGetEmployeeScheduleArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetEmployeeScheduleDetailsArgs = {
  employee?: InputMaybe<Scalars['UUID']['input']>;
  endDate?: InputMaybe<Scalars['Instant']['input']>;
  startDate?: InputMaybe<Scalars['Instant']['input']>;
};


/** Query root */
export type QueryGetEmployeeScheduleLegendArgs = {
  department?: InputMaybe<Scalars['UUID']['input']>;
  endDate?: InputMaybe<Scalars['Instant']['input']>;
  startDate?: InputMaybe<Scalars['Instant']['input']>;
};


/** Query root */
export type QueryGetEmployeesInIdsByFilterArgs = {
  department?: InputMaybe<Scalars['UUID']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  ids?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetEncashmentByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetEncashmentWithActiveShiftArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetEventsBetweenTwoDatesArgs = {
  endDate?: InputMaybe<Scalars['Instant']['input']>;
  startDate?: InputMaybe<Scalars['Instant']['input']>;
};


/** Query root */
export type QueryGetFixedAssetDepreciationArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetFixedAssetItemsArgs = {
  department?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetFixedAssetPurchaseOrderArgs = {
  endDate?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
  startDate?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetFixedAssetTransferArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetFixedAssetsFromItemsArgs = {
  category?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
  page?: InputMaybe<Scalars['Int']['input']>;
  search?: InputMaybe<Scalars['String']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetFolioByPageArgs = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetFolioByPageWithRegistryTypeArgs = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
  registryType?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetFolioOtcByPageArgs = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetForParentLineTypesArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  reqId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetGeneralLedgerArgs = {
  accountType?: InputMaybe<Scalars['String']['input']>;
  department?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  fiscalId?: InputMaybe<Scalars['UUID']['input']>;
  monthNo?: InputMaybe<Scalars['Int']['input']>;
  motherAccountCode?: InputMaybe<Scalars['String']['input']>;
  subaccountType?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetGroupPolicyByIdArgs = {
  groupPolicyId?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
};


/** Query root */
export type QueryGetGuarantorPerPeriodArgs = {
  end?: InputMaybe<Scalars['String']['input']>;
  period?: InputMaybe<Scalars['Int']['input']>;
  start?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetIncomeStatementByCodeArgs = {
  code?: InputMaybe<Scalars['String']['input']>;
  end?: InputMaybe<Scalars['String']['input']>;
  start?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetIncomeStatementsArgs = {
  end?: InputMaybe<Scalars['String']['input']>;
  period?: InputMaybe<Scalars['Int']['input']>;
  start?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetIncomingRequestArgs = {
  endDate?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
  startDate?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetIncomingRequestCountArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetIncomingRequestListArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetInpatientRemainingAtMidnightArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetInpatientRemainingAtMidnightPrevArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetInsurancesByFilterArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetIssuanceItemsForPostingArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetItemBarcodeArgs = {
  barcode?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetItemPriceArgs = {
  item?: InputMaybe<Scalars['UUID']['input']>;
  parentCase?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetItemReturnInfoArgs = {
  billingItemId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetItemsThatAreCashBasisArgs = {
  billingId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetItemsWithExpiryArgs = {
  depId?: InputMaybe<Scalars['UUID']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetLatestExpensesDataArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetLatestRevenuesDataArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetLeadingErConsultArgs = {
  end?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  start?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetLedgerByArArgs = {
  accRec?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetLedgerByHeaderIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetLedgerReferenceArgs = {
  reference?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetLoanScheduleByIdArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetMemoAndPaymentListArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetMonthlyCountByDateArgs = {
  date?: InputMaybe<Scalars['Instant']['input']>;
  dep?: InputMaybe<Scalars['UUID']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetMonthlyCountByDatePagedArgs = {
  date?: InputMaybe<Scalars['Instant']['input']>;
  dep?: InputMaybe<Scalars['UUID']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetNumberOfOpdAdultArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetNumberOfOpdAdultGeneralMedicineArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetNumberOfOpdNewVisitsArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetNumberOfOpdNewVisitsAdultArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetNumberOfOpdNewVisitsPediatricArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetNumberOfOpdPediatricArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetNumberOfOpdReVisitsArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetNumberOfOpdReVisitsAdultArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetNumberOfOpdReVisitsPediatricArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetNumberOfOpdVisitsAntenatalPostnatalArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetNumberOfOpdVisitsAntenatalPrenatalArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetNumberOfOpdVisitsNonSurgicalArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetNumberOfOpdVisitsSurgicalArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetNumberOfSameDayAdmissionAndDischargeArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetOpdVisitsReportArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetOccupationalTherapyNotePageableArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetOnHandByItemArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetOneAllowanceArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetOneAllowanceTemplateArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetOneDepartmentScheduleArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetOneOtherDeductionArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetOnePayrollArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetOneRawLogArgs = {
  id: Scalars['UUID']['input'];
};


/** Query root */
export type QueryGetOneTemplateItemArgs = {
  allowanceId?: InputMaybe<Scalars['UUID']['input']>;
  templateId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetOrderSlipItemByGroupArgs = {
  orderSlipId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetOrderSlipItemsArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetOslipItemArgs = {
  itemNo?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetOtherDeductionByPaginationArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetOtherDeductionEmployeesArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetOtherDeductionEmployeesIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetOutgoingRequestArgs = {
  endDate?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
  startDate?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetPfArgs = {
  caseId?: InputMaybe<Scalars['UUID']['input']>;
  employeeId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetPoByDelArgs = {
  poItemId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetPoItemMonitoringArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  poId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetPoItemMonitoringPageArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  poId?: InputMaybe<Scalars['UUID']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
  supplier?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetPoItemsReportArgs = {
  end?: InputMaybe<Scalars['Instant']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  start?: InputMaybe<Scalars['Instant']['input']>;
  supplier?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetPoMonitoringByPoItemFilterArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetPoMonitoringByRecArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetPrItemsReportArgs = {
  end?: InputMaybe<Scalars['Instant']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  start?: InputMaybe<Scalars['Instant']['input']>;
  supplier?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetPackageContentArgs = {
  parentId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetPaidToDoctorsPerPeriodArgs = {
  end?: InputMaybe<Scalars['String']['input']>;
  period?: InputMaybe<Scalars['Int']['input']>;
  start?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetPanelComponentArgs = {
  id?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetPatientArgs = {
  email?: InputMaybe<Scalars['String']['input']>;
  password?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetPatientCensusArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetPatientInfoByStockCardArgs = {
  refNo?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetPatientPerPeriodArgs = {
  end?: InputMaybe<Scalars['String']['input']>;
  period?: InputMaybe<Scalars['Int']['input']>;
  start?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetPatientReportArgs = {
  end?: InputMaybe<Scalars['String']['input']>;
  page: Scalars['Int']['input'];
  size: Scalars['Int']['input'];
  start?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetPatientsForCreditLimitArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetPatientsForDischargeArgs = {
  endDate?: InputMaybe<Scalars['Instant']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  filterType?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
  sortType?: InputMaybe<Scalars['String']['input']>;
  startDate?: InputMaybe<Scalars['Instant']['input']>;
};


/** Query root */
export type QueryGetPaymentComponentsArgs = {
  billingItemId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetPaymentsByBillingIdArgs = {
  billingId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetPayrollByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetPayrollByPaginationArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetPayrollEmployeeArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetPayrollEmployeeIdsArgs = {
  PayrollId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetPhyItemCountByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetPhysicalCountByCodeArgs = {
  code?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetPhysicalCountByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetPhysicalItemArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetPhysicalItemByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetPhysicalTherapyNotePageableArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetPoByStatusArgs = {
  status?: InputMaybe<Scalars['Boolean']['input']>;
};


/** Query root */
export type QueryGetPoItemsByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetPoListArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetPostedBeginningItemsArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetPrItemsNotYetPoCsArgs = {
  asset?: InputMaybe<Scalars['Boolean']['input']>;
  consignment?: InputMaybe<Scalars['Boolean']['input']>;
};


/** Query root */
export type QueryGetPriceTierArgs = {
  billingId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetPriceTierByCaseIdArgs = {
  caseId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetPriceTierDetailsArgs = {
  title?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetPriceTierDetailsPageableArgs = {
  page?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetPriceTierModifiersArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetQualityManagementDescArgs = {
  qualityManagementDesc?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetQualityManagementTypeArgs = {
  qualityManagementType?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetQualityManagementTypesArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetReceivableDetailedReportArgs = {
  accountId?: InputMaybe<Scalars['String']['input']>;
  endDate?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
  searchFilter?: InputMaybe<Scalars['String']['input']>;
  startDate?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetReceivableLedgerReportArgs = {
  account?: InputMaybe<Scalars['String']['input']>;
  billType?: InputMaybe<Scalars['String']['input']>;
  filterDate?: InputMaybe<Scalars['String']['input']>;
  filterSearch?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetReceivingByDepRangeArgs = {
  endDate?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  startDate?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetReceivingByDepRangePageArgs = {
  asset?: InputMaybe<Scalars['Boolean']['input']>;
  consignment?: InputMaybe<Scalars['Boolean']['input']>;
  endDate?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
  startDate?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetReceivingByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetReceivingNoArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetReceivingReportItemArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetReportPeriodRangeArgs = {
  end?: InputMaybe<Scalars['String']['input']>;
  numPeriod?: InputMaybe<Scalars['Int']['input']>;
  start?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetSrItemsBySrIdArgs = {
  srId?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetSsiArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetSavedEmployeeAttendanceArgs = {
  endDate?: InputMaybe<Scalars['Instant']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
  startDate?: InputMaybe<Scalars['Instant']['input']>;
};


/** Query root */
export type QueryGetSavedTrialBalanceArgs = {
  end?: InputMaybe<Scalars['String']['input']>;
  start?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetSavedTrialBalanceByDateArgs = {
  end?: InputMaybe<Scalars['String']['input']>;
  start?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetScheduleArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetScheduleDateListArgs = {
  dateNow?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetScheduleDateListAllArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetScheduleLockArgs = {
  endDate?: InputMaybe<Scalars['Instant']['input']>;
  startDate?: InputMaybe<Scalars['Instant']['input']>;
};


/** Query root */
export type QueryGetServicePriceArgs = {
  parentCase?: InputMaybe<Scalars['UUID']['input']>;
  room?: InputMaybe<Scalars['String']['input']>;
  service?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetSetupBySubAccountTypeArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  subaccountType?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetShiftByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetShiftingRecordsArgs = {
  page?: InputMaybe<Scalars['Int']['input']>;
  shiftNo?: InputMaybe<Scalars['String']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetSoaGroupingsByIdArgs = {
  groupId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetSoaGroupingsbyBillingIdArgs = {
  billingId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetSpecificFieldsFromDomainArgs = {
  domain?: InputMaybe<Scalars['String']['input']>;
  target?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetSpeechTherapyNotePageableArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetSrrByDateRangeArgs = {
  end?: InputMaybe<Scalars['Instant']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  start?: InputMaybe<Scalars['Instant']['input']>;
  supplier?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetSrrItemByDateRangeArgs = {
  end?: InputMaybe<Scalars['Instant']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  start?: InputMaybe<Scalars['Instant']['input']>;
  supplier?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetStockCardEntryListArgs = {
  endDate?: InputMaybe<Scalars['String']['input']>;
  search?: InputMaybe<Scalars['String']['input']>;
  startDate?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetStockIssueJournalEntriesArgs = {
  id?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetStockRequestArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetStockRequestItemsArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetStockRequestsByPatientArgs = {
  patientId?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetStockRequestsByPatientAndStatusArgs = {
  patientId?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetStockRequestsByStatusArgs = {
  status?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetStringFieldsFromDomainArgs = {
  domain?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetSummaryPatientHospitalArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetSupItemByBarcodeArgs = {
  barcode?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetSupplierByItemArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetSupplyItemArgs = {
  id?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetSurgicalSiteRecordsArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetTimekeepingAndEmployeesArgs = {
  timekeepingId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetTimekeepingByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetTimekeepingByPayrollIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetTimekeepingEmployeeArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetTimekeepingEmployeeAccumulatedLogsByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetTimekeepingEmployeesV2Args = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetTotalAdmissionArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetTotalCashFlowPatientPerPeriodArgs = {
  end?: InputMaybe<Scalars['String']['input']>;
  period?: InputMaybe<Scalars['Int']['input']>;
  start?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetTotalCatheterDaysArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetTotalCentralLineDaysArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetTotalDaysInPeriodArgs = {
  arg0?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetTotalDischargedArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetTotalDischargedAliveArgs = {
  registryType?: InputMaybe<Scalars['String']['input']>;
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetTotalGuarantorPerPeriodArgs = {
  end?: InputMaybe<Scalars['String']['input']>;
  period?: InputMaybe<Scalars['Int']['input']>;
  start?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetTotalInPatientTransferFromThisFacilityArgs = {
  registryType?: InputMaybe<Scalars['String']['input']>;
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetTotalInPatientTransferToThisFacilityArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetTotalInpatientAdmissionArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetTotalInpatientServiceDaysArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetTotalNewbornArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetTotalPaidToDoctorsPerPeriodArgs = {
  end?: InputMaybe<Scalars['String']['input']>;
  period?: InputMaybe<Scalars['Int']['input']>;
  start?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetTotalPatientsWithBsiArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetTotalPatientsWithUtiArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetTotalPatientsWithVapArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetTotalProceduresDoneArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetTotalSurgicalSiteInfectionsArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetTotalVentilatorDaysArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetTrialBalanceByCodeArgs = {
  code?: InputMaybe<Scalars['String']['input']>;
  end?: InputMaybe<Scalars['String']['input']>;
  start?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetTrialBalanceSubAccountsSummaryArgs = {
  code?: InputMaybe<Scalars['String']['input']>;
  end?: InputMaybe<Scalars['String']['input']>;
  start?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetTrialBalanceSubSubAccountsSummaryArgs = {
  code?: InputMaybe<Scalars['String']['input']>;
  end?: InputMaybe<Scalars['String']['input']>;
  start?: InputMaybe<Scalars['String']['input']>;
  subCode?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGetUtiArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetVapArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGetVaccinationRecordsByPatientArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetVentilatorRecordItemsArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGetVentilatorRecordsArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGet_All_Comlogik_ItemsArgs = {
  refeNo?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGet_All_Diet_LogsArgs = {
  caseId?: InputMaybe<Scalars['UUID']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGet_All_DietsArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGet_AttlogArgs = {
  daterange?: InputMaybe<Scalars['Map_String_StringScalar']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  ids?: InputMaybe<Scalars['Map_String_List_StringScalar']['input']>;
};


/** Query root */
export type QueryGet_Biometrics_AttlogArgs = {
  daterange?: InputMaybe<Scalars['Map_String_StringScalar']['input']>;
};


/** Query root */
export type QueryGet_Bundy_UsersArgs = {
  device_id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGet_Material_ProductionArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGet_Material_Production_ItemsArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryGet_PoArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGet_PoItemsArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGet_Pr_Items_By_IdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGet_Pr_Items_By_Multiple_PrNosArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  prNos?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  status?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryGet_Pr_ListArgs = {
  supplierId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryGuaranteedListFilteredArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  pageNo?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryHciInvoiceItemTotalCwtArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryHciInvoiceItemTotalVatArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryHospOptDischargesMorbidityArgs = {
  icdRvsCode?: InputMaybe<Scalars['String']['input']>;
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryHospOptDischargesMorbidityV2Args = {
  icdRvsCode?: InputMaybe<Scalars['String']['input']>;
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryHospOptDischargesMortalityV2Args = {
  icdRvsCode?: InputMaybe<Scalars['String']['input']>;
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryHospOptDischargesSpecialtyArgs = {
  year?: InputMaybe<Scalars['Instant']['input']>;
};


/** Query root */
export type QueryHospOptDischargesSpecialtyOthersArgs = {
  year?: InputMaybe<Scalars['Instant']['input']>;
};


/** Query root */
export type QueryHospOptSummaryOfPatientsArgs = {
  year?: InputMaybe<Scalars['Instant']['input']>;
};


/** Query root */
export type QueryHospitalItemsArgs = {
  billingId?: InputMaybe<Scalars['UUID']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryIncomeStatementDetailsArgs = {
  code?: InputMaybe<Scalars['String']['input']>;
  end?: InputMaybe<Scalars['String']['input']>;
  start?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryIntakeArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryIntakesByCaseArgs = {
  caseId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryIntakesByCasePageableArgs = {
  caseId?: InputMaybe<Scalars['UUID']['input']>;
  date?: InputMaybe<Array<InputMaybe<Scalars['Instant']['input']>>>;
  page?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryIntakesGroupedByDateArgs = {
  caseId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryIntakesGroupedByDateV2Args = {
  caseId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryIntakesTodayArgs = {
  caseId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryIntakesWithin24hrsArgs = {
  caseId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryIntegrationByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryIntegrationGroupItemListArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryIntegrationItemsByIntegrationIdArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryInventoryBarcodeArgs = {
  barcode?: InputMaybe<Scalars['String']['input']>;
  depId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryInventoryByDateArgs = {
  date?: InputMaybe<Scalars['String']['input']>;
  dep?: InputMaybe<Scalars['UUID']['input']>;
  item?: InputMaybe<Scalars['UUID']['input']>;
  phy?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryInventoryItemsByFilterArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryInventoryListByDepStatusArgs = {
  category?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
  consignment?: InputMaybe<Scalars['Boolean']['input']>;
  dep?: InputMaybe<Scalars['UUID']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  group?: InputMaybe<Scalars['UUID']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryInventoryListPageableArgs = {
  category?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
  depId?: InputMaybe<Scalars['UUID']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  group?: InputMaybe<Scalars['UUID']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryInventoryListPageableByDepArgs = {
  category?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
  dep?: InputMaybe<Scalars['UUID']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  group?: InputMaybe<Scalars['UUID']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryInventoryListPageableByDepStatusArgs = {
  asset?: InputMaybe<Scalars['Boolean']['input']>;
  category?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
  consignment?: InputMaybe<Scalars['Boolean']['input']>;
  dep?: InputMaybe<Scalars['UUID']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  group?: InputMaybe<Scalars['UUID']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryInventoryOutputPageableArgs = {
  dep?: InputMaybe<Scalars['UUID']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryInventorySourcePageableArgs = {
  dep?: InputMaybe<Scalars['UUID']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryInventorySupplierListPageableArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
  supplier?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryInventory_ListArgs = {
  category?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  departmentid?: InputMaybe<Scalars['UUID']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  group?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryInventory_List_By_MedicineArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryInventory_List_By_Medicine_PageableArgs = {
  caseId?: InputMaybe<Scalars['UUID']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryInventory_List_By_SuppliesArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryInventory_List_By_Supplies_PageableArgs = {
  caseId?: InputMaybe<Scalars['UUID']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryInventory_List_PageableArgs = {
  departmentid?: InputMaybe<Scalars['UUID']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryInventory_List_Pageable_Non_ProductionArgs = {
  departmentid?: InputMaybe<Scalars['UUID']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryInventory_List_PagedArgs = {
  category?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  departmentid?: InputMaybe<Scalars['UUID']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  group?: InputMaybe<Scalars['UUID']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryInvestorAttachmentsArgs = {
  dependent?: InputMaybe<Scalars['UUID']['input']>;
  investor?: InputMaybe<Scalars['UUID']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  withHidden?: InputMaybe<Scalars['Boolean']['input']>;
};


/** Query root */
export type QueryInvestorByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryInvestorIdFullnameDtoListArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryInvestorSubscriptionsArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryInvestorsArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryInvetory_List_All_PageableArgs = {
  department?: InputMaybe<Scalars['UUID']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryInvoiceItemAmountSumArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  itemType?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


/** Query root */
export type QueryIoByShiftsArgs = {
  caseId?: InputMaybe<Scalars['UUID']['input']>;
  fromDate?: InputMaybe<Scalars['String']['input']>;
  toDate?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryIsAcctCategoryCodeUniqueArgs = {
  code?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryIsAcctCategoryNameUniqueArgs = {
  description?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryIsCreditLimitReachedArgs = {
  caseid?: InputMaybe<Scalars['UUID']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryIsDepartmentCodeUniqueArgs = {
  departmentCode?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryIsDepartmentNameUniqueArgs = {
  departmentName?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryIsGenericCodeUniqueArgs = {
  genericCode?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryIsGenericNameUniqueArgs = {
  genericDescription?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryIsItemCategoryCodeUniqueArgs = {
  categoryCode?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryIsItemCategoryNameUniqueArgs = {
  categoryDescription?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryIsItemGroupCodeUniqueArgs = {
  itemCode?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryIsItemGroupNameUniqueArgs = {
  itemDescription?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryIsLoginUniqueArgs = {
  login?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryIsPaymentTermCodeUniqueArgs = {
  paymentCode?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryIsPaymentTermNameUniqueArgs = {
  paymentDesc?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryIsSupplierCodeUniqueArgs = {
  supplierCode?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryIsSupplierNameUniqueArgs = {
  supplierFullname?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryIsSupplierTypeNameUniqueArgs = {
  supplierTypeDesc?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryIsSupplierTypeUniqueArgs = {
  supplierTypeCode?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryIsUnitMeasurementCodeUniqueArgs = {
  unitCode?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryIsUnitMeasurementNameUniqueArgs = {
  unitDescription?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryIssuanceBarcodeArgs = {
  barcode?: InputMaybe<Scalars['String']['input']>;
  department?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryIssuanceJournalViewArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryItemArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryItemCategoryByGroupArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryItemCategoryFilterArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryItemCategoryPageArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  group?: InputMaybe<Scalars['UUID']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryItemGroupFilterArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryItemPriceListArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  tierId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryItemsByFilterArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryItemsByFilterAndIsNotProductionPageableArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryItemsByFilterLimitedArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryItemsByFilterOnlyArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryItemsFilterArgs = {
  category?: InputMaybe<Scalars['String']['input']>;
  group?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryItemsFilterPageableArgs = {
  category?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  group?: InputMaybe<Scalars['UUID']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryItemsPageFilterArgs = {
  category?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter?: InputMaybe<Scalars['String']['input']>;
  group?: InputMaybe<Scalars['UUID']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryItemsPageableArgs = {
  page?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryJobTitleByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryLatestNeuroVitalSignArgs = {
  caseId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryLatestVitalSignArgs = {
  caseId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryLeaveRequestArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryLedgerViewArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryLedgerViewListArgs = {
  code?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  fiscalId?: InputMaybe<Scalars['UUID']['input']>;
  monthNo?: InputMaybe<Scalars['Int']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryLedgerViewListV2Args = {
  code?: InputMaybe<Scalars['String']['input']>;
  creditBegBal?: InputMaybe<Scalars['BigDecimal']['input']>;
  debitBegBal?: InputMaybe<Scalars['BigDecimal']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  fiscalId?: InputMaybe<Scalars['UUID']['input']>;
  monthNo?: InputMaybe<Scalars['Int']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryListPageablePaymentTransactionTypesArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  pageNo?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryListSalesReportDetailedArgs = {
  end?: InputMaybe<Scalars['String']['input']>;
  start?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryLoanAccountByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryLoanAccountsArgs = {
  banks?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryLoanMCostOfLoanArgs = {
  numOfPayments?: InputMaybe<Scalars['BigDecimal']['input']>;
  payment?: InputMaybe<Scalars['BigDecimal']['input']>;
};


/** Query root */
export type QueryLoanMfvArgs = {
  nPer?: InputMaybe<Scalars['Int']['input']>;
  pmt?: InputMaybe<Scalars['BigDecimal']['input']>;
  pv?: InputMaybe<Scalars['BigDecimal']['input']>;
  rate?: InputMaybe<Scalars['BigDecimal']['input']>;
};


/** Query root */
export type QueryLoanMipmtArgs = {
  nPer?: InputMaybe<Scalars['Int']['input']>;
  per?: InputMaybe<Scalars['Int']['input']>;
  pv?: InputMaybe<Scalars['BigDecimal']['input']>;
  rate?: InputMaybe<Scalars['BigDecimal']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryLoanMInterestRateArgs = {
  annualInterest?: InputMaybe<Scalars['BigDecimal']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryLoanMLoanAmortizationArgs = {
  annualInterest?: InputMaybe<Scalars['BigDecimal']['input']>;
  compoundType?: InputMaybe<Scalars['String']['input']>;
  numOfPayments?: InputMaybe<Scalars['Int']['input']>;
  principalAmount?: InputMaybe<Scalars['BigDecimal']['input']>;
  startDate?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryLoanMLoanPaymentsArgs = {
  annualInterest?: InputMaybe<Scalars['BigDecimal']['input']>;
  compoundType?: InputMaybe<Scalars['String']['input']>;
  numberOfPeriod?: InputMaybe<Scalars['Int']['input']>;
  principalAmount?: InputMaybe<Scalars['BigDecimal']['input']>;
  startDate?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryLoanMNumberOfPaymentsArgs = {
  numOFYears?: InputMaybe<Scalars['Int']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryLoanMpmtArgs = {
  nPer?: InputMaybe<Scalars['Int']['input']>;
  pv?: InputMaybe<Scalars['BigDecimal']['input']>;
  rate?: InputMaybe<Scalars['BigDecimal']['input']>;
};


/** Query root */
export type QueryLoanMViewPaidLoanArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryLoanMViewStartingEntryArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryLoanManagementByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryLoanManagementsArgs = {
  accountNo?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryManagingPhysicianArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryManagingPhysiciansByCaseArgs = {
  caseId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryManagingStaffByCaseArgs = {
  caseId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryMapEventsToDatesArgs = {
  endDate?: InputMaybe<Scalars['Instant']['input']>;
  startDate?: InputMaybe<Scalars['Instant']['input']>;
};


/** Query root */
export type QueryMarkupItemListArgs = {
  category?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
  filter?: InputMaybe<Scalars['String']['input']>;
  group?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryMarkupListArgs = {
  category?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter?: InputMaybe<Scalars['String']['input']>;
  group?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryMarkupListPageableArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryMarkupPageableArgs = {
  category?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
  filter?: InputMaybe<Scalars['String']['input']>;
  group?: InputMaybe<Scalars['UUID']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryMaterialAccountViewArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryMaterial_Production_ListArgs = {
  itemId?: InputMaybe<Scalars['UUID']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryMeasureFilterPageArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryMedicationArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryMedicationAdministrationsArgs = {
  medication?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryMedicationAdministrationsByCaseArgs = {
  caseId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryMedicationsByCaseArgs = {
  caseId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryMedicationsByCaseAndTypeArgs = {
  caseId?: InputMaybe<Scalars['UUID']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryMotherAccountsPageArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryMunicipalitiesArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryMynotificationsArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryNeuroVitalSignArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryNeuroVitalSignsByCaseArgs = {
  caseId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryNurseNoteArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryNurseNotesByCaseArgs = {
  caseId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryNurseNotesByCasePageableArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryNurseNotesByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryOccupationalTherapyNoteArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryOnHandReportArgs = {
  date?: InputMaybe<Scalars['String']['input']>;
  departmentid?: InputMaybe<Scalars['UUID']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryOneInvestorAttachmentsArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryOrderSlipArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryOrderSlipItemPackageByParentArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryOrderSlipItemPackageListArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryOrderSlipItemsByCategoryArgs = {
  category?: InputMaybe<Scalars['String']['input']>;
  end?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
  readerId?: InputMaybe<Scalars['String']['input']>;
  start?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryOrderSlipItemsByOrderSlipNoArgs = {
  orderSlipNo?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryOrderSlipsByCaseArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryOrderSlipsByDepartmentArgs = {
  caseId?: InputMaybe<Scalars['String']['input']>;
  departmentId?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryOrderSlipsByDepartment_OldArgs = {
  caseId?: InputMaybe<Scalars['String']['input']>;
  departmentId?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryOrderSlipsByNoArgs = {
  orderSlipNo?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryOrderSlipsByNoAndDepartmentArgs = {
  department?: InputMaybe<Scalars['UUID']['input']>;
  orderSlip?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryOrderslipsByPatientTypeByPageArgs = {
  department?: InputMaybe<Scalars['String']['input']>;
  end?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
  ptype?: InputMaybe<Scalars['String']['input']>;
  start?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryOtherVitalSignArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryOtherVitalSignsByCaseArgs = {
  caseId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryOthersByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryOthersByPettyArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryOutputArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryOutputsByCaseArgs = {
  caseId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryOutputsByCasePageableArgs = {
  caseId?: InputMaybe<Scalars['UUID']['input']>;
  date?: InputMaybe<Array<InputMaybe<Scalars['Instant']['input']>>>;
  page?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryOutputsGroupedByDateArgs = {
  caseId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryOutputsGroupedByDateV2Args = {
  caseId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryOutputsTodayArgs = {
  caseId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryOutputsWithin24hrsArgs = {
  caseId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryOwnMedicationAdministrationsArgs = {
  caseId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryPackageByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryPackageinBillingArgs = {
  billingId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryPackagesArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  includeInactive?: InputMaybe<Scalars['Boolean']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryParentDepartmentsArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryPatientArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryPatientActiveBillingByCaseArgs = {
  caseId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryPatientActiveBillingItemsArgs = {
  billingId?: InputMaybe<Scalars['UUID']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
  types?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


/** Query root */
export type QueryPatientActiveCaseArgs = {
  patientId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryPatientCaseSnapshotHistoryArgs = {
  caseId?: InputMaybe<Scalars['UUID']['input']>;
  includeInitial?: InputMaybe<Scalars['Boolean']['input']>;
};


/** Query root */
export type QueryPatientCaseViewArgs = {
  condition?: InputMaybe<Scalars['String']['input']>;
  date?: InputMaybe<Array<InputMaybe<Scalars['Instant']['input']>>>;
  diet?: InputMaybe<Scalars['String']['input']>;
  disposition?: InputMaybe<Scalars['String']['input']>;
  onlyMe?: InputMaybe<Scalars['Boolean']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
  patient?: InputMaybe<Scalars['String']['input']>;
  physician?: InputMaybe<Scalars['UUID']['input']>;
  registry?: InputMaybe<Scalars['String']['input']>;
  roomNo?: InputMaybe<Scalars['String']['input']>;
  service?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryPatientCaseViewForReportArgs = {
  condition?: InputMaybe<Scalars['String']['input']>;
  date?: InputMaybe<Array<InputMaybe<Scalars['Instant']['input']>>>;
  diet?: InputMaybe<Scalars['String']['input']>;
  disposition?: InputMaybe<Scalars['String']['input']>;
  onlyMe?: InputMaybe<Scalars['Boolean']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
  patient?: InputMaybe<Scalars['String']['input']>;
  physician?: InputMaybe<Scalars['UUID']['input']>;
  registry?: InputMaybe<Scalars['String']['input']>;
  roomNo?: InputMaybe<Scalars['String']['input']>;
  service?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryPatientCaseViewForReportListArgs = {
  condition?: InputMaybe<Scalars['String']['input']>;
  date?: InputMaybe<Array<InputMaybe<Scalars['Instant']['input']>>>;
  diet?: InputMaybe<Scalars['String']['input']>;
  disposition?: InputMaybe<Scalars['String']['input']>;
  onlyMe?: InputMaybe<Scalars['Boolean']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
  patient?: InputMaybe<Scalars['String']['input']>;
  physician?: InputMaybe<Scalars['UUID']['input']>;
  registry?: InputMaybe<Scalars['String']['input']>;
  roomNo?: InputMaybe<Scalars['String']['input']>;
  service?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryPatientOwnMedicationAdministrationsArgs = {
  medication?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryPatientSearchFuzzyArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryPatientSearchFuzzyWithOthersArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
};


/** Query root */
export type QueryPatientSnapshotHistoryArgs = {
  includeInitial?: InputMaybe<Scalars['Boolean']['input']>;
  patientId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryPatient_MedicationsArgs = {
  billingId?: InputMaybe<Scalars['UUID']['input']>;
  includePatientMeds?: InputMaybe<Scalars['Boolean']['input']>;
};


/** Query root */
export type QueryPatient_Own_MedicationsArgs = {
  caseId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryPatientsByFilterArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryPatientsListByFilterArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryPaymentTermFilterArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryPaymentTermFilterPageArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryPaymentsTransactionByArIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryPettyCashByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryPettyCashItemByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryPettyCashPageArgs = {
  end?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
  start?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['Boolean']['input']>;
};


/** Query root */
export type QueryPfCompanyByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryPfCompanyPageArgs = {
  end?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
  start?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['Boolean']['input']>;
  supplier?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryPfItemsArgs = {
  billingId?: InputMaybe<Scalars['UUID']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryPfNonCompanyByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryPfNonCompanyPageArgs = {
  end?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
  start?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['Boolean']['input']>;
  supplier?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryPharmaInventoryListArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryPharmacyInventoryListArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryPhilhealth_DetailsArgs = {
  caseId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryPhysicalCountViewPageArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
  tag?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryPhysicalLogsArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryPhysicalTherapyNoteArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryPhysicalTransListArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryPhysicalTransPageArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryPhysicalTransactionByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryPoItemListArgs = {
  poId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryPoItemNotReceiveMonitoringArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryPoItemPageArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryPoListArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryPoListRangeArgs = {
  asset?: InputMaybe<Scalars['Boolean']['input']>;
  consignment?: InputMaybe<Scalars['Boolean']['input']>;
  endDate?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
  startDate?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryPoNotYetCompletedCsArgs = {
  asset?: InputMaybe<Scalars['Boolean']['input']>;
  consignment?: InputMaybe<Scalars['Boolean']['input']>;
};


/** Query root */
export type QueryPostItemsBeginningArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryPostPhysicalCountItemsArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryPrByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryPrintChecksArgs = {
  bank?: InputMaybe<Scalars['UUID']['input']>;
  end?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
  start?: InputMaybe<Scalars['String']['input']>;
  supplier?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryPritem_By_SupplierArgs = {
  supplier?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryProcedureDoctorOrderItemsArgs = {
  doctorOrderId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryProvincesFilterArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryPurchaseItemsByPettyArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryPurchaseRequestItemByPrArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryPurchaseRequestListByDepArgs = {
  dep?: InputMaybe<Scalars['UUID']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryPurchaseRequestListByDepRangeArgs = {
  asset?: InputMaybe<Scalars['Boolean']['input']>;
  consignment?: InputMaybe<Scalars['Boolean']['input']>;
  dep?: InputMaybe<Scalars['UUID']['input']>;
  endDate?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  startDate?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryPurchaseRequestListByDepRangePageArgs = {
  dep?: InputMaybe<Scalars['UUID']['input']>;
  endDate?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
  startDate?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryQuantityAdjustmentTypeFilterArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryQuantityListByItemArgs = {
  item?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryReapplicationByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryReapplicationPageArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryReapplicationPageFilterArgs = {
  end?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
  start?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['Boolean']['input']>;
  supplier?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryReapplyAccountViewArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  status?: InputMaybe<Scalars['Boolean']['input']>;
};


/** Query root */
export type QueryRecAccountViewArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryRecJournalViewArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryReceiptIssuanceByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryReceiptIssuancesArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryReceiptIssuancesByCashierArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
  terminalId?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryReceivableDetailedQueryArgs = {
  accountId?: InputMaybe<Scalars['String']['input']>;
  endDate?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
  searchFilter?: InputMaybe<Scalars['String']['input']>;
  startDate?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryReceivableGuarantorPaymentListArgs = {
  accounts?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


/** Query root */
export type QueryReceivableItemsByArIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryReceivableItemsPersonalListArgs = {
  account?: InputMaybe<Scalars['UUID']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryReceivablePersonalPaymentListArgs = {
  accounts?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


/** Query root */
export type QueryReceivingReportByDepArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryReceivingReportItemListsArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryReleaseCheckByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryReleaseChecksFilterArgs = {
  bank?: InputMaybe<Scalars['UUID']['input']>;
  end?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
  start?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryResultsByCaseIdArgs = {
  caseId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryResultsByOrderSlipArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryResultsByPatientIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryResultsDataByServiceArgs = {
  caseId?: InputMaybe<Scalars['UUID']['input']>;
  serviceId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryReturnJournalViewArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryReturnSupplierByDepArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryReturnSupplierByDepPageArgs = {
  endDate?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
  startDate?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryReturnSupplierByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryReturnSupplierItemByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryReverseArLedgerByReferenceArgs = {
  reference?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryRffeesArgs = {
  category?: InputMaybe<Scalars['String']['input']>;
  department?: InputMaybe<Scalars['String']['input']>;
  empId?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryRoomArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryRoomsByDepartmentArgs = {
  departmentId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryRoomsByFiltersArgs = {
  departmentId?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QuerySales_TransactionArgs = {
  id?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QuerySales_Transaction_ItemArgs = {
  id?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QuerySales_Transaction_ItemsArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QuerySales_Transaction_ListArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QuerySampleConvertArgs = {
  dateStr?: InputMaybe<Scalars['String']['input']>;
  regexSplitter?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QuerySampleVatIinArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryScheduleByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryScheduleByStatusArgs = {
  status?: InputMaybe<Scalars['Boolean']['input']>;
};


/** Query root */
export type QuerySchedulePageArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryScheduleTimeByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QuerySearchActiveEmployeesPageableArgs = {
  department?: InputMaybe<Scalars['UUID']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  showInActive?: InputMaybe<Scalars['Boolean']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QuerySearchBSchItemPerBillItemIdAndAmtArgs = {
  amount?: InputMaybe<Scalars['BigDecimal']['input']>;
  billingItemId?: InputMaybe<Scalars['UUID']['input']>;
  compId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QuerySearchCategoriesArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QuerySearchCategoriesPageableArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QuerySearchCoaByPageArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QuerySearchDohicdCodesArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QuerySearchDohicdCodesPageableArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QuerySearchDohSurgeryCodesArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QuerySearchDohSurgeryCodesPageableArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Scalars['String']['input']>;
  sortBy?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QuerySearchEmployeePermissionRoleArgs = {
  department?: InputMaybe<Scalars['UUID']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  permissionOperation?: InputMaybe<Scalars['String']['input']>;
  permissions?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  roles?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  rolesOperation?: InputMaybe<Scalars['String']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QuerySearchEmployeesArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QuerySearchEmployeesByAllowedCoManageArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QuerySearchEmployeesByRoleArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  role?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QuerySearchEmployeesByRoleIdArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  role?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QuerySearchEmployeesPageableArgs = {
  department?: InputMaybe<Scalars['UUID']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QuerySearchEmployeesSalaryPageableArgs = {
  department?: InputMaybe<Scalars['UUID']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QuerySearchIcdCodesArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QuerySearchIcdCodesPageableArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QuerySearchMatchingIdentityArgs = {
  firstName?: InputMaybe<Scalars['String']['input']>;
  lastName?: InputMaybe<Scalars['String']['input']>;
  middleName?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QuerySearchOrForApplicationArgs = {
  orNumber?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QuerySearchPatientPinArgs = {
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
};


/** Query root */
export type QuerySearchPatientsArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  idFilter?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QuerySearchPatientsPageableArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  idFilter?: InputMaybe<Scalars['UUID']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QuerySearchRvsCodesArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QuerySearchRvsCodesPageableArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QuerySearchServicesArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QuerySearchServicesByDefaultPageArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QuerySearchServicesByDepartmentArgs = {
  department?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QuerySearchServicesByDepartmentPageableArgs = {
  department?: InputMaybe<Scalars['UUID']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QuerySearchServicesByPageArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QuerySearchServicesForDoctorsOrdersArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QuerySearchStockRequestArgs = {
  search?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QuerySearchTieredServicesByDepartmentArgs = {
  department?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  priceTierDetailId?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QuerySearchTransfersArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QuerySearchTransfersByPatientArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryServicesByDepartmentArgs = {
  departmentId?: InputMaybe<Scalars['UUID']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryShiftArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryShowAllArTransferArgs = {
  destinationAcc?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
  sourceAcc?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
  status?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QuerySignatureListArgs = {
  type?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QuerySignatureListFilterArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QuerySpeechTherapyNoteArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryStockCardArgs = {
  depId?: InputMaybe<Scalars['String']['input']>;
  itemId?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryStockCardAllArgs = {
  itemId?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryStockCardFilterArgs = {
  depId?: InputMaybe<Scalars['String']['input']>;
  itemId?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryStockCardListArgs = {
  itemId?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryStockrequestsArgs = {
  patientId?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QuerySupplierArgs = {
  id?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QuerySupplierBarcodeArgs = {
  barcode?: InputMaybe<Scalars['String']['input']>;
  supplier?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QuerySupplierByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QuerySupplierByInvstorIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QuerySupplierItemPageArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QuerySupplierTypeActiveFilterArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QuerySupplierTypeFilterArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QuerySupplierTypeFilterPageArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QuerySupplier_ListArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QuerySupplier_List_By_Supp_Entity_PageableArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QuerySupplier_List_By_Type_Pageable_ActiveArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QuerySupplier_List_PageableArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QuerySupplier_List_Pageable_ActiveArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QuerySupplyItemsBySupplierArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryTestLeaveScheduleArgs = {
  endDate?: InputMaybe<Scalars['Instant']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  startDate?: InputMaybe<Scalars['Instant']['input']>;
};


/** Query root */
export type QueryTestProcedurePageableArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryTimeByScheduleArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryTimeByScheduleActiveArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryTimeByScheduleFilterArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryTop_10_Morbidity_CasesArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryTop_10_Mortality_CasesArgs = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryTop_10_Mortality_CasesV2Args = {
  year?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryTotalDiscountArgs = {
  dateEnd?: InputMaybe<Scalars['String']['input']>;
  dateStart?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryTotalGrossArgs = {
  dateEnd?: InputMaybe<Scalars['String']['input']>;
  dateStart?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryTotalIntakesArgs = {
  caseId?: InputMaybe<Scalars['UUID']['input']>;
  date?: InputMaybe<Array<InputMaybe<Scalars['Instant']['input']>>>;
};


/** Query root */
export type QueryTotalNetSalesArgs = {
  dateEnd?: InputMaybe<Scalars['String']['input']>;
  dateStart?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryTotalOutputsArgs = {
  caseId?: InputMaybe<Scalars['UUID']['input']>;
  date?: InputMaybe<Array<InputMaybe<Scalars['Instant']['input']>>>;
};


/** Query root */
export type QueryTotalSumPostBeginningArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryTransTypeByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryTransTypeByTagArgs = {
  tag?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryTransTypeByTagFilterArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  tag?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryTransTypeByTypeArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryTransTypeReceivingArgs = {
  asset?: InputMaybe<Scalars['Boolean']['input']>;
  consignment?: InputMaybe<Scalars['Boolean']['input']>;
};


/** Query root */
export type QueryTransactionJournal2Args = {
  beginningBalance?: InputMaybe<Scalars['Boolean']['input']>;
  endDateTime?: InputMaybe<Scalars['Instant']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  journalType?: InputMaybe<JournalType>;
  page?: InputMaybe<Scalars['Int']['input']>;
  showAll?: InputMaybe<Scalars['Boolean']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
  startDateTime?: InputMaybe<Scalars['Instant']['input']>;
};


/** Query root */
export type QueryTransactionJournalReferenceEntityArgs = {
  beginningBalance?: InputMaybe<Scalars['Boolean']['input']>;
  endDateTime?: InputMaybe<Scalars['Instant']['input']>;
  entityName?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  fiscalId?: InputMaybe<Scalars['UUID']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  referenceNo?: InputMaybe<Scalars['String']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
  startDateTime?: InputMaybe<Scalars['Instant']['input']>;
};


/** Query root */
export type QueryTransactionJournalReferenceEntityWithPartitionArgs = {
  beginningBalance?: InputMaybe<Scalars['Boolean']['input']>;
  endDate?: InputMaybe<Scalars['String']['input']>;
  entityName?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  fiscalId?: InputMaybe<Scalars['UUID']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  referenceNo?: InputMaybe<Scalars['String']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
  startDate?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryTransactionJournalWithPartitionArgs = {
  beginningBalance?: InputMaybe<Scalars['Boolean']['input']>;
  endDate?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  journalType?: InputMaybe<JournalType>;
  page?: InputMaybe<Scalars['Int']['input']>;
  showAll?: InputMaybe<Scalars['Boolean']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
  startDate?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryTransferArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryTransfersByCaseArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryTransfersByCaseWithRoomsArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryTransfersDepartmentsByCaseArgs = {
  caseId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryTrialBalanceAccountsArgs = {
  end?: InputMaybe<Scalars['String']['input']>;
  start?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryTrialBalanceAccountsDetailsArgs = {
  code?: InputMaybe<Scalars['String']['input']>;
  end?: InputMaybe<Scalars['String']['input']>;
  start?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryUnTrackedClaimsArgs = {
  companyAccount?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryUnbilledOrderslipItemsArgs = {
  departmentId?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
};


/** Query root */
export type QueryUnitMeasurementFilterArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryUnpaidSubscriptionsArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryVaccinationSearchByPatientArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryViewArListDetailsArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryViewArTransactionByTypeArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryViewArTransactionJournalArgs = {
  accRecId?: InputMaybe<Scalars['UUID']['input']>;
  amount?: InputMaybe<Scalars['BigDecimal']['input']>;
  hci?: InputMaybe<Scalars['BigDecimal']['input']>;
  pf?: InputMaybe<Scalars['BigDecimal']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryViewNextPoCodeByTypeArgs = {
  poDate?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryViewTransactionAccountPostedArgs = {
  fieldType?: InputMaybe<Scalars['String']['input']>;
  fields?: InputMaybe<Scalars['Map_String_ObjectScalar']['input']>;
  fieldsItems?: InputMaybe<Array<InputMaybe<Scalars['Map_String_ObjectScalar']['input']>>>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};


/** Query root */
export type QueryViewTransactionJournalEntryArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryVitalSignArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryVitalSignsByCaseArgs = {
  caseId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryVitalSignsForChartArgs = {
  caseId?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryVoidArLedgerByArArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryVoidStockIssueJournalEntryArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryVoidTransactionByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryWtxByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryWtxConByIdArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryWtxConListPageArgs = {
  end?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
  start?: InputMaybe<Scalars['String']['input']>;
  supplier?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryWtxListByRefArgs = {
  id?: InputMaybe<Scalars['UUID']['input']>;
};


/** Query root */
export type QueryWtxListPageArgs = {
  end?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
  start?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['Boolean']['input']>;
  supplier?: InputMaybe<Scalars['UUID']['input']>;
};

export type RvsCode = {
  __typename?: 'RVSCode';
  checkFacilityH2?: Maybe<Scalars['String']['output']>;
  effDate?: Maybe<Scalars['String']['output']>;
  effEndDate?: Maybe<Scalars['String']['output']>;
  longName?: Maybe<Scalars['String']['output']>;
  primaryAmount1?: Maybe<Scalars['BigDecimal']['output']>;
  primaryHospShare1?: Maybe<Scalars['BigDecimal']['output']>;
  primaryProfShare1?: Maybe<Scalars['BigDecimal']['output']>;
  rvsCode?: Maybe<Scalars['String']['output']>;
  secondaryHospShare?: Maybe<Scalars['BigDecimal']['output']>;
  secondaryProfShare?: Maybe<Scalars['BigDecimal']['output']>;
};

export type RangedConstant = {
  __typename?: 'RangedConstant';
  fieldName?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  rangeFrom?: Maybe<Scalars['BigDecimal']['output']>;
  rangeTo?: Maybe<Scalars['BigDecimal']['output']>;
};

export type Reapplication = {
  __typename?: 'Reapplication';
  advanceAmount?: Maybe<Scalars['BigDecimal']['output']>;
  appliedAmount?: Maybe<Scalars['BigDecimal']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  details?: Maybe<Scalars['Map_String_StringScalar']['output']>;
  disbursement?: Maybe<Disbursement>;
  disbursementAmount?: Maybe<Scalars['BigDecimal']['output']>;
  discAmount?: Maybe<Scalars['BigDecimal']['output']>;
  discountAmount?: Maybe<Scalars['BigDecimal']['output']>;
  domain?: Maybe<Scalars['String']['output']>;
  ewt1Percent?: Maybe<Scalars['BigDecimal']['output']>;
  ewt2Percent?: Maybe<Scalars['BigDecimal']['output']>;
  ewt3Percent?: Maybe<Scalars['BigDecimal']['output']>;
  ewt4Percent?: Maybe<Scalars['BigDecimal']['output']>;
  ewt5Percent?: Maybe<Scalars['BigDecimal']['output']>;
  ewt7Percent?: Maybe<Scalars['BigDecimal']['output']>;
  ewt10Percent?: Maybe<Scalars['BigDecimal']['output']>;
  ewt15Percent?: Maybe<Scalars['BigDecimal']['output']>;
  ewt18Percent?: Maybe<Scalars['BigDecimal']['output']>;
  ewt30Percent?: Maybe<Scalars['BigDecimal']['output']>;
  ewtAmount?: Maybe<Scalars['BigDecimal']['output']>;
  flagValue?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  posted?: Maybe<Scalars['Boolean']['output']>;
  postedLedger?: Maybe<Scalars['UUID']['output']>;
  prevApplied?: Maybe<Scalars['BigDecimal']['output']>;
  remarks?: Maybe<Scalars['String']['output']>;
  rounding?: Maybe<Scalars['Int']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  supplier?: Maybe<Supplier>;
  transType?: Maybe<ApTransaction>;
};

export type ReapplicationInput = {
  advanceAmount?: InputMaybe<Scalars['BigDecimal']['input']>;
  appliedAmount?: InputMaybe<Scalars['BigDecimal']['input']>;
  disbursement?: InputMaybe<DisbursementInput>;
  disbursementAmount?: InputMaybe<Scalars['BigDecimal']['input']>;
  discAmount?: InputMaybe<Scalars['BigDecimal']['input']>;
  discountAmount?: InputMaybe<Scalars['BigDecimal']['input']>;
  ewt1Percent?: InputMaybe<Scalars['BigDecimal']['input']>;
  ewt2Percent?: InputMaybe<Scalars['BigDecimal']['input']>;
  ewt3Percent?: InputMaybe<Scalars['BigDecimal']['input']>;
  ewt4Percent?: InputMaybe<Scalars['BigDecimal']['input']>;
  ewt5Percent?: InputMaybe<Scalars['BigDecimal']['input']>;
  ewt7Percent?: InputMaybe<Scalars['BigDecimal']['input']>;
  ewt10Percent?: InputMaybe<Scalars['BigDecimal']['input']>;
  ewt15Percent?: InputMaybe<Scalars['BigDecimal']['input']>;
  ewt18Percent?: InputMaybe<Scalars['BigDecimal']['input']>;
  ewt30Percent?: InputMaybe<Scalars['BigDecimal']['input']>;
  ewtAmount?: InputMaybe<Scalars['BigDecimal']['input']>;
  flagValue?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  posted?: InputMaybe<Scalars['Boolean']['input']>;
  postedLedger?: InputMaybe<Scalars['UUID']['input']>;
  prevApplied?: InputMaybe<Scalars['BigDecimal']['input']>;
  remarks?: InputMaybe<Scalars['String']['input']>;
  rounding?: InputMaybe<Scalars['Int']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  supplier?: InputMaybe<SupplierInput>;
  transType?: InputMaybe<ApTransactionInput>;
};

export type ReceiptIssuance = {
  __typename?: 'ReceiptIssuance';
  activebatch?: Maybe<Scalars['Boolean']['output']>;
  arCurrent?: Maybe<Scalars['Long']['output']>;
  arFrom?: Maybe<Scalars['Long']['output']>;
  arTo?: Maybe<Scalars['Long']['output']>;
  aractive?: Maybe<Scalars['Boolean']['output']>;
  batchcode?: Maybe<Scalars['String']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  receiptCurrent?: Maybe<Scalars['Long']['output']>;
  receiptFrom?: Maybe<Scalars['Long']['output']>;
  receiptTo?: Maybe<Scalars['Long']['output']>;
  terminal?: Maybe<CashierTerminal>;
};

export enum ReceiptType {
  Ar = 'AR',
  Or = 'OR'
}

export type ReceivableDetailedList = {
  __typename?: 'ReceivableDetailedList';
  balance?: Maybe<Scalars['BigDecimal']['output']>;
  billingNo?: Maybe<Scalars['String']['output']>;
  change?: Maybe<Scalars['Int']['output']>;
  dischargeDate?: Maybe<Scalars['String']['output']>;
  finalSoa?: Maybe<Scalars['String']['output']>;
  fullCount?: Maybe<Scalars['Int']['output']>;
  hci?: Maybe<Scalars['BigDecimal']['output']>;
  icd?: Maybe<Scalars['String']['output']>;
  patient?: Maybe<Scalars['String']['output']>;
  pf?: Maybe<Scalars['BigDecimal']['output']>;
  rowNum?: Maybe<Scalars['Int']['output']>;
  rvs?: Maybe<Scalars['String']['output']>;
};

export type ReceivableDetailedReport = {
  __typename?: 'ReceivableDetailedReport';
  content?: Maybe<Array<Maybe<ReceivableDetailedList>>>;
  page?: Maybe<Scalars['Int']['output']>;
  size?: Maybe<Scalars['Int']['output']>;
  totalSize?: Maybe<Scalars['BigInteger']['output']>;
};

export type ReceivableLedgerWithAging = {
  __typename?: 'ReceivableLedgerWithAging';
  credit?: Maybe<Scalars['BigDecimal']['output']>;
  day1To30?: Maybe<Scalars['BigDecimal']['output']>;
  day31To60?: Maybe<Scalars['BigDecimal']['output']>;
  day61To90?: Maybe<Scalars['BigDecimal']['output']>;
  day91To120?: Maybe<Scalars['BigDecimal']['output']>;
  dayOver120?: Maybe<Scalars['BigDecimal']['output']>;
  debit?: Maybe<Scalars['BigDecimal']['output']>;
  docDate?: Maybe<Scalars['String']['output']>;
  docNo?: Maybe<Scalars['String']['output']>;
  docType?: Maybe<Scalars['String']['output']>;
  dueDate?: Maybe<Scalars['String']['output']>;
  netAmount?: Maybe<Scalars['BigDecimal']['output']>;
  notDue?: Maybe<Scalars['BigDecimal']['output']>;
  openItem?: Maybe<Scalars['BigDecimal']['output']>;
  patientId?: Maybe<Scalars['String']['output']>;
  patientName?: Maybe<Scalars['String']['output']>;
  patientNo?: Maybe<Scalars['String']['output']>;
  refDocType?: Maybe<Scalars['String']['output']>;
  refNo?: Maybe<Scalars['String']['output']>;
  runningBalance?: Maybe<Scalars['BigDecimal']['output']>;
};

export type ReceivableLedgerWithAgingReport = {
  __typename?: 'ReceivableLedgerWithAgingReport';
  creditTotal?: Maybe<Scalars['BigDecimal']['output']>;
  day1To30Total?: Maybe<Scalars['BigDecimal']['output']>;
  day31To60Total?: Maybe<Scalars['BigDecimal']['output']>;
  day61To90Total?: Maybe<Scalars['BigDecimal']['output']>;
  day91To120Total?: Maybe<Scalars['BigDecimal']['output']>;
  dayOlderTotal?: Maybe<Scalars['BigDecimal']['output']>;
  debitTotal?: Maybe<Scalars['BigDecimal']['output']>;
  netAmount?: Maybe<Scalars['BigDecimal']['output']>;
  notDueTotal?: Maybe<Scalars['BigDecimal']['output']>;
  openItemTotal?: Maybe<Scalars['BigDecimal']['output']>;
  receivableLedgerWithAgings?: Maybe<Array<Maybe<ReceivableLedgerWithAging>>>;
};

export type ReceivablesItems = {
  __typename?: 'ReceivablesItems';
  arDescription?: Maybe<Scalars['String']['output']>;
  arId?: Maybe<Scalars['UUID']['output']>;
  arNo?: Maybe<Scalars['String']['output']>;
  arRecordNo?: Maybe<Scalars['String']['output']>;
  billingDescription?: Maybe<Scalars['String']['output']>;
  bsPhilClaims?: Maybe<BsPhilClaims>;
  companyId?: Maybe<Scalars['UUID']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  credit?: Maybe<Scalars['BigDecimal']['output']>;
  debit?: Maybe<Scalars['BigDecimal']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  type?: Maybe<Scalars['String']['output']>;
};

export type ReceivingReport = {
  __typename?: 'ReceivingReport';
  account?: Maybe<Scalars['UUID']['output']>;
  amount?: Maybe<Scalars['BigDecimal']['output']>;
  asset?: Maybe<Scalars['Boolean']['output']>;
  asset_a?: Maybe<Scalars['BigDecimal']['output']>;
  asset_b?: Maybe<Scalars['BigDecimal']['output']>;
  asset_c?: Maybe<Scalars['BigDecimal']['output']>;
  asset_d?: Maybe<Scalars['BigDecimal']['output']>;
  asset_e?: Maybe<Scalars['BigDecimal']['output']>;
  asset_f?: Maybe<Scalars['BigDecimal']['output']>;
  asset_g?: Maybe<Scalars['BigDecimal']['output']>;
  asset_h?: Maybe<Scalars['BigDecimal']['output']>;
  asset_i?: Maybe<Scalars['BigDecimal']['output']>;
  asset_j?: Maybe<Scalars['BigDecimal']['output']>;
  asset_k?: Maybe<Scalars['BigDecimal']['output']>;
  asset_l?: Maybe<Scalars['BigDecimal']['output']>;
  asset_m?: Maybe<Scalars['BigDecimal']['output']>;
  asset_n?: Maybe<Scalars['BigDecimal']['output']>;
  asset_o?: Maybe<Scalars['BigDecimal']['output']>;
  asset_p?: Maybe<Scalars['BigDecimal']['output']>;
  asset_q?: Maybe<Scalars['BigDecimal']['output']>;
  asset_r?: Maybe<Scalars['BigDecimal']['output']>;
  asset_s?: Maybe<Scalars['BigDecimal']['output']>;
  asset_t?: Maybe<Scalars['BigDecimal']['output']>;
  asset_u?: Maybe<Scalars['BigDecimal']['output']>;
  asset_v?: Maybe<Scalars['BigDecimal']['output']>;
  asset_w?: Maybe<Scalars['BigDecimal']['output']>;
  asset_x?: Maybe<Scalars['BigDecimal']['output']>;
  asset_y?: Maybe<Scalars['BigDecimal']['output']>;
  asset_z?: Maybe<Scalars['BigDecimal']['output']>;
  category?: Maybe<AccountingCategory>;
  clearingAmount?: Maybe<Scalars['BigDecimal']['output']>;
  consignment?: Maybe<Scalars['Boolean']['output']>;
  cost?: Maybe<Scalars['BigDecimal']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdByString?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  dateCreated?: Maybe<Scalars['Instant']['output']>;
  details?: Maybe<Scalars['Map_String_StringScalar']['output']>;
  domain?: Maybe<Scalars['String']['output']>;
  expense_a?: Maybe<Scalars['BigDecimal']['output']>;
  expense_b?: Maybe<Scalars['BigDecimal']['output']>;
  expense_c?: Maybe<Scalars['BigDecimal']['output']>;
  expense_d?: Maybe<Scalars['BigDecimal']['output']>;
  expense_e?: Maybe<Scalars['BigDecimal']['output']>;
  expense_f?: Maybe<Scalars['BigDecimal']['output']>;
  expense_g?: Maybe<Scalars['BigDecimal']['output']>;
  expense_h?: Maybe<Scalars['BigDecimal']['output']>;
  expense_i?: Maybe<Scalars['BigDecimal']['output']>;
  expense_j?: Maybe<Scalars['BigDecimal']['output']>;
  expense_k?: Maybe<Scalars['BigDecimal']['output']>;
  expense_l?: Maybe<Scalars['BigDecimal']['output']>;
  expense_m?: Maybe<Scalars['BigDecimal']['output']>;
  expense_n?: Maybe<Scalars['BigDecimal']['output']>;
  expense_o?: Maybe<Scalars['BigDecimal']['output']>;
  expense_p?: Maybe<Scalars['BigDecimal']['output']>;
  expense_q?: Maybe<Scalars['BigDecimal']['output']>;
  expense_r?: Maybe<Scalars['BigDecimal']['output']>;
  expense_s?: Maybe<Scalars['BigDecimal']['output']>;
  expense_t?: Maybe<Scalars['BigDecimal']['output']>;
  expense_u?: Maybe<Scalars['BigDecimal']['output']>;
  expense_v?: Maybe<Scalars['BigDecimal']['output']>;
  expense_w?: Maybe<Scalars['BigDecimal']['output']>;
  expense_x?: Maybe<Scalars['BigDecimal']['output']>;
  expense_y?: Maybe<Scalars['BigDecimal']['output']>;
  expense_z?: Maybe<Scalars['BigDecimal']['output']>;
  fixDiscount?: Maybe<Scalars['BigDecimal']['output']>;
  fixedAsset?: Maybe<Scalars['BigDecimal']['output']>;
  fixedAssetCategory?: Maybe<FixedAssetCategory>;
  flagValue?: Maybe<Scalars['String']['output']>;
  grossAmount?: Maybe<Scalars['BigDecimal']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  inputTax?: Maybe<Scalars['BigDecimal']['output']>;
  isPosted?: Maybe<Scalars['Boolean']['output']>;
  isVoid?: Maybe<Scalars['Boolean']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  medicine?: Maybe<Scalars['BigDecimal']['output']>;
  netAmount?: Maybe<Scalars['BigDecimal']['output']>;
  netDiscount?: Maybe<Scalars['BigDecimal']['output']>;
  paymentTerms?: Maybe<PaymentTerm>;
  postedLedger?: Maybe<Scalars['UUID']['output']>;
  purchaseOrder?: Maybe<PurchaseOrder>;
  receiveDate?: Maybe<Scalars['Instant']['output']>;
  receiveDepartment?: Maybe<Department>;
  receivedRefDate?: Maybe<Scalars['Instant']['output']>;
  receivedRefNo?: Maybe<Scalars['String']['output']>;
  receivedRemarks?: Maybe<Scalars['String']['output']>;
  receivedType?: Maybe<Scalars['String']['output']>;
  /** get list of items */
  receivingItems?: Maybe<Array<Maybe<ReceivingReportItem>>>;
  refAp?: Maybe<Scalars['UUID']['output']>;
  rrNo?: Maybe<Scalars['String']['output']>;
  supplier?: Maybe<Supplier>;
  supplies?: Maybe<Scalars['BigDecimal']['output']>;
  totalDiscount?: Maybe<Scalars['BigDecimal']['output']>;
  userFullname?: Maybe<Scalars['String']['output']>;
  userId?: Maybe<Scalars['UUID']['output']>;
  vatInclusive?: Maybe<Scalars['Boolean']['output']>;
  vatRate?: Maybe<Scalars['BigDecimal']['output']>;
};

export type ReceivingReportInput = {
  account?: InputMaybe<Scalars['UUID']['input']>;
  amount?: InputMaybe<Scalars['BigDecimal']['input']>;
  asset?: InputMaybe<Scalars['Boolean']['input']>;
  asset_a?: InputMaybe<Scalars['BigDecimal']['input']>;
  asset_b?: InputMaybe<Scalars['BigDecimal']['input']>;
  asset_c?: InputMaybe<Scalars['BigDecimal']['input']>;
  asset_d?: InputMaybe<Scalars['BigDecimal']['input']>;
  asset_e?: InputMaybe<Scalars['BigDecimal']['input']>;
  asset_f?: InputMaybe<Scalars['BigDecimal']['input']>;
  asset_g?: InputMaybe<Scalars['BigDecimal']['input']>;
  asset_h?: InputMaybe<Scalars['BigDecimal']['input']>;
  asset_i?: InputMaybe<Scalars['BigDecimal']['input']>;
  asset_j?: InputMaybe<Scalars['BigDecimal']['input']>;
  asset_k?: InputMaybe<Scalars['BigDecimal']['input']>;
  asset_l?: InputMaybe<Scalars['BigDecimal']['input']>;
  asset_m?: InputMaybe<Scalars['BigDecimal']['input']>;
  asset_n?: InputMaybe<Scalars['BigDecimal']['input']>;
  asset_o?: InputMaybe<Scalars['BigDecimal']['input']>;
  asset_p?: InputMaybe<Scalars['BigDecimal']['input']>;
  asset_q?: InputMaybe<Scalars['BigDecimal']['input']>;
  asset_r?: InputMaybe<Scalars['BigDecimal']['input']>;
  asset_s?: InputMaybe<Scalars['BigDecimal']['input']>;
  asset_t?: InputMaybe<Scalars['BigDecimal']['input']>;
  asset_u?: InputMaybe<Scalars['BigDecimal']['input']>;
  asset_v?: InputMaybe<Scalars['BigDecimal']['input']>;
  asset_w?: InputMaybe<Scalars['BigDecimal']['input']>;
  asset_x?: InputMaybe<Scalars['BigDecimal']['input']>;
  asset_y?: InputMaybe<Scalars['BigDecimal']['input']>;
  asset_z?: InputMaybe<Scalars['BigDecimal']['input']>;
  category?: InputMaybe<AccountingCategoryInput>;
  clearingAmount?: InputMaybe<Scalars['BigDecimal']['input']>;
  consignment?: InputMaybe<Scalars['Boolean']['input']>;
  cost?: InputMaybe<Scalars['BigDecimal']['input']>;
  expense_a?: InputMaybe<Scalars['BigDecimal']['input']>;
  expense_b?: InputMaybe<Scalars['BigDecimal']['input']>;
  expense_c?: InputMaybe<Scalars['BigDecimal']['input']>;
  expense_d?: InputMaybe<Scalars['BigDecimal']['input']>;
  expense_e?: InputMaybe<Scalars['BigDecimal']['input']>;
  expense_f?: InputMaybe<Scalars['BigDecimal']['input']>;
  expense_g?: InputMaybe<Scalars['BigDecimal']['input']>;
  expense_h?: InputMaybe<Scalars['BigDecimal']['input']>;
  expense_i?: InputMaybe<Scalars['BigDecimal']['input']>;
  expense_j?: InputMaybe<Scalars['BigDecimal']['input']>;
  expense_k?: InputMaybe<Scalars['BigDecimal']['input']>;
  expense_l?: InputMaybe<Scalars['BigDecimal']['input']>;
  expense_m?: InputMaybe<Scalars['BigDecimal']['input']>;
  expense_n?: InputMaybe<Scalars['BigDecimal']['input']>;
  expense_o?: InputMaybe<Scalars['BigDecimal']['input']>;
  expense_p?: InputMaybe<Scalars['BigDecimal']['input']>;
  expense_q?: InputMaybe<Scalars['BigDecimal']['input']>;
  expense_r?: InputMaybe<Scalars['BigDecimal']['input']>;
  expense_s?: InputMaybe<Scalars['BigDecimal']['input']>;
  expense_t?: InputMaybe<Scalars['BigDecimal']['input']>;
  expense_u?: InputMaybe<Scalars['BigDecimal']['input']>;
  expense_v?: InputMaybe<Scalars['BigDecimal']['input']>;
  expense_w?: InputMaybe<Scalars['BigDecimal']['input']>;
  expense_x?: InputMaybe<Scalars['BigDecimal']['input']>;
  expense_y?: InputMaybe<Scalars['BigDecimal']['input']>;
  expense_z?: InputMaybe<Scalars['BigDecimal']['input']>;
  fixDiscount?: InputMaybe<Scalars['BigDecimal']['input']>;
  fixedAsset?: InputMaybe<Scalars['BigDecimal']['input']>;
  fixedAssetCategory?: InputMaybe<FixedAssetCategoryInput>;
  flagValue?: InputMaybe<Scalars['String']['input']>;
  grossAmount?: InputMaybe<Scalars['BigDecimal']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  inputTax?: InputMaybe<Scalars['BigDecimal']['input']>;
  isPosted?: InputMaybe<Scalars['Boolean']['input']>;
  isVoid?: InputMaybe<Scalars['Boolean']['input']>;
  medicine?: InputMaybe<Scalars['BigDecimal']['input']>;
  netAmount?: InputMaybe<Scalars['BigDecimal']['input']>;
  netDiscount?: InputMaybe<Scalars['BigDecimal']['input']>;
  paymentTerms?: InputMaybe<PaymentTermInput>;
  postedLedger?: InputMaybe<Scalars['UUID']['input']>;
  purchaseOrder?: InputMaybe<PurchaseOrderInput>;
  receiveDate?: InputMaybe<Scalars['Instant']['input']>;
  receiveDepartment?: InputMaybe<DepartmentInput>;
  receivedRefDate?: InputMaybe<Scalars['Instant']['input']>;
  receivedRefNo?: InputMaybe<Scalars['String']['input']>;
  receivedRemarks?: InputMaybe<Scalars['String']['input']>;
  receivedType?: InputMaybe<Scalars['String']['input']>;
  receivingItems?: InputMaybe<Array<InputMaybe<ReceivingReportItemInput>>>;
  refAp?: InputMaybe<Scalars['UUID']['input']>;
  rrNo?: InputMaybe<Scalars['String']['input']>;
  supplier?: InputMaybe<SupplierInput>;
  supplies?: InputMaybe<Scalars['BigDecimal']['input']>;
  totalDiscount?: InputMaybe<Scalars['BigDecimal']['input']>;
  userFullname?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['UUID']['input']>;
  vatInclusive?: InputMaybe<Scalars['Boolean']['input']>;
  vatRate?: InputMaybe<Scalars['BigDecimal']['input']>;
};

export type ReceivingReportItem = {
  __typename?: 'ReceivingReportItem';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  discountRate?: Maybe<Scalars['BigDecimal']['output']>;
  expirationDate?: Maybe<Scalars['Instant']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  inputTax?: Maybe<Scalars['BigDecimal']['output']>;
  isCompleted?: Maybe<Scalars['Boolean']['output']>;
  isDiscount?: Maybe<Scalars['Boolean']['output']>;
  isFg?: Maybe<Scalars['Boolean']['output']>;
  isPartial?: Maybe<Scalars['Boolean']['output']>;
  isPosted?: Maybe<Scalars['Boolean']['output']>;
  isTax?: Maybe<Scalars['Boolean']['output']>;
  item?: Maybe<Item>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  lotNo?: Maybe<Scalars['String']['output']>;
  netAmount?: Maybe<Scalars['BigDecimal']['output']>;
  recInventoryCost?: Maybe<Scalars['BigDecimal']['output']>;
  receiveDiscountCost?: Maybe<Scalars['BigDecimal']['output']>;
  receiveQty?: Maybe<Scalars['Int']['output']>;
  receiveUnitCost?: Maybe<Scalars['BigDecimal']['output']>;
  receivingReport?: Maybe<ReceivingReport>;
  refPoItem?: Maybe<PurchaseOrderItems>;
  totalAmount?: Maybe<Scalars['BigDecimal']['output']>;
  unitMeasurement?: Maybe<Scalars['String']['output']>;
  uou?: Maybe<Scalars['String']['output']>;
};

export type ReceivingReportItemInput = {
  discountRate?: InputMaybe<Scalars['BigDecimal']['input']>;
  expirationDate?: InputMaybe<Scalars['Instant']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  inputTax?: InputMaybe<Scalars['BigDecimal']['input']>;
  isCompleted?: InputMaybe<Scalars['Boolean']['input']>;
  isDiscount?: InputMaybe<Scalars['Boolean']['input']>;
  isFg?: InputMaybe<Scalars['Boolean']['input']>;
  isPartial?: InputMaybe<Scalars['Boolean']['input']>;
  isPosted?: InputMaybe<Scalars['Boolean']['input']>;
  isTax?: InputMaybe<Scalars['Boolean']['input']>;
  item?: InputMaybe<ItemInput>;
  lotNo?: InputMaybe<Scalars['String']['input']>;
  netAmount?: InputMaybe<Scalars['BigDecimal']['input']>;
  recInventoryCost?: InputMaybe<Scalars['BigDecimal']['input']>;
  receiveDiscountCost?: InputMaybe<Scalars['BigDecimal']['input']>;
  receiveQty?: InputMaybe<Scalars['Int']['input']>;
  receiveUnitCost?: InputMaybe<Scalars['BigDecimal']['input']>;
  receivingReport?: InputMaybe<ReceivingReportInput>;
  refPoItem?: InputMaybe<PurchaseOrderItemsInput>;
  totalAmount?: InputMaybe<Scalars['BigDecimal']['input']>;
};

export type Region = {
  __typename?: 'Region';
  country?: Maybe<Country>;
  id?: Maybe<Scalars['UUID']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

export type RegistryType = {
  __typename?: 'RegistryType';
  id?: Maybe<Scalars['UUID']['output']>;
  registryCode?: Maybe<Scalars['String']['output']>;
  registryTitle?: Maybe<Scalars['String']['output']>;
};

export type ReleaseCheck = {
  __typename?: 'ReleaseCheck';
  bank?: Maybe<Bank>;
  check?: Maybe<DisbursementCheck>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  disbursement?: Maybe<Disbursement>;
  id?: Maybe<Scalars['UUID']['output']>;
  isPosted?: Maybe<Scalars['Boolean']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  releaseDate?: Maybe<Scalars['Instant']['output']>;
  release_by?: Maybe<Scalars['String']['output']>;
};

export type ReportDetailsDto = {
  __typename?: 'ReportDetailsDto';
  account?: Maybe<Scalars['String']['output']>;
  balance?: Maybe<Scalars['BigDecimal']['output']>;
  code?: Maybe<Scalars['String']['output']>;
  credit?: Maybe<Scalars['BigDecimal']['output']>;
  debit?: Maybe<Scalars['BigDecimal']['output']>;
  entityName?: Maybe<Scalars['String']['output']>;
  invoiceSoaReference?: Maybe<Scalars['String']['output']>;
  particulars?: Maybe<Scalars['String']['output']>;
  transactionDate?: Maybe<Scalars['String']['output']>;
};

export type ReportDetailsPageDto = {
  __typename?: 'ReportDetailsPageDto';
  account?: Maybe<Scalars['String']['output']>;
  code?: Maybe<Scalars['String']['output']>;
  content?: Maybe<Array<Maybe<ReportDetailsDto>>>;
};

export type Response = {
  __typename?: 'Response';
  redirect: Scalars['Boolean']['output'];
  successful: Scalars['Boolean']['output'];
};

export type ReturnItemInfo = {
  __typename?: 'ReturnItemInfo';
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  qty?: Maybe<Scalars['Int']['output']>;
};

export type ReturnMedication = {
  __typename?: 'ReturnMedication';
  case_?: Maybe<Case>;
  id?: Maybe<Scalars['UUID']['output']>;
  patient?: Maybe<Patient>;
  receivedBy?: Maybe<Employee>;
  remarks?: Maybe<Scalars['String']['output']>;
  returnedBy?: Maybe<Employee>;
  returnedDate?: Maybe<Scalars['Instant']['output']>;
};

export type ReturnSupplier = {
  __typename?: 'ReturnSupplier';
  accType?: Maybe<Scalars['UUID']['output']>;
  asset_a?: Maybe<Scalars['BigDecimal']['output']>;
  asset_b?: Maybe<Scalars['BigDecimal']['output']>;
  asset_c?: Maybe<Scalars['BigDecimal']['output']>;
  asset_d?: Maybe<Scalars['BigDecimal']['output']>;
  asset_e?: Maybe<Scalars['BigDecimal']['output']>;
  asset_f?: Maybe<Scalars['BigDecimal']['output']>;
  asset_g?: Maybe<Scalars['BigDecimal']['output']>;
  asset_h?: Maybe<Scalars['BigDecimal']['output']>;
  asset_i?: Maybe<Scalars['BigDecimal']['output']>;
  asset_j?: Maybe<Scalars['BigDecimal']['output']>;
  asset_k?: Maybe<Scalars['BigDecimal']['output']>;
  asset_l?: Maybe<Scalars['BigDecimal']['output']>;
  asset_m?: Maybe<Scalars['BigDecimal']['output']>;
  asset_n?: Maybe<Scalars['BigDecimal']['output']>;
  asset_o?: Maybe<Scalars['BigDecimal']['output']>;
  asset_p?: Maybe<Scalars['BigDecimal']['output']>;
  asset_q?: Maybe<Scalars['BigDecimal']['output']>;
  asset_r?: Maybe<Scalars['BigDecimal']['output']>;
  asset_s?: Maybe<Scalars['BigDecimal']['output']>;
  asset_t?: Maybe<Scalars['BigDecimal']['output']>;
  asset_u?: Maybe<Scalars['BigDecimal']['output']>;
  asset_v?: Maybe<Scalars['BigDecimal']['output']>;
  asset_w?: Maybe<Scalars['BigDecimal']['output']>;
  asset_x?: Maybe<Scalars['BigDecimal']['output']>;
  asset_y?: Maybe<Scalars['BigDecimal']['output']>;
  asset_z?: Maybe<Scalars['BigDecimal']['output']>;
  category?: Maybe<AccountingCategory>;
  cost?: Maybe<Scalars['BigDecimal']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  department?: Maybe<Department>;
  details?: Maybe<Scalars['Map_String_StringScalar']['output']>;
  domain?: Maybe<Scalars['String']['output']>;
  expense_a?: Maybe<Scalars['BigDecimal']['output']>;
  expense_b?: Maybe<Scalars['BigDecimal']['output']>;
  expense_c?: Maybe<Scalars['BigDecimal']['output']>;
  expense_d?: Maybe<Scalars['BigDecimal']['output']>;
  expense_e?: Maybe<Scalars['BigDecimal']['output']>;
  expense_f?: Maybe<Scalars['BigDecimal']['output']>;
  expense_g?: Maybe<Scalars['BigDecimal']['output']>;
  expense_h?: Maybe<Scalars['BigDecimal']['output']>;
  expense_i?: Maybe<Scalars['BigDecimal']['output']>;
  expense_j?: Maybe<Scalars['BigDecimal']['output']>;
  expense_k?: Maybe<Scalars['BigDecimal']['output']>;
  expense_l?: Maybe<Scalars['BigDecimal']['output']>;
  expense_m?: Maybe<Scalars['BigDecimal']['output']>;
  expense_n?: Maybe<Scalars['BigDecimal']['output']>;
  expense_o?: Maybe<Scalars['BigDecimal']['output']>;
  expense_p?: Maybe<Scalars['BigDecimal']['output']>;
  expense_q?: Maybe<Scalars['BigDecimal']['output']>;
  expense_r?: Maybe<Scalars['BigDecimal']['output']>;
  expense_s?: Maybe<Scalars['BigDecimal']['output']>;
  expense_t?: Maybe<Scalars['BigDecimal']['output']>;
  expense_u?: Maybe<Scalars['BigDecimal']['output']>;
  expense_v?: Maybe<Scalars['BigDecimal']['output']>;
  expense_w?: Maybe<Scalars['BigDecimal']['output']>;
  expense_x?: Maybe<Scalars['BigDecimal']['output']>;
  expense_y?: Maybe<Scalars['BigDecimal']['output']>;
  expense_z?: Maybe<Scalars['BigDecimal']['output']>;
  flagValue?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  isPosted?: Maybe<Scalars['Boolean']['output']>;
  isVoid?: Maybe<Scalars['Boolean']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  postedLedger?: Maybe<Scalars['UUID']['output']>;
  receivedRefDate?: Maybe<Scalars['Instant']['output']>;
  receivedRefNo?: Maybe<Scalars['String']['output']>;
  received_by?: Maybe<Scalars['String']['output']>;
  refSrr?: Maybe<Scalars['String']['output']>;
  refSrrList?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  returnBy?: Maybe<Scalars['String']['output']>;
  returnDate?: Maybe<Scalars['Instant']['output']>;
  returnUser?: Maybe<Scalars['UUID']['output']>;
  rtsNo?: Maybe<Scalars['String']['output']>;
  supplier?: Maybe<Supplier>;
  supplierAmount?: Maybe<Scalars['BigDecimal']['output']>;
};

export type ReturnSupplierItem = {
  __typename?: 'ReturnSupplierItem';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  isPosted?: Maybe<Scalars['Boolean']['output']>;
  item?: Maybe<Item>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  originalQty?: Maybe<Scalars['Int']['output']>;
  returnQty?: Maybe<Scalars['Int']['output']>;
  returnSupplier?: Maybe<ReturnSupplier>;
  returnUnitCost?: Maybe<Scalars['BigDecimal']['output']>;
  return_remarks?: Maybe<Scalars['String']['output']>;
  unitMeasurement?: Maybe<Scalars['String']['output']>;
  uou?: Maybe<Scalars['String']['output']>;
};

export type Revenues = {
  __typename?: 'Revenues';
  amountFromDoh?: Maybe<Scalars['Float']['output']>;
  amountFromDonor?: Maybe<Scalars['Float']['output']>;
  amountFromLgu?: Maybe<Scalars['Float']['output']>;
  amountFromOtherSources?: Maybe<Scalars['Float']['output']>;
  amountFromPatient?: Maybe<Scalars['Float']['output']>;
  amountFromPhilHealth?: Maybe<Scalars['Float']['output']>;
  amountFromPrivateOrg?: Maybe<Scalars['Float']['output']>;
  amountFromReimbursement?: Maybe<Scalars['Float']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  dohResponse?: Maybe<Scalars['String']['output']>;
  grandTotal?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  reportingYear?: Maybe<Scalars['Int']['output']>;
  submittedDateTime?: Maybe<Scalars['Instant']['output']>;
};

export type RevenuesDoh = {
  __typename?: 'RevenuesDOH';
  insert?: Maybe<Scalars['String']['output']>;
  report?: Maybe<DefaultDohResponseDetails>;
};

export type RevenuesDto = {
  __typename?: 'RevenuesDTO';
  response_code?: Maybe<Scalars['String']['output']>;
  response_datetime?: Maybe<Scalars['String']['output']>;
  response_desc?: Maybe<Scalars['String']['output']>;
  response_value?: Maybe<RevenuesObj>;
};

export type RevenuesObj = {
  __typename?: 'RevenuesObj';
  revenues?: Maybe<RevenuesDoh>;
};

export type RfFees = {
  __typename?: 'RfFees';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  dateCreated?: Maybe<Scalars['Instant']['output']>;
  doctor?: Maybe<Employee>;
  fixedValue?: Maybe<Scalars['BigDecimal']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  rfPercentage?: Maybe<Scalars['BigDecimal']['output']>;
  service?: Maybe<Service>;
  useFixedValue?: Maybe<Scalars['Boolean']['output']>;
};

export type RfFeesInput = {
  doctor?: InputMaybe<EmployeeInput>;
  fixedValue?: InputMaybe<Scalars['BigDecimal']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  rfPercentage?: InputMaybe<Scalars['BigDecimal']['input']>;
  service?: InputMaybe<ServiceInput>;
  useFixedValue?: InputMaybe<Scalars['Boolean']['input']>;
};

export type Room = {
  __typename?: 'Room';
  bedNo?: Maybe<Scalars['String']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  deleted?: Maybe<Scalars['Boolean']['output']>;
  department?: Maybe<Department>;
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  isWard?: Maybe<Scalars['Boolean']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  notes?: Maybe<Scalars['String']['output']>;
  price?: Maybe<Scalars['BigDecimal']['output']>;
  roomBedNo?: Maybe<Scalars['String']['output']>;
  roomName?: Maybe<Scalars['String']['output']>;
  roomNo?: Maybe<Scalars['String']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  type?: Maybe<Scalars['String']['output']>;
};

export type RoomInput = {
  bedNo?: InputMaybe<Scalars['String']['input']>;
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  department?: InputMaybe<DepartmentInput>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  isWard?: InputMaybe<Scalars['Boolean']['input']>;
  notes?: InputMaybe<Scalars['String']['input']>;
  price?: InputMaybe<Scalars['BigDecimal']['input']>;
  roomBedNo?: InputMaybe<Scalars['String']['input']>;
  roomName?: InputMaybe<Scalars['String']['input']>;
  roomNo?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};

export type SalaryRateMultiplier = {
  __typename?: 'SalaryRateMultiplier';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  doubleHoliday?: Maybe<Scalars['Float']['output']>;
  doubleHolidayAndRestDay?: Maybe<Scalars['Float']['output']>;
  doubleHolidayAndRestDayOvertime?: Maybe<Scalars['Float']['output']>;
  doubleHolidayOvertime?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  nightDifferential?: Maybe<Scalars['Float']['output']>;
  regular?: Maybe<Scalars['Float']['output']>;
  regularHoliday?: Maybe<Scalars['Float']['output']>;
  regularHolidayAndRestDay?: Maybe<Scalars['Float']['output']>;
  regularHolidayAndRestDayOvertime?: Maybe<Scalars['Float']['output']>;
  regularHolidayOvertime?: Maybe<Scalars['Float']['output']>;
  regularOvertime?: Maybe<Scalars['Float']['output']>;
  restday?: Maybe<Scalars['Float']['output']>;
  restdayOvertime?: Maybe<Scalars['Float']['output']>;
  specialHoliday?: Maybe<Scalars['Float']['output']>;
  specialHolidayAndRestDay?: Maybe<Scalars['Float']['output']>;
  specialHolidayAndRestDayOvertime?: Maybe<Scalars['Float']['output']>;
  specialHolidayOvertime?: Maybe<Scalars['Float']['output']>;
};

export type SalesReportDetailedDto = {
  __typename?: 'SalesReportDetailedDto';
  amount?: Maybe<Scalars['BigDecimal']['output']>;
  barcode?: Maybe<Scalars['String']['output']>;
  billing_reference_no?: Maybe<Scalars['String']['output']>;
  department?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  folio_no?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  item_code?: Maybe<Scalars['String']['output']>;
  qty?: Maybe<Scalars['BigDecimal']['output']>;
  service_code?: Maybe<Scalars['String']['output']>;
  total_amount?: Maybe<Scalars['BigDecimal']['output']>;
  transaction_date?: Maybe<Scalars['Instant']['output']>;
};

export type SalesTransaction = {
  __typename?: 'SalesTransaction';
  address?: Maybe<Scalars['String']['output']>;
  cashierId?: Maybe<Scalars['UUID']['output']>;
  cashierName?: Maybe<Scalars['String']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  customerId?: Maybe<Scalars['UUID']['output']>;
  customerName?: Maybe<Scalars['String']['output']>;
  datePurchase?: Maybe<Scalars['Instant']['output']>;
  deleted?: Maybe<Scalars['Boolean']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  voided?: Maybe<Scalars['Boolean']['output']>;
};

export type SalesTransactionItem = {
  __typename?: 'SalesTransactionItem';
  amount?: Maybe<Scalars['BigDecimal']['output']>;
  basePrice?: Maybe<Scalars['BigDecimal']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  deleted?: Maybe<Scalars['Boolean']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  item?: Maybe<Item>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  nonVat?: Maybe<Scalars['Boolean']['output']>;
  qty?: Maybe<Scalars['BigDecimal']['output']>;
  salesTransaction?: Maybe<SalesTransaction>;
  status?: Maybe<Scalars['String']['output']>;
  voided?: Maybe<Scalars['Boolean']['output']>;
};

export type Salesreportitem = {
  __typename?: 'Salesreportitem';
  category?: Maybe<Scalars['String']['output']>;
  date?: Maybe<Scalars['Instant']['output']>;
  department?: Maybe<Scalars['String']['output']>;
  discounts_availed?: Maybe<Scalars['String']['output']>;
  discounts_total?: Maybe<Scalars['BigDecimal']['output']>;
  folio?: Maybe<Scalars['String']['output']>;
  gross?: Maybe<Scalars['BigDecimal']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  net_sales?: Maybe<Scalars['BigDecimal']['output']>;
  ornos?: Maybe<Scalars['String']['output']>;
  process_code?: Maybe<Scalars['String']['output']>;
  recno?: Maybe<Scalars['String']['output']>;
  service?: Maybe<Scalars['String']['output']>;
  service_code?: Maybe<Scalars['String']['output']>;
  vat_amount?: Maybe<Scalars['BigDecimal']['output']>;
  vat_exempt_sales?: Maybe<Scalars['BigDecimal']['output']>;
  vatable_sales?: Maybe<Scalars['BigDecimal']['output']>;
};

export type SalesreportitemTotals = {
  __typename?: 'SalesreportitemTotals';
  discounts_total?: Maybe<Scalars['BigDecimal']['output']>;
  gross?: Maybe<Scalars['BigDecimal']['output']>;
  net_sales?: Maybe<Scalars['BigDecimal']['output']>;
};

export type Schedule = {
  __typename?: 'Schedule';
  end?: Maybe<Scalars['Instant']['output']>;
  start?: Maybe<Scalars['Instant']['output']>;
  title?: Maybe<Scalars['String']['output']>;
  type?: Maybe<Scalars['String']['output']>;
};

export type ScheduleLock = {
  __typename?: 'ScheduleLock';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  date?: Maybe<Scalars['Instant']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  isLocked?: Maybe<Scalars['Boolean']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
};

export type SelectedDate = {
  __typename?: 'SelectedDate';
  endDatetime?: Maybe<Scalars['Instant']['output']>;
  hours?: Maybe<Scalars['Float']['output']>;
  scheduleType?: Maybe<Scalars['String']['output']>;
  startDatetime?: Maybe<Scalars['Instant']['output']>;
};

export type SelectedDateInput = {
  endDatetime?: InputMaybe<Scalars['Instant']['input']>;
  hours?: InputMaybe<Scalars['Float']['input']>;
  scheduleType?: InputMaybe<Scalars['String']['input']>;
  startDatetime?: InputMaybe<Scalars['Instant']['input']>;
};

export type Service = {
  __typename?: 'Service';
  abbottLISCode?: Maybe<Scalars['String']['output']>;
  available?: Maybe<Scalars['Boolean']['output']>;
  basePrice?: Maybe<Scalars['BigDecimal']['output']>;
  calculatedAmount?: Maybe<Scalars['BigDecimal']['output']>;
  category?: Maybe<Scalars['String']['output']>;
  cost?: Maybe<Scalars['BigDecimal']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  department?: Maybe<Department>;
  description?: Maybe<Scalars['String']['output']>;
  device?: Maybe<Scalars['String']['output']>;
  diagnostic?: Maybe<Scalars['Boolean']['output']>;
  flagValue?: Maybe<Scalars['String']['output']>;
  genericService?: Maybe<Scalars['Boolean']['output']>;
  hidden?: Maybe<Scalars['Boolean']['output']>;
  hideInPatientDiagnostics?: Maybe<Scalars['Boolean']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  isLifeSupport?: Maybe<Scalars['Boolean']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  markup?: Maybe<Scalars['BigDecimal']['output']>;
  packageItems?: Maybe<Array<Maybe<PackageContent>>>;
  processCode?: Maybe<Scalars['String']['output']>;
  readersFee?: Maybe<Scalars['BigDecimal']['output']>;
  revenueToUser?: Maybe<Scalars['Boolean']['output']>;
  rfPercentage?: Maybe<Scalars['BigDecimal']['output']>;
  serviceCode?: Maybe<Scalars['String']['output']>;
  serviceName?: Maybe<Scalars['String']['output']>;
  serviceNameCategory?: Maybe<Scalars['String']['output']>;
  serviceType?: Maybe<ServiceTypes>;
  stat?: Maybe<Scalars['Boolean']['output']>;
  testProcedureType?: Maybe<TestProcedureType>;
  type?: Maybe<SystemType>;
};

export type ServiceCheckDto = {
  __typename?: 'ServiceCheckDTO';
  service?: Maybe<Service>;
  withPrice?: Maybe<Scalars['Boolean']['output']>;
};

export type ServiceInput = {
  abbottLISCode?: InputMaybe<Scalars['String']['input']>;
  available?: InputMaybe<Scalars['Boolean']['input']>;
  basePrice?: InputMaybe<Scalars['BigDecimal']['input']>;
  calculatedAmount?: InputMaybe<Scalars['BigDecimal']['input']>;
  category?: InputMaybe<Scalars['String']['input']>;
  cost?: InputMaybe<Scalars['BigDecimal']['input']>;
  department?: InputMaybe<DepartmentInput>;
  description?: InputMaybe<Scalars['String']['input']>;
  device?: InputMaybe<Scalars['String']['input']>;
  diagnostic?: InputMaybe<Scalars['Boolean']['input']>;
  flagValue?: InputMaybe<Scalars['String']['input']>;
  genericService?: InputMaybe<Scalars['Boolean']['input']>;
  hidden?: InputMaybe<Scalars['Boolean']['input']>;
  hideInPatientDiagnostics?: InputMaybe<Scalars['Boolean']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  isLifeSupport?: InputMaybe<Scalars['Boolean']['input']>;
  markup?: InputMaybe<Scalars['BigDecimal']['input']>;
  packageItems?: InputMaybe<Array<InputMaybe<PackageContentInput>>>;
  processCode?: InputMaybe<Scalars['String']['input']>;
  readersFee?: InputMaybe<Scalars['BigDecimal']['input']>;
  revenueToUser?: InputMaybe<Scalars['Boolean']['input']>;
  rfPercentage?: InputMaybe<Scalars['BigDecimal']['input']>;
  serviceCode?: InputMaybe<Scalars['String']['input']>;
  serviceName?: InputMaybe<Scalars['String']['input']>;
  serviceNameCategory?: InputMaybe<Scalars['String']['input']>;
  serviceType?: InputMaybe<ServiceTypes>;
  stat?: InputMaybe<Scalars['Boolean']['input']>;
  testProcedureType?: InputMaybe<TestProcedureTypeInput>;
  type?: InputMaybe<SystemType>;
};

export type ServicePriceControl = {
  __typename?: 'ServicePriceControl';
  amountValue?: Maybe<Scalars['BigDecimal']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  locked?: Maybe<Scalars['Boolean']['output']>;
  percentageValue?: Maybe<Scalars['BigDecimal']['output']>;
  priceTierDetail?: Maybe<PriceTierDetail>;
  service?: Maybe<Service>;
};

export type ServicePriceControlDto = {
  __typename?: 'ServicePriceControlDto';
  addon?: Maybe<Scalars['BigDecimal']['output']>;
  amountValue?: Maybe<Scalars['BigDecimal']['output']>;
  basePrice?: Maybe<Scalars['BigDecimal']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  locked?: Maybe<Scalars['Boolean']['output']>;
  margin?: Maybe<Scalars['BigDecimal']['output']>;
  percentageValue?: Maybe<Scalars['BigDecimal']['output']>;
  service?: Maybe<Service>;
  tierDetail?: Maybe<PriceTierDetail>;
  totalMarkup?: Maybe<Scalars['BigDecimal']['output']>;
};

export enum ServiceTypes {
  Bundle = 'BUNDLE',
  Package = 'PACKAGE',
  Panel = 'PANEL',
  Single = 'SINGLE'
}

export type Shift = {
  __typename?: 'Shift';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  fromTime?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  moveBackDays?: Maybe<Scalars['Int']['output']>;
  toTime?: Maybe<Scalars['String']['output']>;
};

export type ShiftAndIntakes = {
  __typename?: 'ShiftAndIntakes';
  fromTime?: Maybe<Scalars['String']['output']>;
  intakeList?: Maybe<Array<Maybe<Intake>>>;
  shiftName?: Maybe<Scalars['String']['output']>;
  toTime?: Maybe<Scalars['String']['output']>;
  totalMl?: Maybe<Scalars['BigDecimal']['output']>;
};

export type ShiftAndOutputs = {
  __typename?: 'ShiftAndOutputs';
  fromTime?: Maybe<Scalars['String']['output']>;
  outputList?: Maybe<Array<Maybe<Output>>>;
  shiftName?: Maybe<Scalars['String']['output']>;
  toTime?: Maybe<Scalars['String']['output']>;
  totalMl?: Maybe<Scalars['BigDecimal']['output']>;
};

export type ShiftDto = {
  __typename?: 'ShiftDTO';
  intakesDate?: Maybe<Scalars['String']['output']>;
  shiftAndIntakes?: Maybe<Array<Maybe<ShiftAndIntakes>>>;
  totalMl?: Maybe<Scalars['BigDecimal']['output']>;
};

export type ShiftOutputsDto = {
  __typename?: 'ShiftOutputsDTO';
  outputsDate?: Maybe<Scalars['String']['output']>;
  shiftAndOutputs?: Maybe<Array<Maybe<ShiftAndOutputs>>>;
  totalMl?: Maybe<Scalars['BigDecimal']['output']>;
};

export type Shifting = {
  __typename?: 'Shifting';
  acknowledgeby?: Maybe<Scalars['String']['output']>;
  acknowledged?: Maybe<Scalars['Boolean']['output']>;
  acknowledgedate?: Maybe<Scalars['Instant']['output']>;
  active?: Maybe<Scalars['Boolean']['output']>;
  cdctr?: Maybe<Cdctr>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  details?: Maybe<Scalars['Map_String_StringScalar']['output']>;
  endshift?: Maybe<Scalars['Instant']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  overageShortage?: Maybe<Scalars['BigDecimal']['output']>;
  payments?: Maybe<Array<Maybe<PaymentTracker>>>;
  shiftno?: Maybe<Scalars['String']['output']>;
  startshift?: Maybe<Scalars['Instant']['output']>;
  terminal?: Maybe<CashierTerminal>;
};

export type ShiftingInput = {
  acknowledgeby?: InputMaybe<Scalars['String']['input']>;
  acknowledged?: InputMaybe<Scalars['Boolean']['input']>;
  acknowledgedate?: InputMaybe<Scalars['Instant']['input']>;
  active?: InputMaybe<Scalars['Boolean']['input']>;
  cdctr?: InputMaybe<CdctrInput>;
  details?: InputMaybe<Scalars['Map_String_StringScalar']['input']>;
  endshift?: InputMaybe<Scalars['Instant']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  overageShortage?: InputMaybe<Scalars['BigDecimal']['input']>;
  payments?: InputMaybe<Array<InputMaybe<PaymentTrackerInput>>>;
  shiftno?: InputMaybe<Scalars['String']['input']>;
  startshift?: InputMaybe<Scalars['Instant']['input']>;
  terminal?: InputMaybe<CashierTerminalInput>;
};

export type Signature = {
  __typename?: 'Signature';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  currentUsers?: Maybe<Scalars['Boolean']['output']>;
  department?: Maybe<Department>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  sequence?: Maybe<Scalars['Int']['output']>;
  signatureHeader?: Maybe<Scalars['String']['output']>;
  signaturePerson?: Maybe<Scalars['String']['output']>;
  signaturePosition?: Maybe<Scalars['String']['output']>;
  signatureType?: Maybe<Scalars['String']['output']>;
};

export type SoaGrouping = {
  __typename?: 'SoaGrouping';
  billing?: Maybe<Billing>;
  contents?: Maybe<Array<Maybe<BillingItem>>>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  groupName?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
};

export type SoaGroupingInput = {
  billing?: InputMaybe<BillingInput>;
  contents?: InputMaybe<Array<InputMaybe<BillingItemInput>>>;
  groupName?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
};

export type Sort = {
  __typename?: 'Sort';
  orders: Array<Order>;
};

export type Sorting = {
  __typename?: 'Sorting';
  orders: Array<Order>;
};

export type SourceLineType = {
  __typename?: 'SourceLineType';
  code?: Maybe<Scalars['String']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  lineType?: Maybe<LineType>;
  linetypeParent?: Maybe<LineType>;
  operationType?: Maybe<LineTypeOperationType>;
};

export type SourceMotherAccount = {
  __typename?: 'SourceMotherAccount';
  chartOfAccount?: Maybe<ChartOfAccount>;
  code?: Maybe<Scalars['String']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  lineType?: Maybe<LineType>;
  valueType?: Maybe<SourceValueType>;
};

export type SourceSubAccount = {
  __typename?: 'SourceSubAccount';
  code?: Maybe<Scalars['String']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  excludes?: Maybe<Array<Maybe<SourceSubAccountExclude>>>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  lineType?: Maybe<LineType>;
  subaccount?: Maybe<SubAccountSetup>;
  valueType?: Maybe<SourceValueType>;
};

export type SourceSubAccountExclude = {
  __typename?: 'SourceSubAccountExclude';
  id?: Maybe<Scalars['UUID']['output']>;
  motherAccount?: Maybe<ChartOfAccount>;
  sourceSubAccount?: Maybe<SourceSubAccount>;
};

export enum SourceType {
  FixedValue = 'FIXED_VALUE',
  Hidden = 'HIDDEN',
  LineType = 'LINE_TYPE',
  MotherAccount = 'MOTHER_ACCOUNT',
  SubAccount = 'SUB_ACCOUNT',
  Text = 'TEXT'
}

export enum SourceValueType {
  Balance = 'BALANCE',
  Contra = 'CONTRA',
  Normal = 'NORMAL',
  PeriodicBalance = 'PERIODIC_BALANCE'
}

export type Specialty = {
  __typename?: 'Specialty';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  deleted?: Maybe<Scalars['Boolean']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

export type SpecialtyInput = {
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

export type SpeechTherapyNote = {
  __typename?: 'SpeechTherapyNote';
  assessment?: Maybe<Scalars['String']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  employee?: Maybe<Employee>;
  entryDateTime?: Maybe<Scalars['Instant']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  objective?: Maybe<Scalars['String']['output']>;
  parentCase?: Maybe<Case>;
  plan?: Maybe<Scalars['String']['output']>;
  subjective?: Maybe<Scalars['String']['output']>;
};

export type StaffingPattern = {
  __typename?: 'StaffingPattern';
  activeRotatingAffiliate?: Maybe<Scalars['Int']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  dohResponse?: Maybe<Scalars['String']['output']>;
  fullTime40Permanent?: Maybe<Scalars['Int']['output']>;
  fulltime40Contractual?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  outSourced?: Maybe<Scalars['Int']['output']>;
  partTimeContractual?: Maybe<Scalars['Int']['output']>;
  partTimePermanent?: Maybe<Scalars['Int']['output']>;
  professionDesignation?: Maybe<Scalars['Int']['output']>;
  reportingYear?: Maybe<Scalars['Int']['output']>;
  specialtyBoardCertified?: Maybe<Scalars['Int']['output']>;
  submittedDateTime?: Maybe<Scalars['Instant']['output']>;
};

export type StaffingPatternDoh = {
  __typename?: 'StaffingPatternDOH';
  insert?: Maybe<Scalars['String']['output']>;
  report?: Maybe<DefaultDohResponseDetails>;
  update?: Maybe<Scalars['String']['output']>;
};

export type StaffingPatternDto = {
  __typename?: 'StaffingPatternDTO';
  positionDescription?: Maybe<Scalars['String']['output']>;
  response_code?: Maybe<Scalars['String']['output']>;
  response_datetime?: Maybe<Scalars['String']['output']>;
  response_desc?: Maybe<Scalars['String']['output']>;
  response_value?: Maybe<StaffingPatternObj>;
};

export type StaffingPatternObj = {
  __typename?: 'StaffingPatternObj';
  staffingPattern?: Maybe<StaffingPatternDoh>;
  staffingPatternOthers?: Maybe<StaffingPatternDoh>;
};

export type StaffingPatternOthers = {
  __typename?: 'StaffingPatternOthers';
  activeRotatingAffiliate?: Maybe<Scalars['Int']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  dohResponse?: Maybe<Scalars['String']['output']>;
  fulltime40Contractual?: Maybe<Scalars['Int']['output']>;
  fulltime40Permanent?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  outSourced?: Maybe<Scalars['Int']['output']>;
  parent?: Maybe<Scalars['Int']['output']>;
  parttimeContractual?: Maybe<Scalars['Int']['output']>;
  parttimePermanent?: Maybe<Scalars['Int']['output']>;
  professionDesignation?: Maybe<Scalars['String']['output']>;
  reportingYear?: Maybe<Scalars['Int']['output']>;
  specialtyBoardCertified?: Maybe<Scalars['Int']['output']>;
  submittedDateTime?: Maybe<Scalars['Instant']['output']>;
};

export type StockCard = {
  __typename?: 'StockCard';
  adjustment?: Maybe<Scalars['Int']['output']>;
  desc_long?: Maybe<Scalars['String']['output']>;
  dest_department?: Maybe<Scalars['String']['output']>;
  destination_dep?: Maybe<Scalars['String']['output']>;
  document_code?: Maybe<Scalars['String']['output']>;
  document_desc?: Maybe<Scalars['String']['output']>;
  document_types?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  item?: Maybe<Scalars['String']['output']>;
  item_code?: Maybe<Scalars['String']['output']>;
  ledger_date?: Maybe<Scalars['String']['output']>;
  ledger_qty_out?: Maybe<Scalars['Int']['output']>;
  ledger_qtyin?: Maybe<Scalars['Int']['output']>;
  reference_no?: Maybe<Scalars['String']['output']>;
  runningbalance?: Maybe<Scalars['BigDecimal']['output']>;
  runningqty?: Maybe<Scalars['Int']['output']>;
  sku?: Maybe<Scalars['String']['output']>;
  source_dep?: Maybe<Scalars['String']['output']>;
  source_department?: Maybe<Scalars['String']['output']>;
  unitcost?: Maybe<Scalars['BigDecimal']['output']>;
  wcost?: Maybe<Scalars['BigDecimal']['output']>;
};

export type StockCardTransaction = {
  __typename?: 'StockCardTransaction';
  billNo?: Maybe<Scalars['String']['output']>;
  caseNo?: Maybe<Scalars['String']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  patient?: Maybe<Scalars['String']['output']>;
  type?: Maybe<Scalars['String']['output']>;
};

export type StockCardTransactionsNSql = {
  __typename?: 'StockCardTransactionsNSql';
  adjustment?: Maybe<Scalars['Int']['output']>;
  destinationDept?: Maybe<Scalars['String']['output']>;
  documentDesc?: Maybe<Scalars['String']['output']>;
  items?: Maybe<Scalars['String']['output']>;
  key?: Maybe<Scalars['String']['output']>;
  ledgerDate?: Maybe<Scalars['String']['output']>;
  postedLedger?: Maybe<Scalars['String']['output']>;
  qtyIn?: Maybe<Scalars['Int']['output']>;
  qtyOut?: Maybe<Scalars['Int']['output']>;
  referenceNo?: Maybe<Scalars['String']['output']>;
  sourceDept?: Maybe<Scalars['String']['output']>;
};

export type StockRequest = {
  __typename?: 'StockRequest';
  claimedBy?: Maybe<Employee>;
  claimedByDatetime?: Maybe<Scalars['Instant']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  dispensedBy?: Maybe<Employee>;
  dispensedByDatetime?: Maybe<Scalars['Instant']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  patient?: Maybe<Patient>;
  patientCase?: Maybe<Case>;
  preparedBy?: Maybe<Employee>;
  preparedByDatetime?: Maybe<Scalars['Instant']['output']>;
  requestedBy?: Maybe<Employee>;
  requestedByDatetime?: Maybe<Scalars['Instant']['output']>;
  requestedDepartment?: Maybe<Department>;
  requestingDepartment?: Maybe<Department>;
  status?: Maybe<Scalars['String']['output']>;
  stockRequestNo?: Maybe<Scalars['String']['output']>;
};

export type StockRequestItem = {
  __typename?: 'StockRequestItem';
  billedToPatient?: Maybe<Scalars['Boolean']['output']>;
  billingItemNo?: Maybe<Scalars['String']['output']>;
  cancelled?: Maybe<Scalars['Boolean']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  deductedToInventory?: Maybe<Scalars['BigDecimal']['output']>;
  expectedBarcode?: Maybe<Scalars['String']['output']>;
  forCashPayment?: Maybe<Scalars['Boolean']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  item?: Maybe<Item>;
  itemDescription?: Maybe<Scalars['String']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  medication?: Maybe<Medication>;
  noStock?: Maybe<Scalars['Boolean']['output']>;
  orderedBy?: Maybe<Employee>;
  preparedQty?: Maybe<Scalars['BigDecimal']['output']>;
  requestedQty?: Maybe<Scalars['BigDecimal']['output']>;
  stockRequest?: Maybe<StockRequest>;
};

export type StockRequestStatusCountDto = {
  __typename?: 'StockRequestStatusCountDto';
  CLAIMABLE?: Maybe<Scalars['Int']['output']>;
  CLAIMED?: Maybe<Scalars['Int']['output']>;
  REQUESTED?: Maybe<Scalars['Int']['output']>;
  SENT?: Maybe<Scalars['Int']['output']>;
};

export type SubAccountSetup = {
  __typename?: 'SubAccountSetup';
  attachedValue?: Maybe<Scalars['BigDecimal']['output']>;
  attrAccrualExpense?: Maybe<Scalars['Boolean']['output']>;
  attrAccrualOfIncome?: Maybe<Scalars['Boolean']['output']>;
  attrBeginningBalance?: Maybe<Scalars['Boolean']['output']>;
  attrCreditMemoAdj?: Maybe<Scalars['Boolean']['output']>;
  attrDebitMemoAdjustment?: Maybe<Scalars['Boolean']['output']>;
  attrExpenseAccount?: Maybe<Scalars['Boolean']['output']>;
  attrInactive?: Maybe<Scalars['Boolean']['output']>;
  attrIncludePostingAccruedIncomeMultipleCustomer?: Maybe<Scalars['Boolean']['output']>;
  attrNonTradeCashReceipts?: Maybe<Scalars['Boolean']['output']>;
  attrVatable?: Maybe<Scalars['Boolean']['output']>;
  category?: Maybe<Scalars['String']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  departmentIncludes?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  includeDepartment?: Maybe<Scalars['Boolean']['output']>;
  journalPlacement?: Maybe<JournalPlacement>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  motherAccounts?: Maybe<Array<Maybe<MotherAccount>>>;
  motherAccountsList?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  requireRemarks?: Maybe<Scalars['Boolean']['output']>;
  selectedDepartments?: Maybe<Array<Maybe<Scalars['UUID']['output']>>>;
  sourceDomain?: Maybe<Scalars['String']['output']>;
  subaccountCode?: Maybe<Scalars['String']['output']>;
  subaccountParent?: Maybe<SubAccountSetup>;
  subaccountType?: Maybe<SubAccountType>;
  subaccountTypeDesc?: Maybe<Scalars['String']['output']>;
};

export enum SubAccountType {
  Adjustments = 'ADJUSTMENTS',
  Assetclass = 'ASSETCLASS',
  Expense = 'EXPENSE',
  Income = 'INCOME',
  Otherentities = 'OTHERENTITIES',
  Otherpayments = 'OTHERPAYMENTS',
  Pettycash = 'PETTYCASH',
  Quantityadjustments = 'QUANTITYADJUSTMENTS',
  Revenueitems = 'REVENUEITEMS'
}

export type Subaccountable = {
  __typename?: 'Subaccountable';
  code?: Maybe<Scalars['String']['output']>;
  config?: Maybe<CoaConfig>;
  department?: Maybe<Array<Maybe<Scalars['UUID']['output']>>>;
  description?: Maybe<Scalars['String']['output']>;
  domain?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
};

export type SubmittedReports = {
  __typename?: 'SubmittedReports';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  department?: Maybe<Scalars['String']['output']>;
  designation?: Maybe<Scalars['String']['output']>;
  dohResponse?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  reportedBy?: Maybe<Scalars['String']['output']>;
  reportingStatus?: Maybe<Scalars['String']['output']>;
  reportingYear?: Maybe<Scalars['Int']['output']>;
  sections?: Maybe<Scalars['String']['output']>;
  submittedDateTime?: Maybe<Scalars['Instant']['output']>;
};

export type Subscription = {
  __typename?: 'Subscription';
  additionalPaidInCapital?: Maybe<Scalars['BigDecimal']['output']>;
  advancesFromInvestors?: Maybe<Scalars['BigDecimal']['output']>;
  balance?: Maybe<Scalars['BigDecimal']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  details?: Maybe<Scalars['Map_String_StringScalar']['output']>;
  discountOnShareCapital?: Maybe<Scalars['BigDecimal']['output']>;
  domain?: Maybe<Scalars['String']['output']>;
  flagValue?: Maybe<Scalars['String']['output']>;
  fullPaymentDate?: Maybe<Scalars['Instant']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  investor?: Maybe<Investor>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  ledgerHeader?: Maybe<Scalars['UUID']['output']>;
  parValue?: Maybe<Scalars['BigDecimal']['output']>;
  shares?: Maybe<Scalars['BigDecimal']['output']>;
  singlePayment?: Maybe<Scalars['Boolean']['output']>;
  subscribedShareCapital?: Maybe<Scalars['BigDecimal']['output']>;
  subscriptionCode?: Maybe<Scalars['String']['output']>;
  subscriptionPrice?: Maybe<Scalars['BigDecimal']['output']>;
  subscriptionReceivable?: Maybe<Scalars['BigDecimal']['output']>;
  total?: Maybe<Scalars['BigDecimal']['output']>;
};

export type SummaryOfPatient = {
  __typename?: 'SummaryOfPatient';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  dohResponse?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  reportingYear?: Maybe<Scalars['Int']['output']>;
  submittedDateTime?: Maybe<Scalars['Instant']['output']>;
  totalDischarges?: Maybe<Scalars['Int']['output']>;
  totalIbd?: Maybe<Scalars['Int']['output']>;
  totalInpatientTransFrom?: Maybe<Scalars['Int']['output']>;
  totalInpatientTransto?: Maybe<Scalars['Int']['output']>;
  totalInpatients?: Maybe<Scalars['Int']['output']>;
  totalNewborn?: Maybe<Scalars['Int']['output']>;
  totalPad?: Maybe<Scalars['Int']['output']>;
  totalPatientRemaining?: Maybe<Scalars['Int']['output']>;
};

export type SummaryOfPatientDto = {
  __typename?: 'SummaryOfPatientDTO';
  response_code?: Maybe<Scalars['String']['output']>;
  response_datetime?: Maybe<Scalars['String']['output']>;
  response_desc?: Maybe<Scalars['String']['output']>;
  response_value?: Maybe<SummaryPatient>;
};

export type SummaryPatient = {
  __typename?: 'SummaryPatient';
  hospOptSummaryOfPatients?: Maybe<SummaryPatients>;
};

export type SummaryPatientDto = {
  __typename?: 'SummaryPatientDto';
  key?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  value?: Maybe<Scalars['Long']['output']>;
};

export type SummaryPatients = {
  __typename?: 'SummaryPatients';
  insert?: Maybe<Scalars['String']['output']>;
  report?: Maybe<DefaultDohResponseDetails>;
};

export type Supplier = {
  __typename?: 'Supplier';
  atcNo?: Maybe<Scalars['String']['output']>;
  code?: Maybe<Scalars['String']['output']>;
  config?: Maybe<CoaConfig>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  creditLimit?: Maybe<Scalars['BigDecimal']['output']>;
  department?: Maybe<Array<Maybe<Scalars['UUID']['output']>>>;
  description?: Maybe<Scalars['String']['output']>;
  domain?: Maybe<Scalars['String']['output']>;
  employeeId?: Maybe<Scalars['UUID']['output']>;
  ewtRate?: Maybe<Scalars['BigDecimal']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  investorId?: Maybe<Scalars['UUID']['output']>;
  isActive?: Maybe<Scalars['Boolean']['output']>;
  isVatInclusive?: Maybe<Scalars['Boolean']['output']>;
  isVatable?: Maybe<Scalars['Boolean']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  leadTime?: Maybe<Scalars['Int']['output']>;
  paymentTerms?: Maybe<PaymentTerm>;
  primaryAddress?: Maybe<Scalars['String']['output']>;
  primaryContactPerson?: Maybe<Scalars['String']['output']>;
  primaryFax?: Maybe<Scalars['String']['output']>;
  primaryTelphone?: Maybe<Scalars['String']['output']>;
  remarks?: Maybe<Scalars['String']['output']>;
  secondaryAddress?: Maybe<Scalars['String']['output']>;
  secondaryContactPerson?: Maybe<Scalars['String']['output']>;
  secondaryFax?: Maybe<Scalars['String']['output']>;
  secondaryTelphone?: Maybe<Scalars['String']['output']>;
  supplierCode?: Maybe<Scalars['String']['output']>;
  supplierEmail?: Maybe<Scalars['String']['output']>;
  supplierEntity?: Maybe<Scalars['String']['output']>;
  supplierFullname?: Maybe<Scalars['String']['output']>;
  supplierTin?: Maybe<Scalars['String']['output']>;
  supplierTypes?: Maybe<SupplierType>;
};

export type SupplierBarcodeItemDto = {
  __typename?: 'SupplierBarcodeItemDto';
  id?: Maybe<Scalars['UUID']['output']>;
  item?: Maybe<Item>;
  unitCost?: Maybe<Scalars['BigDecimal']['output']>;
};

export type SupplierInput = {
  atcNo?: InputMaybe<Scalars['String']['input']>;
  creditLimit?: InputMaybe<Scalars['BigDecimal']['input']>;
  employeeId?: InputMaybe<Scalars['UUID']['input']>;
  ewtRate?: InputMaybe<Scalars['BigDecimal']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  investorId?: InputMaybe<Scalars['UUID']['input']>;
  isActive?: InputMaybe<Scalars['Boolean']['input']>;
  isVatInclusive?: InputMaybe<Scalars['Boolean']['input']>;
  isVatable?: InputMaybe<Scalars['Boolean']['input']>;
  leadTime?: InputMaybe<Scalars['Int']['input']>;
  paymentTerms?: InputMaybe<PaymentTermInput>;
  primaryAddress?: InputMaybe<Scalars['String']['input']>;
  primaryContactPerson?: InputMaybe<Scalars['String']['input']>;
  primaryFax?: InputMaybe<Scalars['String']['input']>;
  primaryTelphone?: InputMaybe<Scalars['String']['input']>;
  remarks?: InputMaybe<Scalars['String']['input']>;
  secondaryAddress?: InputMaybe<Scalars['String']['input']>;
  secondaryContactPerson?: InputMaybe<Scalars['String']['input']>;
  secondaryFax?: InputMaybe<Scalars['String']['input']>;
  secondaryTelphone?: InputMaybe<Scalars['String']['input']>;
  supplierCode?: InputMaybe<Scalars['String']['input']>;
  supplierEmail?: InputMaybe<Scalars['String']['input']>;
  supplierEntity?: InputMaybe<Scalars['String']['input']>;
  supplierFullname?: InputMaybe<Scalars['String']['input']>;
  supplierTin?: InputMaybe<Scalars['String']['input']>;
  supplierTypes?: InputMaybe<SupplierTypeInput>;
};

export type SupplierInventory = {
  __typename?: 'SupplierInventory';
  brand?: Maybe<Scalars['String']['output']>;
  department?: Maybe<Department>;
  descLong?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  item?: Maybe<Item>;
  itemCode?: Maybe<Scalars['String']['output']>;
  onHand?: Maybe<Scalars['Int']['output']>;
  sku?: Maybe<Scalars['String']['output']>;
  supplier?: Maybe<Supplier>;
  unitCost?: Maybe<Scalars['BigDecimal']['output']>;
  unitMeasurement?: Maybe<Scalars['String']['output']>;
};

export type SupplierItem = {
  __typename?: 'SupplierItem';
  brand?: Maybe<Scalars['String']['output']>;
  cost?: Maybe<Scalars['BigDecimal']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  descLong?: Maybe<Scalars['String']['output']>;
  genericName?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  item?: Maybe<Item>;
  itemId?: Maybe<Scalars['String']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  supplier?: Maybe<Supplier>;
  unitMeasurement?: Maybe<Scalars['String']['output']>;
  unitOfPurchase?: Maybe<Scalars['String']['output']>;
};

export type SupplierType = {
  __typename?: 'SupplierType';
  code?: Maybe<Scalars['String']['output']>;
  config?: Maybe<CoaConfig>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  department?: Maybe<Array<Maybe<Scalars['UUID']['output']>>>;
  description?: Maybe<Scalars['String']['output']>;
  domain?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  isActive?: Maybe<Scalars['Boolean']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  subAccountCode?: Maybe<Scalars['String']['output']>;
  supEwtRate?: Maybe<Scalars['Int']['output']>;
  supplierTypeCode?: Maybe<Scalars['String']['output']>;
  supplierTypeDesc?: Maybe<Scalars['String']['output']>;
};

export type SupplierTypeInput = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  isActive?: InputMaybe<Scalars['Boolean']['input']>;
  subAccountCode?: InputMaybe<Scalars['String']['input']>;
  supEwtRate?: InputMaybe<Scalars['Int']['input']>;
  supplierTypeCode?: InputMaybe<Scalars['String']['input']>;
  supplierTypeDesc?: InputMaybe<Scalars['String']['input']>;
};

export type SupplyDto = {
  __typename?: 'SupplyDto';
  allowTrade?: Maybe<Scalars['Boolean']['output']>;
  brand?: Maybe<Scalars['String']['output']>;
  calculatedAmount?: Maybe<Scalars['BigDecimal']['output']>;
  descLong?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  itemCode?: Maybe<Scalars['String']['output']>;
  reorderQty?: Maybe<Scalars['BigDecimal']['output']>;
  sku?: Maybe<Scalars['String']['output']>;
};

export type SupportingDoc = {
  __typename?: 'SupportingDoc';
  attachment?: Maybe<Array<Maybe<Scalars['Byte']['output']>>>;
  attachmentUrl?: Maybe<Scalars['String']['output']>;
  billingItem?: Maybe<BillingItem>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  filename?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  referenceNo?: Maybe<Scalars['String']['output']>;
  remarks?: Maybe<Scalars['String']['output']>;
};

export type SupportingDocInput = {
  attachment?: InputMaybe<Array<InputMaybe<Scalars['Byte']['input']>>>;
  billingItem?: InputMaybe<BillingItemInput>;
  filename?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['UUID']['input']>;
  referenceNo?: InputMaybe<Scalars['String']['input']>;
  remarks?: InputMaybe<Scalars['String']['input']>;
};

export type SurgicalSiteRecord = {
  __typename?: 'SurgicalSiteRecord';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  getaCase?: Maybe<Case>;
  id?: Maybe<Scalars['UUID']['output']>;
  infections?: Maybe<Scalars['Int']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  procedures?: Maybe<Scalars['Int']['output']>;
  remarks?: Maybe<Scalars['String']['output']>;
};

export enum SystemType {
  Lis = 'LIS',
  Ris = 'RIS'
}

export type TestProcedureType = {
  __typename?: 'TestProcedureType';
  code?: Maybe<Scalars['Int']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  groupCode?: Maybe<Scalars['Int']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
};

export type TestProcedureTypeInput = {
  code?: InputMaybe<Scalars['Int']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  groupCode?: InputMaybe<Scalars['Int']['input']>;
};

export type TierDto = {
  __typename?: 'TierDTO';
  calculatedValue?: Maybe<Scalars['BigDecimal']['output']>;
  markup?: Maybe<Scalars['BigDecimal']['output']>;
  tierDetail?: Maybe<PriceTierDetail>;
};

export type TieredService = {
  __typename?: 'TieredService';
  calculatedPrice?: Maybe<Scalars['String']['output']>;
  service?: Maybe<Service>;
};

export type Timekeeping = {
  __typename?: 'Timekeeping';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  deleted?: Maybe<Scalars['Boolean']['output']>;
  deletedEnd?: Maybe<Scalars['Instant']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  payroll?: Maybe<Payroll>;
  status?: Maybe<TimekeepingStatus>;
  timekeepingEmployees?: Maybe<Array<Maybe<TimekeepingEmployee>>>;
};

export type TimekeepingEmployee = {
  __typename?: 'TimekeepingEmployee';
  accumulatedLogSummaryList?: Maybe<Array<Maybe<AccumulatedLogSummary>>>;
  approvedBy?: Maybe<Employee>;
  approvedDate?: Maybe<Scalars['Instant']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  finalizedBy?: Maybe<Employee>;
  finalizedDate?: Maybe<Scalars['Instant']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  payrollEmployee?: Maybe<PayrollEmployee>;
  rejectedBy?: Maybe<Employee>;
  rejectedDate?: Maybe<Scalars['Instant']['output']>;
  status?: Maybe<PayrollEmployeeStatus>;
  timekeeping?: Maybe<Timekeeping>;
};

export enum TimekeepingStatus {
  Active = 'ACTIVE',
  Cancelled = 'CANCELLED',
  Draft = 'DRAFT',
  Finalized = 'FINALIZED'
}

export type TotalDeathsConfig = {
  __typename?: 'TotalDeathsConfig';
  includeMaternal?: Maybe<Scalars['Boolean']['output']>;
  includeNeonatal?: Maybe<Scalars['Boolean']['output']>;
  includeStillBirths?: Maybe<Scalars['Boolean']['output']>;
};

export type TotalDeathsDto = {
  __typename?: 'TotalDeathsDto';
  greater_than_48hrs?: Maybe<Scalars['Int']['output']>;
  less_than_48hrs?: Maybe<Scalars['Int']['output']>;
  no_admission_date?: Maybe<Scalars['Int']['output']>;
  no_discharge_date?: Maybe<Scalars['Int']['output']>;
  no_entry_datetime?: Maybe<Scalars['Int']['output']>;
  total?: Maybe<Scalars['Int']['output']>;
};

export type Totals = {
  __typename?: 'Totals';
  date?: Maybe<Scalars['Instant']['output']>;
  hoursAbsent?: Maybe<Scalars['BigDecimal']['output']>;
  hoursDoubleHoliday?: Maybe<Scalars['BigDecimal']['output']>;
  hoursDoubleHolidayAndRestDay?: Maybe<Scalars['BigDecimal']['output']>;
  hoursDoubleHolidayAndRestDayNSD?: Maybe<Scalars['BigDecimal']['output']>;
  hoursDoubleHolidayAndRestDayOvertime?: Maybe<Scalars['BigDecimal']['output']>;
  hoursDoubleHolidayNSD?: Maybe<Scalars['BigDecimal']['output']>;
  hoursDoubleHolidayOIC?: Maybe<Scalars['BigDecimal']['output']>;
  hoursDoubleHolidayOICNSD?: Maybe<Scalars['BigDecimal']['output']>;
  hoursDoubleHolidayOICOvertime?: Maybe<Scalars['BigDecimal']['output']>;
  hoursDoubleHolidayOvertime?: Maybe<Scalars['BigDecimal']['output']>;
  hoursRegularHoliday?: Maybe<Scalars['BigDecimal']['output']>;
  hoursRegularHolidayAndRestDay?: Maybe<Scalars['BigDecimal']['output']>;
  hoursRegularHolidayAndRestDayNSD?: Maybe<Scalars['BigDecimal']['output']>;
  hoursRegularHolidayAndRestDayOvertime?: Maybe<Scalars['BigDecimal']['output']>;
  hoursRegularHolidayNSD?: Maybe<Scalars['BigDecimal']['output']>;
  hoursRegularHolidayOIC?: Maybe<Scalars['BigDecimal']['output']>;
  hoursRegularHolidayOICNSD?: Maybe<Scalars['BigDecimal']['output']>;
  hoursRegularHolidayOICOvertime?: Maybe<Scalars['BigDecimal']['output']>;
  hoursRegularHolidayOvertime?: Maybe<Scalars['BigDecimal']['output']>;
  hoursRegularOICOvertime?: Maybe<Scalars['BigDecimal']['output']>;
  hoursRegularOvertime?: Maybe<Scalars['BigDecimal']['output']>;
  hoursRestDay?: Maybe<Scalars['BigDecimal']['output']>;
  hoursRestDayNSD?: Maybe<Scalars['BigDecimal']['output']>;
  hoursRestOvertime?: Maybe<Scalars['BigDecimal']['output']>;
  hoursSpecialHoliday?: Maybe<Scalars['BigDecimal']['output']>;
  hoursSpecialHolidayAndRestDay?: Maybe<Scalars['BigDecimal']['output']>;
  hoursSpecialHolidayAndRestDayNSD?: Maybe<Scalars['BigDecimal']['output']>;
  hoursSpecialHolidayAndRestDayOvertime?: Maybe<Scalars['BigDecimal']['output']>;
  hoursSpecialHolidayNSD?: Maybe<Scalars['BigDecimal']['output']>;
  hoursSpecialHolidayOIC?: Maybe<Scalars['BigDecimal']['output']>;
  hoursSpecialHolidayOICNSD?: Maybe<Scalars['BigDecimal']['output']>;
  hoursSpecialHolidayOICOvertime?: Maybe<Scalars['BigDecimal']['output']>;
  hoursSpecialHolidayOvertime?: Maybe<Scalars['BigDecimal']['output']>;
  hoursWorkedNSD?: Maybe<Scalars['BigDecimal']['output']>;
  hoursWorkedOICNSD?: Maybe<Scalars['BigDecimal']['output']>;
  inTime?: Maybe<Scalars['Instant']['output']>;
  isAbsentOnly?: Maybe<Scalars['Boolean']['output']>;
  isEmpty?: Maybe<Scalars['Boolean']['output']>;
  isError?: Maybe<Scalars['Boolean']['output']>;
  isLeave?: Maybe<Scalars['Boolean']['output']>;
  isOvertimeOnly?: Maybe<Scalars['Boolean']['output']>;
  isRestDay?: Maybe<Scalars['Boolean']['output']>;
  isRestDayOnly?: Maybe<Scalars['Boolean']['output']>;
  late?: Maybe<Scalars['BigDecimal']['output']>;
  message?: Maybe<Scalars['String']['output']>;
  outTime?: Maybe<Scalars['Instant']['output']>;
  undertime?: Maybe<Scalars['BigDecimal']['output']>;
  withNSD?: Maybe<Scalars['Boolean']['output']>;
  worked?: Maybe<Scalars['BigDecimal']['output']>;
  workedOIC?: Maybe<Scalars['BigDecimal']['output']>;
};

export type TransactionJournalDto = {
  __typename?: 'TransactionJournalDto';
  approved?: Maybe<Scalars['Long']['output']>;
  entityName?: Maybe<Scalars['String']['output']>;
  journalType?: Maybe<Scalars['String']['output']>;
  notApproved?: Maybe<Scalars['Long']['output']>;
  otherDetail?: Maybe<Scalars['String']['output']>;
  referenceNo?: Maybe<Scalars['String']['output']>;
};

export type TransactionType = {
  __typename?: 'TransactionType';
  asset?: Maybe<Scalars['Boolean']['output']>;
  consignment?: Maybe<Scalars['Boolean']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  flagValue?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  status?: Maybe<Scalars['Boolean']['output']>;
  tag?: Maybe<Scalars['String']['output']>;
};

export type Transfer = {
  __typename?: 'Transfer';
  active?: Maybe<Scalars['Boolean']['output']>;
  consultation?: Maybe<Scalars['String']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  department?: Maybe<Department>;
  entryDateTime?: Maybe<Scalars['Instant']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  opdPhysician?: Maybe<Physician>;
  parentCase?: Maybe<Case>;
  registryType?: Maybe<Scalars['String']['output']>;
  room?: Maybe<Room>;
  status?: Maybe<Scalars['String']['output']>;
  urgency?: Maybe<Scalars['String']['output']>;
  voided?: Maybe<Scalars['Boolean']['output']>;
};

export type TransfersCountDto = {
  __typename?: 'TransfersCountDto';
  discharge_disposition?: Maybe<Scalars['String']['output']>;
  total?: Maybe<Scalars['Int']['output']>;
};

export type TrialBalanceDto = {
  __typename?: 'TrialBalanceDto';
  account?: Maybe<Scalars['String']['output']>;
  alwaysShow?: Maybe<Scalars['Boolean']['output']>;
  balance?: Maybe<Scalars['BigDecimal']['output']>;
  bold?: Maybe<Scalars['Boolean']['output']>;
  boldUnderlined?: Maybe<Scalars['Boolean']['output']>;
  code?: Maybe<Scalars['String']['output']>;
  credit?: Maybe<Scalars['BigDecimal']['output']>;
  debit?: Maybe<Scalars['BigDecimal']['output']>;
  italic?: Maybe<Scalars['Boolean']['output']>;
  normalSide?: Maybe<Scalars['String']['output']>;
  rows?: Maybe<Scalars['Int']['output']>;
  subAccounts?: Maybe<Scalars['String']['output']>;
  subsubAccounts?: Maybe<Scalars['String']['output']>;
};

export type TrialBalanceDto2 = {
  __typename?: 'TrialBalanceDto2';
  account?: Maybe<Scalars['String']['output']>;
  balance?: Maybe<Scalars['BigDecimal']['output']>;
  code?: Maybe<Scalars['String']['output']>;
  credit?: Maybe<Scalars['BigDecimal']['output']>;
  debit?: Maybe<Scalars['BigDecimal']['output']>;
  mainCode?: Maybe<Scalars['String']['output']>;
  normalSide?: Maybe<Scalars['String']['output']>;
  rows?: Maybe<Scalars['Int']['output']>;
  subCode?: Maybe<Scalars['String']['output']>;
};

export type UnitMeasurement = {
  __typename?: 'UnitMeasurement';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  isActive?: Maybe<Scalars['Boolean']['output']>;
  isBig?: Maybe<Scalars['Boolean']['output']>;
  isSmall?: Maybe<Scalars['Boolean']['output']>;
  /** List of Unit Measurement items */
  items_purchase?: Maybe<Array<Maybe<Item>>>;
  /** List of Unit Measurement items */
  items_usage?: Maybe<Array<Maybe<Item>>>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  unitCode?: Maybe<Scalars['String']['output']>;
  unitDescription?: Maybe<Scalars['String']['output']>;
};

export type UnitMeasurementInput = {
  id?: InputMaybe<Scalars['UUID']['input']>;
  isActive?: InputMaybe<Scalars['Boolean']['input']>;
  isBig?: InputMaybe<Scalars['Boolean']['input']>;
  isSmall?: InputMaybe<Scalars['Boolean']['input']>;
  unitCode?: InputMaybe<Scalars['String']['input']>;
  unitDescription?: InputMaybe<Scalars['String']['input']>;
};

export type User = {
  __typename?: 'User';
  /** Get all User access */
  access?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  activated: Scalars['Boolean']['output'];
  activationKey?: Maybe<Scalars['String']['output']>;
  authorities?: Maybe<Array<Maybe<Authority>>>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  email?: Maybe<Scalars['String']['output']>;
  employee?: Maybe<Employee>;
  firstName?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Long']['output']>;
  langKey?: Maybe<Scalars['String']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  lastName?: Maybe<Scalars['String']['output']>;
  login: Scalars['String']['output'];
  password: Scalars['String']['output'];
  permissions?: Maybe<Array<Maybe<Permission>>>;
  /** Get all User persistentTokens */
  persistentTokens?: Maybe<Array<Maybe<PersistentToken>>>;
  resetDate?: Maybe<Scalars['LocalDateTime']['output']>;
  resetKey?: Maybe<Scalars['String']['output']>;
  /** Get all User roles */
  roles?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
};

export type UserInput = {
  activated: Scalars['Boolean']['input'];
  createdDate?: InputMaybe<Scalars['Instant']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  employee?: InputMaybe<EmployeeInput>;
  firstName?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Long']['input']>;
  langKey?: InputMaybe<Scalars['String']['input']>;
  lastName?: InputMaybe<Scalars['String']['input']>;
  login: Scalars['String']['input'];
  resetDate?: InputMaybe<Scalars['LocalDateTime']['input']>;
  resetKey?: InputMaybe<Scalars['String']['input']>;
};

export type Vaccination = {
  __typename?: 'Vaccination';
  brand?: Maybe<Scalars['String']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  firstDose?: Maybe<Scalars['Instant']['output']>;
  fullVaccinated?: Maybe<Scalars['Boolean']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  notApplicable?: Maybe<Scalars['Boolean']['output']>;
  other?: Maybe<Scalars['String']['output']>;
  patient?: Maybe<Patient>;
  secondDose?: Maybe<Scalars['Instant']['output']>;
  vaccinated?: Maybe<Scalars['Boolean']['output']>;
};

export type VentilatorRecord = {
  __typename?: 'VentilatorRecord';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  endDate?: Maybe<Scalars['Instant']['output']>;
  getaCase?: Maybe<Case>;
  id?: Maybe<Scalars['UUID']['output']>;
  items?: Maybe<Array<Maybe<VentilatorRecordItem>>>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  startDate?: Maybe<Scalars['Instant']['output']>;
};

export type VentilatorRecordItem = {
  __typename?: 'VentilatorRecordItem';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  fi02?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  peep?: Maybe<Scalars['Int']['output']>;
  sputumCharacter?: Maybe<Scalars['String']['output']>;
  sputumCharacterRemarks?: Maybe<Scalars['String']['output']>;
  sputumResult?: Maybe<Scalars['String']['output']>;
  sputumResultRemarks?: Maybe<Scalars['String']['output']>;
  ventilatorRecord?: Maybe<VentilatorRecord>;
};

export type VisitsDto = {
  __typename?: 'VisitsDTO';
  adult: Scalars['Int']['output'];
  adultGeneralMedicine: Scalars['Int']['output'];
  antenatal: Scalars['Int']['output'];
  hfhudcode?: Maybe<Scalars['String']['output']>;
  newPatient: Scalars['Int']['output'];
  pediatric: Scalars['Int']['output'];
  postnatal: Scalars['Int']['output'];
  reportingYear: Scalars['Int']['output'];
  revisit: Scalars['Int']['output'];
  specialtyNonSurgical: Scalars['Int']['output'];
  surgical: Scalars['Int']['output'];
};

export type VitalSign = {
  __typename?: 'VitalSign';
  cbc?: Maybe<Scalars['String']['output']>;
  cbs?: Maybe<Scalars['String']['output']>;
  cgs?: Maybe<Scalars['String']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  crt?: Maybe<Scalars['String']['output']>;
  diastolic?: Maybe<Scalars['String']['output']>;
  employee?: Maybe<Employee>;
  entryDateTime?: Maybe<Scalars['Instant']['output']>;
  fetalHr?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  note?: Maybe<Scalars['String']['output']>;
  oxygenSaturation?: Maybe<Scalars['String']['output']>;
  painScore?: Maybe<Scalars['String']['output']>;
  parentCase?: Maybe<Case>;
  pulseRate?: Maybe<Scalars['String']['output']>;
  remarks?: Maybe<Scalars['String']['output']>;
  respiratoryRate?: Maybe<Scalars['String']['output']>;
  systolic?: Maybe<Scalars['String']['output']>;
  temperature?: Maybe<Scalars['String']['output']>;
  weight?: Maybe<Scalars['String']['output']>;
};

export type Wtx2307 = {
  __typename?: 'Wtx2307';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  ewtAmount?: Maybe<Scalars['BigDecimal']['output']>;
  gross?: Maybe<Scalars['BigDecimal']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  netVat?: Maybe<Scalars['BigDecimal']['output']>;
  process?: Maybe<Scalars['Boolean']['output']>;
  refId?: Maybe<Scalars['UUID']['output']>;
  refNo?: Maybe<Scalars['String']['output']>;
  supplier?: Maybe<Supplier>;
  type?: Maybe<Scalars['String']['output']>;
  vatAmount?: Maybe<Scalars['BigDecimal']['output']>;
  wtxConsolidated?: Maybe<Scalars['UUID']['output']>;
  wtxDate?: Maybe<Scalars['Instant']['output']>;
};

export type Wtx2307Consolidated = {
  __typename?: 'Wtx2307Consolidated';
  createdBy?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['Instant']['output']>;
  dateFrom?: Maybe<Scalars['Instant']['output']>;
  dateTo?: Maybe<Scalars['Instant']['output']>;
  ewtAmount?: Maybe<Scalars['BigDecimal']['output']>;
  id?: Maybe<Scalars['UUID']['output']>;
  lastModifiedBy?: Maybe<Scalars['String']['output']>;
  lastModifiedDate?: Maybe<Scalars['Instant']['output']>;
  refNo?: Maybe<Scalars['String']['output']>;
  remarks?: Maybe<Scalars['String']['output']>;
  supplier?: Maybe<Supplier>;
};
